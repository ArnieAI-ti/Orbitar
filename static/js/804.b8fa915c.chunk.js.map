{"version":3,"file":"static/js/804.b8fa915c.chunk.js","mappings":"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","sources":["shared/components/PropsRoute.js","shared/functions/useLocationBlocker.js","shared/functions/smoothScrollTop.js","shared/components/HighlightedInformation.js","shared/components/Bordered.js","logged_in/components/dashboard/Settings1.js","shared/components/HelpIcon.js","logged_in/components/dashboard/Settings2.js","logged_in/components/dashboard/SettingsArea.js","shared/components/EnhancedTableHead.js","shared/functions/stableSort.js","shared/functions/getSorting.js","shared/components/ConfirmationDialog.js","logged_in/components/dashboard/UserDataArea.js","logged_in/components/dashboard/AccountInformationArea.js","logged_in/components/dashboard/StatisticsArea.js","logged_in/components/dashboard/Dashboard.js","shared/components/VertOptions.js","shared/components/SelfAligningImage.js","logged_in/components/posts/PostContent.js","shared/components/ActionPaper.js","shared/components/ImageCropperDialog.js","logged_in/components/posts/AddPostOptions.js","logged_in/components/posts/AddPost.js","logged_in/components/posts/Posts.js","shared/components/ColorfulChip.js","shared/functions/unixToDateString.js","shared/functions/currencyPrettyPrint.js","logged_in/components/subscription/SubscriptionTable.js","logged_in/components/subscription/SubscriptionInfo.js","logged_in/components/subscription/Subscription.js","logged_in/components/Routing.js","logged_in/components/navigation/MessageListItem.js","logged_in/components/navigation/MessagePopperButton.js","logged_in/components/navigation/SideDrawer.js","logged_in/components/navigation/Balance.js","logged_in/components/navigation/NavBar.js","shared/components/ConsecutiveSnackbarMessages.js","logged_in/dummy_data/persons.js","logged_in/components/subscription/LazyLoadAddBalanceDialog.js","logged_in/components/Main.js","shared/components/ButtonCircularProgress.js","shared/components/NavigationDrawer.js","shared/functions/shadeColor.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst renderMergedProps = (component, ...rest) => {\r\n  const finalProps = Object.assign({}, ...rest);\r\n  return React.createElement(component, finalProps);\r\n};\r\n\r\n/**\r\n * Wrapper around the Router component, which makes it pass the properties\r\n * to it's child.\r\n * Taken from https://github.com/ReactTraining/react-router/issues/4105\r\n */\r\nconst PropsRoute = ({ component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={routeProps => renderMergedProps(component, routeProps, rest)}\r\n  />\r\n);\r\n\r\nPropsRoute.propTypes = {\r\n  component: PropTypes.oneOfType([PropTypes.elementType, PropTypes.node])\r\n};\r\n\r\nexport default PropsRoute;\r\n","import { useHistory } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nconst useLocationBlocker = () => {\r\n  /** \r\n   * Prevents react-router from pushing the same\r\n   * page to the history twice which leads to\r\n   * multiple clicks on the back icon of the browser\r\n   * being necessary to go back into the history.\r\n  */\r\n  const history = useHistory();\r\n  useEffect(\r\n    () =>\r\n      history.block(\r\n        (location, action) =>\r\n          action !== \"PUSH\" ||\r\n          getLocationId(location) !== getLocationId(history.location)\r\n      ),\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n}\r\n\r\nconst getLocationId = ({ pathname, search, hash }) => {\r\n  return pathname + (search ? \"?\" + search : \"\") + (hash ? \"#\" + hash : \"\");\r\n}\r\n\r\nexport default useLocationBlocker;","/**\r\n * When called scrolls smooth to the top of the page.\r\n * globLastC prevents shaky animations when scrolling to\r\n * bottom while topscrolling.\r\n */\r\nlet globLastC = Infinity;\r\n\r\nfunction smoothScrollTopRec() {\r\n  const c = document.documentElement.scrollTop || document.body.scrollTop;\r\n  if (c > 0 && globLastC > c) {\r\n    globLastC = c;\r\n    window.requestAnimationFrame(smoothScrollTopRec);\r\n    window.scrollTo(0, c - c / 8);\r\n  } else {\r\n    globLastC = Infinity;\r\n  }\r\n}\r\n\r\nfunction smoothScrollTop() {\r\n  /**\r\n   * Normally this gets called from componentDidMount()\r\n   * Not waiting a tiny fraction of time can lead\r\n   * to shaky behaviour\r\n   */\r\n  setTimeout(() => {\r\n    smoothScrollTopRec();\r\n  }, 10);\r\n}\r\n\r\nexport default smoothScrollTop;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { Typography } from \"@mui/material\";\r\n\r\nimport withStyles from '@mui/styles/withStyles';\r\n\r\nconst styles = theme => ({\r\n  main: {\r\n    backgroundColor: theme.palette.warning.light,\r\n    border: `${theme.border.borderWidth}px solid ${theme.palette.warning.main}`,\r\n    padding: theme.spacing(2),\r\n    borderRadius: theme.shape.borderRadius\r\n  }\r\n});\r\n\r\nfunction HighlighedInformation(props) {\r\n  const { className, children, classes } = props;\r\n  return (\r\n    <div className={classNames(classes.main, className ? className : null)}>\r\n      <Typography variant=\"body2\">{children}</Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nHighlighedInformation.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.element,\r\n    PropTypes.array\r\n  ]).isRequired,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(HighlighedInformation);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from '@mui/styles/withStyles';\r\n\r\nconst styles = theme => ({\r\n  wrapper: {\r\n    border: `${theme.border.borderWidth}px solid ${theme.border.borderColor}`\r\n  },\r\n  greyed: {\r\n    border: `${theme.border.borderWidth}px solid rgba(0, 0, 0, 0.23)`\r\n  }\r\n});\r\n\r\nfunction Bordered(props) {\r\n  const {\r\n    classes,\r\n    theme,\r\n    disableVerticalPadding,\r\n    disableBorderRadius,\r\n    children,\r\n    variant\r\n  } = props;\r\n  return (\r\n    <div\r\n      className={variant === \"greyed\" ? classes.greyed : classes.wrapper}\r\n      style={{\r\n        paddingLeft: disableVerticalPadding ? 0 : theme.spacing(2),\r\n        paddingRight: disableVerticalPadding ? 0 : theme.spacing(2),\r\n        borderRadius: disableBorderRadius ? 0 : theme.shape.borderRadius\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nBordered.propTypes = {\r\n  classes: PropTypes.object,\r\n  theme: PropTypes.object,\r\n  disableVerticalPadding: PropTypes.bool,\r\n  disableBorderRadius: PropTypes.bool,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.element,\r\n    PropTypes.func,\r\n    PropTypes.array\r\n  ]),\r\n  variant: PropTypes.string\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(Bordered);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemSecondaryAction,\r\n  Button,\r\n  Accordion,\r\n  AccordionSummary,\r\n  Typography,\r\n  ListItemText,\r\n  OutlinedInput,\r\n  AccordionDetails,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport Bordered from \"../../../shared/components/Bordered\";\r\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\r\n\r\nconst styles = (theme) => ({\r\n  numberInput: {\r\n    width: 110,\r\n  },\r\n  numberInputInput: {\r\n    padding: \"9px 34px 9px 14.5px\",\r\n  },\r\n  dBlock: { display: \"block\" },\r\n  listItemLeftPadding: {\r\n    paddingRight: theme.spacing(3),\r\n  },\r\n  accordionDetails: {\r\n    paddintTop: theme.spacing(0),\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n});\r\nconst inputOptions = [\"None\", \"Slow\", \"Normal\", \"Fast\"];\r\n\r\nfunction Settings1(props) {\r\n  const { classes, pushMessageToSnackbar } = props;\r\n  const [isSaveLoading, setIsSaveLoading] = useState(false);\r\n  const [isDefaultLoading, setIsDefaultLoading] = useState(false);\r\n  const [option1, setOption1] = useState(\"None\");\r\n  const [option2, setOption2] = useState(\"None\");\r\n  const [option3, setOption3] = useState(\"None\");\r\n  const [option4, setOption4] = useState(\"None\");\r\n  const [option5, setOption5] = useState(\"2 Days\");\r\n  const [option6, setOption6] = useState(7500);\r\n\r\n  const handleChange = useCallback(\r\n    (event) => {\r\n      const { name, value } = event.target;\r\n      if (name === \"option6\") {\r\n        if (value > 7500 || value < 1000) {\r\n          return;\r\n        }\r\n      }\r\n      switch (name) {\r\n        case \"option1\": {\r\n          setOption1(value);\r\n          break;\r\n        }\r\n        case \"option2\": {\r\n          setOption2(value);\r\n          break;\r\n        }\r\n        case \"option3\": {\r\n          setOption3(value);\r\n          break;\r\n        }\r\n        case \"option4\": {\r\n          setOption4(value);\r\n          break;\r\n        }\r\n        case \"option5\": {\r\n          setOption5(value);\r\n          break;\r\n        }\r\n        case \"option6\": {\r\n          setOption6(value);\r\n          break;\r\n        }\r\n        default:\r\n          throw new Error(\"No branch selected in switch statement.\");\r\n      }\r\n    },\r\n    [setOption1, setOption2, setOption3, setOption4, setOption5, setOption6]\r\n  );\r\n\r\n  const resetState = useCallback(() => {\r\n    setIsSaveLoading(false);\r\n    setIsDefaultLoading(false);\r\n    setOption1(\"None\");\r\n    setOption2(\"None\");\r\n    setOption3(\"None\");\r\n    setOption4(\"None\");\r\n    setOption5(\"2 Days\");\r\n    setOption6(7500);\r\n  }, [\r\n    setIsSaveLoading,\r\n    setIsDefaultLoading,\r\n    setOption1,\r\n    setOption2,\r\n    setOption3,\r\n    setOption4,\r\n    setOption5,\r\n    setOption6,\r\n  ]);\r\n\r\n  const onSetDefault = useCallback(() => {\r\n    setIsDefaultLoading(true);\r\n    setTimeout(() => {\r\n      pushMessageToSnackbar({\r\n        text: \"Your settings have been reset to default\",\r\n      });\r\n      resetState();\r\n    }, 1500);\r\n  }, [pushMessageToSnackbar, resetState]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    setIsSaveLoading(true);\r\n    setTimeout(() => {\r\n      pushMessageToSnackbar({\r\n        text: \"Your settings have been saved\",\r\n      });\r\n      setIsSaveLoading(false);\r\n    }, 1500);\r\n  }, [setIsSaveLoading, pushMessageToSnackbar]);\r\n\r\n  const inputs = [\r\n    {\r\n      state: option1,\r\n      label: \"Option 1\",\r\n      stateName: \"option1\",\r\n    },\r\n    {\r\n      state: option2,\r\n      label: \"Option 2\",\r\n      stateName: \"option2\",\r\n    },\r\n    {\r\n      state: option3,\r\n      label: \"Option 3\",\r\n      stateName: \"option3\",\r\n    },\r\n    {\r\n      state: option4,\r\n      label: \"Option 4\",\r\n      stateName: \"option4\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Accordion>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Settings 1</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails className={classes.dBlock}>\r\n        <List disablePadding>\r\n          <Bordered disableVerticalPadding disableBorderRadius>\r\n            {inputs.map((element, index) => (\r\n              <ListItem\r\n                className=\"listItemLeftPadding\"\r\n                disableGutters\r\n                divider\r\n                key={index}\r\n              >\r\n                <ListItemText>\r\n                  <Typography variant=\"body2\">{element.label}</Typography>\r\n                </ListItemText>\r\n                <FormControl variant=\"outlined\">\r\n                  <ListItemSecondaryAction\r\n                    className={classes.ListItemSecondaryAction}\r\n                  >\r\n                    <Select\r\n                      value={element.state}\r\n                      onChange={handleChange}\r\n                      input={\r\n                        <OutlinedInput\r\n                          name={element.stateName}\r\n                          labelWidth={0}\r\n                          className={classes.numberInput}\r\n                          classes={{ input: classes.numberInputInput }}\r\n                        />\r\n                      }\r\n                      MenuProps={{ disableScrollLock: true }}\r\n                    >\r\n                      {inputOptions.map((innerElement) => (\r\n                        <MenuItem value={innerElement} key={innerElement}>\r\n                          {innerElement}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </ListItemSecondaryAction>\r\n                </FormControl>\r\n              </ListItem>\r\n            ))}\r\n            <ListItem className=\"listItemLeftPadding\" disableGutters divider>\r\n              <ListItemText>\r\n                <Typography variant=\"body2\">Option 5</Typography>\r\n              </ListItemText>\r\n              <FormControl variant=\"outlined\">\r\n                <ListItemSecondaryAction\r\n                  className={classes.ListItemSecondaryAction}\r\n                >\r\n                  <Select\r\n                    value={option5}\r\n                    onChange={handleChange}\r\n                    input={\r\n                      <OutlinedInput\r\n                        name=\"option5\"\r\n                        labelWidth={0}\r\n                        className={classes.numberInput}\r\n                        classes={{ input: classes.numberInputInput }}\r\n                      />\r\n                    }\r\n                    MenuProps={{ disableScrollLock: true }}\r\n                  >\r\n                    {[\r\n                      \"Always\",\r\n                      \"6 Hours\",\r\n                      \"12 Hours\",\r\n                      \"1 Day\",\r\n                      \"2 Days\",\r\n                      \"3 Days\",\r\n                      \"1 Week\",\r\n                    ].map((element) => (\r\n                      <MenuItem value={element} key={element}>\r\n                        {element}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </ListItemSecondaryAction>\r\n              </FormControl>\r\n            </ListItem>\r\n            <ListItem className=\"listItemLeftPadding\" disableGutters>\r\n              <ListItemText>\r\n                <Typography variant=\"body2\">Option 6</Typography>\r\n              </ListItemText>\r\n              <FormControl variant=\"outlined\">\r\n                <ListItemSecondaryAction\r\n                  className={classes.ListItemSecondaryAction}\r\n                >\r\n                  <OutlinedInput\r\n                    labelWidth={0}\r\n                    name=\"option6\"\r\n                    value={option6}\r\n                    type=\"number\"\r\n                    onChange={handleChange}\r\n                    className={classes.numberInput}\r\n                    classes={{ input: classes.numberInputInput }}\r\n                    inputProps={{ step: 20 }}\r\n                  />\r\n                </ListItemSecondaryAction>\r\n              </FormControl>\r\n            </ListItem>\r\n          </Bordered>\r\n        </List>\r\n      </AccordionDetails>\r\n      <AccordionDetails className={classes.accordionDetails}>\r\n        <Box mr={1}>\r\n          <Button\r\n            onClick={onSetDefault}\r\n            disabled={isSaveLoading || isDefaultLoading}\r\n          >\r\n            Default {isDefaultLoading && <ButtonCircularProgress />}\r\n          </Button>\r\n        </Box>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          disabled={isSaveLoading || isDefaultLoading}\r\n          onClick={onSubmit}\r\n        >\r\n          Save {isSaveLoading && <ButtonCircularProgress />}\r\n        </Button>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nSettings1.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(Settings1);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Tooltip, Typography } from \"@mui/material\";\r\nimport withStyles from '@mui/styles/withStyles';\r\nimport HelpIconOutline from \"@mui/icons-material/HelpOutline\";\r\n\r\nconst styles = theme => ({\r\n  tooltipTypo: {\r\n    whiteSpace: \"pre-line !important\",\r\n    ...theme.typography.caption,\r\n    color: theme.palette.common.white\r\n  },\r\n  tooltip: {\r\n    verticalAlign: \"middle\",\r\n    fontSize: \"1.25rem\"\r\n  },\r\n  helpIcon: {\r\n    marginLeft: theme.spacing(1),\r\n    \"@media (max-width: 350px)\": {\r\n      marginLeft: theme.spacing(0.5)\r\n    },\r\n    transition: theme.transitions.create([\"color\"], {\r\n      duration: theme.transitions.duration.short,\r\n      easing: theme.transitions.easing.easeInOut\r\n    })\r\n  }\r\n});\r\n\r\nfunction HelpIcon(props) {\r\n  const { classes, title } = props;\r\n  const [isHovered, setIsHovered] = useState(false);\r\n\r\n  const onMouseOver = useCallback(() => {\r\n    setIsHovered(true);\r\n  }, []);\r\n\r\n  const onMouseLeave = useCallback(() => {\r\n    setIsHovered(false);\r\n  }, []);\r\n\r\n  return (\r\n    <Tooltip\r\n      title={\r\n        <Typography variant=\"body2\" className={classes.tooltipTypo}>\r\n          {title}\r\n        </Typography>\r\n      }\r\n      className={classes.tooltip}\r\n      enterTouchDelay={300}\r\n    >\r\n      <HelpIconOutline\r\n        /**\r\n         * We have to use onMouseOver and not onMouseEnter, because if we have overlapping\r\n         * tooltips, the onMouseEnter wont fire when the old tooltip is fading\r\n         * */\r\n        onMouseOver={onMouseOver}\r\n        onFocus={onMouseOver}\r\n        onBlur={onMouseLeave}\r\n        onMouseLeave={onMouseLeave}\r\n        color={isHovered ? \"primary\" : \"inherit\"}\r\n        className={classes.helpIcon}\r\n        style={{ cursor: isHovered ? \"pointer\" : \"auto\" }}\r\n      />\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nHelpIcon.propTypes = {\r\n  classes: PropTypes.object,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node])\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(HelpIcon);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Typography,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  FormControl,\r\n  Select,\r\n  OutlinedInput,\r\n  MenuItem,\r\n  Checkbox,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport HelpIcon from \"../../../shared/components/HelpIcon\";\r\nimport Bordered from \"../../../shared/components/Bordered\";\r\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\r\n\r\nconst styles = (theme) => ({\r\n  numberInput: {\r\n    width: 120,\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: 80,\r\n    },\r\n    \"@media (max-width: 350px)\": {\r\n      width: 65,\r\n    },\r\n  },\r\n  numberInputInput: {\r\n    padding: \"9px 14.5px\",\r\n    \"@media (max-width: 380px)\": {\r\n      padding: \"9px 8.5px\",\r\n    },\r\n    \"@media (max-width: 350px)\": {\r\n      padding: \"9px 6.5px\",\r\n    },\r\n  },\r\n  listItem: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingLeft: theme.spacing(4),\r\n    },\r\n    paddingLeft: 100,\r\n  },\r\n  AccordionDetails: {\r\n    paddingTop: theme.spacing(0),\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  dBlock: {\r\n    display: \"block\",\r\n  },\r\n});\r\n\r\nfunction Settings2(props) {\r\n  const { pushMessageToSnackbar, classes } = props;\r\n  const [isDefaultLoading, setIsDefaultLoading] = useState(false);\r\n  const [isSaveLoading, setIsSaveLoading] = useState(false);\r\n  const [option1, setOption1] = useState(false);\r\n  const [option2, setOption2] = useState(false);\r\n  const [option3, setOption3] = useState(false);\r\n  const [option4, setOption4] = useState(false);\r\n  const [option5, setOption5] = useState(false);\r\n  const [option6, setOption6] = useState(\"Both\");\r\n  const [option7, setOption7] = useState(\"2 weeks\");\r\n\r\n  const resetState = useCallback(() => {\r\n    setIsDefaultLoading(false);\r\n    setIsSaveLoading(false);\r\n    setOption1(false);\r\n    setOption2(false);\r\n    setOption3(false);\r\n    setOption4(false);\r\n    setOption5(false);\r\n    setOption6(\"Both\");\r\n    setOption7(\"2 weeks\");\r\n  }, [\r\n    setOption1,\r\n    setOption2,\r\n    setOption3,\r\n    setOption4,\r\n    setOption5,\r\n    setOption6,\r\n    setOption7,\r\n  ]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    setIsSaveLoading(true);\r\n    setTimeout(() => {\r\n      pushMessageToSnackbar({\r\n        text: \"Your settings have been saved\",\r\n      });\r\n      setIsSaveLoading(false);\r\n    }, 1500);\r\n  }, [pushMessageToSnackbar, setIsSaveLoading]);\r\n\r\n  const onSetDefault = useCallback(() => {\r\n    setIsDefaultLoading(true);\r\n    setTimeout(() => {\r\n      pushMessageToSnackbar({\r\n        text: \"Your settings have been reset to default\",\r\n      });\r\n      resetState();\r\n    }, 1500);\r\n  }, [pushMessageToSnackbar, resetState, setIsDefaultLoading]);\r\n\r\n  const handleInputChange = useCallback(\r\n    (event) => {\r\n      const { name, value } = event.target;\r\n      switch (name) {\r\n        case \"option6\": {\r\n          setOption6(value);\r\n          break;\r\n        }\r\n        case \"option7\": {\r\n          setOption7(value);\r\n          break;\r\n        }\r\n        default:\r\n          throw new Error(\"No branch selected in switch statement\");\r\n      }\r\n    },\r\n    [setOption6, setOption7]\r\n  );\r\n\r\n  const handleCheckboxChange = (name) => (event) => {\r\n    switch (name) {\r\n      case \"option1\":\r\n        setOption1(event.target.checked);\r\n        break;\r\n      case \"option2\":\r\n        setOption2(event.target.checked);\r\n        break;\r\n      case \"option3\":\r\n        setOption3(event.target.checked);\r\n        break;\r\n      case \"option4\":\r\n        setOption4(event.target.checked);\r\n        break;\r\n      case \"option5\":\r\n        setOption5(event.target.checked);\r\n        break;\r\n      default:\r\n        throw new Error(\"No branch selected in switch statement.\");\r\n    }\r\n  };\r\n\r\n  const inputs = [\r\n    {\r\n      title: \"Option 1\",\r\n      secondaryAction: (\r\n        <Checkbox\r\n          value=\"option1\"\r\n          color=\"primary\"\r\n          checked={option1}\r\n          onChange={handleCheckboxChange(\"option1\")}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Option 2\",\r\n      secondaryAction: (\r\n        <Checkbox\r\n          value=\"option2\"\r\n          color=\"primary\"\r\n          checked={option2}\r\n          onChange={handleCheckboxChange(\"option2\")}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Option 3\",\r\n      secondaryAction: (\r\n        <Checkbox\r\n          value=\"option3\"\r\n          color=\"primary\"\r\n          checked={option3}\r\n          onChange={handleCheckboxChange(\"option3\")}\r\n        />\r\n      ),\r\n      helpText: \"You can add some further explanation here.\",\r\n    },\r\n    {\r\n      title: \"Option 4\",\r\n      secondaryAction: (\r\n        <Checkbox\r\n          value=\"option4\"\r\n          color=\"primary\"\r\n          checked={option4}\r\n          onChange={handleCheckboxChange(\"option4\")}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Option 5\",\r\n      secondaryAction: (\r\n        <Checkbox\r\n          value=\"option5\"\r\n          color=\"primary\"\r\n          checked={option5}\r\n          onChange={handleCheckboxChange(\"option5\")}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Option 6\",\r\n      secondaryAction: (\r\n        <Select\r\n          value={option6}\r\n          input={\r\n            <OutlinedInput\r\n              onChange={handleInputChange}\r\n              labelWidth={0}\r\n              className={classes.numberInput}\r\n              classes={{ input: classes.numberInputInput }}\r\n              name=\"option6\"\r\n            />\r\n          }\r\n        >\r\n          <MenuItem value=\"Both\">Both</MenuItem>\r\n          <MenuItem value=\"Male+\">Male+</MenuItem>\r\n          <MenuItem value=\"Female+\">Female+</MenuItem>\r\n          <MenuItem value=\"Only male\">Only male</MenuItem>\r\n          <MenuItem value=\"Only female\">Only female</MenuItem>\r\n        </Select>\r\n      ),\r\n      helpText: \"You can add some further explanation here.\",\r\n    },\r\n    {\r\n      title: \"Option 7\",\r\n      secondaryAction: (\r\n        <Select\r\n          value={option7}\r\n          input={\r\n            <OutlinedInput\r\n              onChange={handleInputChange}\r\n              labelWidth={0}\r\n              className={classes.numberInput}\r\n              classes={{ input: classes.numberInputInput }}\r\n              name=\"option7\"\r\n            />\r\n          }\r\n        >\r\n          <MenuItem value=\"None\">None</MenuItem>\r\n          <MenuItem value=\"6 hours\">6 hours</MenuItem>\r\n          <MenuItem value=\"12 hours\">12 hours</MenuItem>\r\n          <MenuItem value=\"1 day\">1 day</MenuItem>\r\n          <MenuItem value=\"3 days\">3 days</MenuItem>\r\n          <MenuItem value=\"1 week\">1 week</MenuItem>\r\n          <MenuItem value=\"2 weeks\">2 weeks</MenuItem>\r\n          <MenuItem value=\"1 month\">1 month</MenuItem>\r\n          <MenuItem value=\"3 months\">3 months</MenuItem>\r\n          <MenuItem value=\"6 months\">6 months</MenuItem>\r\n        </Select>\r\n      ),\r\n      helpText: \"You can add some further explanation here.\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Accordion>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Settings 2</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails className={classes.dBlock}>\r\n        <List disablePadding>\r\n          <Bordered disableVerticalPadding disableBorderRadius>\r\n            {inputs.map((element, index) => (\r\n              <ListItem\r\n                key={index}\r\n                divider={index !== inputs.length - 1}\r\n                className=\"listItemLeftPadding\"\r\n              >\r\n                <ListItemText>\r\n                  <Typography variant=\"body2\">\r\n                    {element.title}\r\n                    {element.helpText && <HelpIcon title={element.helpText} />}\r\n                  </Typography>\r\n                </ListItemText>\r\n                <ListItemSecondaryAction>\r\n                  <FormControl variant=\"outlined\">\r\n                    {element.secondaryAction}\r\n                  </FormControl>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            ))}\r\n          </Bordered>\r\n        </List>\r\n      </AccordionDetails>\r\n      <AccordionDetails className={classes.AccordionDetails}>\r\n        <Box mr={1}>\r\n          <Button\r\n            onClick={onSetDefault}\r\n            disabled={isSaveLoading || isDefaultLoading}\r\n          >\r\n            Default {isDefaultLoading && <ButtonCircularProgress />}\r\n          </Button>\r\n        </Box>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={onSubmit}\r\n          disabled={isSaveLoading || isDefaultLoading}\r\n        >\r\n          Save {isSaveLoading && <ButtonCircularProgress />}\r\n        </Button>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nSettings2.propTypes = {\r\n  classes: PropTypes.object,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(Settings2);\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Settings1 from \"./Settings1\";\r\nimport Settings2 from \"./Settings2\";\r\n\r\nfunction SettingsArea(props) {\r\n  const { pushMessageToSnackbar } = props;\r\n  return (\r\n    <Fragment>\r\n      <Settings1 pushMessageToSnackbar={pushMessageToSnackbar} />\r\n      <Settings2 pushMessageToSnackbar={pushMessageToSnackbar} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nSettingsArea.propTypes = {\r\n  pushMessageToSnackbar: PropTypes.func\r\n};\r\n\r\nexport default SettingsArea;\r\n","import React, { useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { Typography, TableCell, TableHead, TableRow, TableSortLabel, Tooltip } from \"@mui/material\";\r\n\r\nimport withStyles from '@mui/styles/withStyles';\r\n\r\nconst styles = theme => ({\r\n  tableSortLabel: {\r\n    cursor: \"text\",\r\n    userSelect: \"auto\",\r\n    color: \"inherit !important\"\r\n  },\r\n  noIcon: {\r\n    \"& path\": {\r\n      display: \"none !important\"\r\n    }\r\n  },\r\n  paddingFix: {\r\n    paddingLeft: theme.spacing(3)\r\n  }\r\n});\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { order, orderBy, rows, onRequestSort, classes } = props;\r\n\r\n  const createSortHandler = useCallback(\r\n    property => event => {\r\n      onRequestSort(event, property);\r\n    },\r\n    [onRequestSort]\r\n  );\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {rows.map((row, index) => (\r\n          <TableCell\r\n            key={index}\r\n            align={row.numeric ? \"right\" : \"inherit\"}\r\n            padding=\"normal\"\r\n            sortDirection={orderBy === row.name ? order : false}\r\n            className={index === 0 ? classes.paddingFix : null}\r\n          >\r\n            {onRequestSort ? (\r\n              <Tooltip\r\n                title=\"Sort\"\r\n                placement={row.numeric ? \"bottom-end\" : \"bottom-start\"}\r\n                enterDelay={300}\r\n              >\r\n                <TableSortLabel\r\n                  active={orderBy === row.id}\r\n                  direction={order}\r\n                  onClick={createSortHandler(row.id)}\r\n                >\r\n                  <Typography variant=\"body2\">{row.label}</Typography>\r\n                </TableSortLabel>\r\n              </Tooltip>\r\n            ) : (\r\n              <TableSortLabel\r\n                className={classNames(classes.tableSortLabel, classes.noIcon)}\r\n              >\r\n                <Typography variant=\"body2\" className={classes.label}>\r\n                  {row.label}\r\n                </Typography>\r\n              </TableSortLabel>\r\n            )}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  onRequestSort: PropTypes.func,\r\n  order: PropTypes.string,\r\n  orderBy: PropTypes.string,\r\n  rows: PropTypes.arrayOf(PropTypes.object).isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(EnhancedTableHead);\r\n","function stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\nexport default stableSort;\r\n","function desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => desc(a, b, orderBy)\r\n    : (a, b) => -desc(a, b, orderBy);\r\n}\r\nexport default getSorting;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Button\r\n} from \"@mui/material\";\r\nimport ButtonCircularProgress from \"./ButtonCircularProgress\";\r\n\r\nfunction ConfirmationDialog(props) {\r\n  const { open, onClose, loading, title, content, onConfirm } = props;\r\n  return (\r\n    <Dialog open={open} onClose={onClose} disableEscapeKeyDown={loading}>\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>{content}</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} disabled={loading}>\r\n          Close\r\n        </Button>\r\n        <Button\r\n          color=\"secondary\"\r\n          onClick={onConfirm}\r\n          variant=\"contained\"\r\n          disabled={loading}\r\n        >\r\n          Yes {loading && <ButtonCircularProgress />}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nConfirmationDialog.propTypes = {\r\n  open: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  loading: PropTypes.bool,\r\n  title: PropTypes.string,\r\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  onConfirm: PropTypes.func\r\n};\r\n\r\nexport default ConfirmationDialog;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TablePagination,\r\n  TableRow,\r\n  IconButton,\r\n  Avatar,\r\n  Box,\r\n  Accordion,\r\n  AccordionSummary,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport withStyles from '@mui/styles/withStyles';\r\nimport PlayCirlceOutlineIcon from \"@mui/icons-material/PlayCircleOutline\";\r\nimport PauseCircleOutlineIcon from \"@mui/icons-material/PauseCircleOutline\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EnhancedTableHead from \"../../../shared/components/EnhancedTableHead\";\r\nimport stableSort from \"../../../shared/functions/stableSort\";\r\nimport getSorting from \"../../../shared/functions/getSorting\";\r\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\r\nimport ConfirmationDialog from \"../../../shared/components/ConfirmationDialog\";\r\n\r\nconst styles = (theme) => ({\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  alignRight: {\r\n    display: \"flex\",\r\n    flexDirection: \"row-reverse\",\r\n    alignItems: \"center\",\r\n    paddingLeft: theme.spacing(2),\r\n  },\r\n  blackIcon: {\r\n    color: theme.palette.common.black,\r\n  },\r\n  avatar: {\r\n    width: 28,\r\n    height: 28,\r\n  },\r\n  firstData: {\r\n    paddingLeft: theme.spacing(3),\r\n  },\r\n  iconButton: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  dBlock: {\r\n    display: \"block\",\r\n  },\r\n  dNone: {\r\n    display: \"none\",\r\n  },\r\n});\r\n\r\nconst rows = [\r\n  {\r\n    id: \"icon\",\r\n    numeric: true,\r\n    label: \"\",\r\n  },\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    label: \"Name\",\r\n  },\r\n  { id: \"number1\", numeric: false, label: \"Category 1\" },\r\n  { id: \"number2\", numeric: false, label: \"Category 2\" },\r\n  { id: \"number3\", numeric: false, label: \"Category 3\" },\r\n  {\r\n    id: \"number4\",\r\n    numeric: false,\r\n    label: \"Category 4\",\r\n  },\r\n  {\r\n    id: \"actions\",\r\n    numeric: false,\r\n    label: \"\",\r\n  },\r\n];\r\n\r\nconst rowsPerPage = 25;\r\n\r\nfunction CustomTable(props) {\r\n  const { pushMessageToSnackbar, classes, targets, setTargets } = props;\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(null);\r\n  const [page, setPage] = useState(0);\r\n  const [isDeleteTargetDialogOpen, setIsDeleteTargetDialogOpen] = useState(\r\n    false\r\n  );\r\n  const [deleteTargetDialogRow, setDeleteTargetDialogRow] = useState(null);\r\n  const [isDeleteTargetLoading, setIsDeleteTargetLoading] = useState(false);\r\n\r\n  const handleRequestSort = useCallback(\r\n    (__, property) => {\r\n      const _orderBy = property;\r\n      let _order = \"desc\";\r\n      if (orderBy === property && order === \"desc\") {\r\n        _order = \"asc\";\r\n      }\r\n      setOrder(_order);\r\n      setOrderBy(_orderBy);\r\n    },\r\n    [setOrder, setOrderBy, order, orderBy]\r\n  );\r\n\r\n  const deleteTarget = useCallback(() => {\r\n    setIsDeleteTargetLoading(true);\r\n    setTimeout(() => {\r\n      setIsDeleteTargetDialogOpen(false);\r\n      setIsDeleteTargetLoading(false);\r\n      const _targets = [...targets];\r\n      const index = _targets.findIndex(\r\n        (element) => element.id === deleteTargetDialogRow.id\r\n      );\r\n      _targets.splice(index, 1);\r\n      setTargets(_targets);\r\n      pushMessageToSnackbar({\r\n        text: \"Your friend has been removed\",\r\n      });\r\n    }, 1500);\r\n  }, [\r\n    setIsDeleteTargetDialogOpen,\r\n    setIsDeleteTargetLoading,\r\n    pushMessageToSnackbar,\r\n    setTargets,\r\n    deleteTargetDialogRow,\r\n    targets,\r\n  ]);\r\n\r\n  const handleChangePage = useCallback(\r\n    (_, page) => {\r\n      setPage(page);\r\n    },\r\n    [setPage]\r\n  );\r\n\r\n  const handleDeleteTargetDialogClose = useCallback(() => {\r\n    setIsDeleteTargetDialogOpen(false);\r\n  }, [setIsDeleteTargetDialogOpen]);\r\n\r\n  const handleDeleteTargetDialogOpen = useCallback(\r\n    (row) => {\r\n      setIsDeleteTargetDialogOpen(true);\r\n      setDeleteTargetDialogRow(row);\r\n    },\r\n    [setIsDeleteTargetDialogOpen, setDeleteTargetDialogRow]\r\n  );\r\n\r\n  const toggleTarget = useCallback(\r\n    (row) => {\r\n      const _targets = [...targets];\r\n      const index = _targets.findIndex((element) => element.id === row.id);\r\n      row.isActivated = !row.isActivated;\r\n      _targets[index] = row;\r\n      if (row.isActivated) {\r\n        pushMessageToSnackbar({\r\n          text: \"The row is now activated\",\r\n        });\r\n      } else {\r\n        pushMessageToSnackbar({\r\n          text: \"The row is now deactivated\",\r\n        });\r\n      }\r\n      setTargets(_targets);\r\n    },\r\n    [pushMessageToSnackbar, targets, setTargets]\r\n  );\r\n\r\n  return (\r\n    <Accordion>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Some user data</Typography>\r\n      </AccordionSummary>\r\n      <ConfirmationDialog\r\n        open={isDeleteTargetDialogOpen}\r\n        title=\"Confirmation\"\r\n        content={\r\n          deleteTargetDialogRow ? (\r\n            <span>\r\n              {\"Do you really want to remove the friend \"}\r\n              <b>{deleteTargetDialogRow.name}</b>\r\n              {\" from your list?\"}\r\n            </span>\r\n          ) : null\r\n        }\r\n        onClose={handleDeleteTargetDialogClose}\r\n        onConfirm={deleteTarget}\r\n        loading={isDeleteTargetLoading}\r\n      />\r\n      <Box width=\"100%\">\r\n        <div className={classes.tableWrapper}>\r\n          {targets.length > 0 ? (\r\n            <Table aria-labelledby=\"tableTitle\">\r\n              <EnhancedTableHead\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={targets.length}\r\n                rows={rows}\r\n              />\r\n              <TableBody>\r\n                {stableSort(targets, getSorting(order, orderBy))\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row, index) => (\r\n                    <TableRow hover tabIndex={-1} key={index}>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                        className={classes.firstData}\r\n                      >\r\n                        <Avatar\r\n                          className={classes.avatar}\r\n                          src={row.profilePicUrl}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.number1}\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.number2}\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.number3}\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.number4}\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                          {row.isActivated ? (\r\n                            <IconButton\r\n                              className={classes.iconButton}\r\n                              onClick={() => {\r\n                                toggleTarget(row);\r\n                              }}\r\n                              aria-label=\"Pause\"\r\n                              size=\"large\">\r\n                              <PauseCircleOutlineIcon\r\n                                className={classes.blackIcon}\r\n                              />\r\n                            </IconButton>\r\n                          ) : (\r\n                            <IconButton\r\n                              className={classes.iconButton}\r\n                              color=\"primary\"\r\n                              onClick={() => {\r\n                                toggleTarget(row);\r\n                              }}\r\n                              aria-label=\"Resume\"\r\n                              size=\"large\">\r\n                              <PlayCirlceOutlineIcon />\r\n                            </IconButton>\r\n                          )}\r\n                          <IconButton\r\n                            className={classes.iconButton}\r\n                            onClick={() => {\r\n                              handleDeleteTargetDialogOpen(row);\r\n                            }}\r\n                            aria-label=\"Delete\"\r\n                            size=\"large\">\r\n                            <DeleteIcon className={classes.blackIcon} />\r\n                          </IconButton>\r\n                        </Box>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          ) : (\r\n            <Box m={2}>\r\n              <HighlightedInformation>\r\n                No friends added yet.\r\n              </HighlightedInformation>\r\n            </Box>\r\n          )}\r\n        </div>\r\n        <div className={classes.alignRight}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={targets.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            backIconButtonProps={{\r\n              \"aria-label\": \"Previous Page\",\r\n            }}\r\n            nextIconButtonProps={{\r\n              \"aria-label\": \"Next Page\",\r\n            }}\r\n            onPageChange={handleChangePage}\r\n            classes={{\r\n              select: classes.dNone,\r\n              selectIcon: classes.dNone,\r\n              actions: targets.length > 0 ? classes.dBlock : classes.dNone,\r\n              caption: targets.length > 0 ? classes.dBlock : classes.dNone,\r\n            }}\r\n            labelRowsPerPage=\"\"\r\n          />\r\n        </div>\r\n      </Box>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nCustomTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  targets: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setTargets: PropTypes.func.isRequired,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(CustomTable);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport {\r\n  Paper,\r\n  Toolbar,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  ListItemIcon,\r\n  Switch,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport withStyles from '@mui/styles/withStyles';\r\nimport LoopIcon from \"@mui/icons-material/Loop\";\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    borderBottomLeftRadius: 0,\r\n    borderBottomRightRadius: 0\r\n  },\r\n  toolbar: { justifyContent: \"space-between\" },\r\n  scaleMinus: {\r\n    transform: \"scaleX(-1)\"\r\n  },\r\n  \"@keyframes spin\": {\r\n    from: { transform: \"rotate(359deg)\" },\r\n    to: { transform: \"rotate(0deg)\" }\r\n  },\r\n  spin: { animation: \"$spin 2s infinite linear\" },\r\n  listItemSecondaryAction: { paddingRight: theme.spacing(1) }\r\n});\r\n\r\nfunction AccountInformationArea(props) {\r\n  const { classes, toggleAccountActivation, isAccountActivated } = props;\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Box mr={2}>\r\n            <ListItemText\r\n              primary=\"Status\"\r\n              secondary={isAccountActivated ? \"Activated\" : \"Not activated\"}\r\n              className=\"mr-2\"\r\n            />\r\n          </Box>\r\n          <ListItemIcon>\r\n            <LoopIcon\r\n              className={classNames(\r\n                isAccountActivated ? classes.spin : null,\r\n                classes.scaleMinus\r\n              )}\r\n            />\r\n          </ListItemIcon>\r\n        </Box>\r\n        <ListItemSecondaryAction className={classes.listItemSecondaryAction}>\r\n          <Switch\r\n            color=\"secondary\"\r\n            checked={isAccountActivated}\r\n            onClick={toggleAccountActivation}\r\n            inputProps={{\r\n              \"aria-label\": isAccountActivated\r\n                ? \"Deactivate Account\"\r\n                : \"Activate Account\"\r\n            }}\r\n          />\r\n        </ListItemSecondaryAction>\r\n      </Toolbar>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nAccountInformationArea.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  toggleAccountActivation: PropTypes.func.isRequired,\r\n  isAccountActivated: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(AccountInformationArea);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid } from \"@mui/material\";\r\n\r\nimport withTheme from '@mui/styles/withTheme';\r\n\r\nfunction StatisticsArea(props) {\r\n  const { theme, CardChart, data } = props;\r\n  return (\r\n    CardChart &&\r\n    data.profit.length >= 2 &&\r\n    data.views.length >= 2 && (\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <CardChart\r\n            data={data.profit}\r\n            color={theme.palette.secondary.light}\r\n            height=\"70px\"\r\n            title=\"Profit\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <CardChart\r\n            data={data.views}\r\n            color={theme.palette.primary.light}\r\n            height=\"70px\"\r\n            title=\"Views\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  );\r\n}\r\n\r\nStatisticsArea.propTypes = {\r\n  theme: PropTypes.object.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n  CardChart: PropTypes.elementType\r\n};\r\n\r\nexport default withTheme(StatisticsArea);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Typography, Box } from \"@mui/material\";\r\nimport SettingsArea from \"./SettingsArea\";\r\nimport UserDataArea from \"./UserDataArea\";\r\nimport AccountInformationArea from \"./AccountInformationArea\";\r\nimport StatisticsArea from \"./StatisticsArea\";\r\n\r\nfunction Dashboard(props) {\r\n  const {\r\n    selectDashboard,\r\n    CardChart,\r\n    statistics,\r\n    toggleAccountActivation,\r\n    pushMessageToSnackbar,\r\n    targets,\r\n    setTargets,\r\n    isAccountActivated,\r\n  } = props;\r\n\r\n  useEffect(selectDashboard, [selectDashboard]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <StatisticsArea CardChart={CardChart} data={statistics} />\r\n      <Box mt={4}>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Your Account\r\n        </Typography>\r\n      </Box>\r\n      <AccountInformationArea\r\n        isAccountActivated={isAccountActivated}\r\n        toggleAccountActivation={toggleAccountActivation}\r\n      />\r\n      <Box mt={4}>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Settings\r\n        </Typography>\r\n      </Box>\r\n      <SettingsArea pushMessageToSnackbar={pushMessageToSnackbar} />\r\n      <UserDataArea\r\n        pushMessageToSnackbar={pushMessageToSnackbar}\r\n        targets={targets}\r\n        setTargets={setTargets}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nDashboard.propTypes = {\r\n  CardChart: PropTypes.elementType,\r\n  statistics: PropTypes.object.isRequired,\r\n  toggleAccountActivation: PropTypes.func,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n  targets: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setTargets: PropTypes.func.isRequired,\r\n  isAccountActivated: PropTypes.bool.isRequired,\r\n  selectDashboard: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { Fragment, useState, useCallback, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Popover, IconButton, MenuList, ListItemText, ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport withStyles from '@mui/styles/withStyles';\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\n\r\nconst styles = {\r\n  listItemtext: {\r\n    paddingLeft: \"0 !important\",\r\n  },\r\n};\r\n\r\nfunction VertOptions(props) {\r\n  const { items, classes, color } = props;\r\n  const anchorEl = useRef();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setIsOpen(false);\r\n  }, [setIsOpen]);\r\n\r\n  const handleOpen = useCallback(() => {\r\n    setIsOpen(true);\r\n  }, [setIsOpen]);\r\n\r\n  const id = isOpen ? \"scroll-playground\" : null;\r\n  return (\r\n    <Fragment>\r\n      <IconButton\r\n        onClick={handleOpen}\r\n        buttonRef={anchorEl}\r\n        style={{ color: color ? color : null }}\r\n        aria-describedby={id}\r\n        aria-label=\"More Options\"\r\n        size=\"large\">\r\n        <MoreVertIcon style={{ color: color ? color : null }} />\r\n      </IconButton>\r\n      <Popover\r\n        id={id}\r\n        open={isOpen}\r\n        anchorEl={anchorEl.current}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n        onClose={handleClose}\r\n        disableScrollLock\r\n      >\r\n        <MenuList dense>\r\n          {items.map((item) => (\r\n            <MenuItem\r\n              key={item.name}\r\n              onClick={() => {\r\n                handleClose();\r\n                item.onClick();\r\n              }}\r\n            >\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText className={classes.listItemtext}>\r\n                {item.name}\r\n              </ListItemText>\r\n            </MenuItem>\r\n          ))}\r\n        </MenuList>\r\n      </Popover>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nVertOptions.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  color: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(VertOptions);\r\n","import React, { useState, useRef, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport format from \"date-fns/format\";\r\nimport { ImageListItemBar } from \"@mui/material\";\r\nimport withStyles from '@mui/styles/withStyles';\r\nimport VertOptions from \"./VertOptions\";\r\n\r\nconst styles = {\r\n  imageContainer: {\r\n    width: \"100%\",\r\n    paddingTop: \"100%\",\r\n    overflow: \"hidden\",\r\n    position: \"relative\",\r\n  },\r\n  image: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"auto\",\r\n  },\r\n};\r\n\r\nfunction SelfAligningImage(props) {\r\n  const {\r\n    classes,\r\n    src,\r\n    title,\r\n    timeStamp,\r\n    options,\r\n    roundedBorder,\r\n    theme,\r\n  } = props;\r\n  const img = useRef();\r\n  const [hasMoreWidthThanHeight, setHasMoreWidthThanHeight] = useState(null);\r\n  const [hasLoaded, setHasLoaded] = useState(false);\r\n\r\n  const onLoad = useCallback(() => {\r\n    if (img.current.naturalHeight < img.current.naturalWidth) {\r\n      setHasMoreWidthThanHeight(true);\r\n    } else {\r\n      setHasMoreWidthThanHeight(false);\r\n    }\r\n    setHasLoaded(true);\r\n  }, [img, setHasLoaded, setHasMoreWidthThanHeight]);\r\n\r\n  return (\r\n    <div className={classes.imageContainer}>\r\n      <img\r\n        style={{\r\n          height: hasMoreWidthThanHeight ? \"100%\" : \"auto\",\r\n          width: hasMoreWidthThanHeight ? \"auto\" : \"100%\",\r\n          display: hasLoaded ? \"block\" : \"none\",\r\n          borderRadius: roundedBorder ? theme.shape.borderRadius : 0,\r\n        }}\r\n        ref={img}\r\n        className={classes.image}\r\n        onLoad={onLoad}\r\n        src={src}\r\n        alt=\"\"\r\n      />\r\n      {title && (\r\n        <ImageListItemBar\r\n          title={title}\r\n          subtitle={format(new Date(timeStamp * 1000), \"PP - k:mm\", {\r\n            awareOfUnicodeTokens: true,\r\n          })}\r\n          actionIcon={\r\n            options.length > 0 && (\r\n              <VertOptions color={theme.palette.common.white} items={options} />\r\n            )\r\n          }\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nSelfAligningImage.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  src: PropTypes.string.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  title: PropTypes.string,\r\n  timeStamp: PropTypes.number,\r\n  roundedBorder: PropTypes.bool,\r\n  options: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(SelfAligningImage);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, TablePagination, Divider, Toolbar, Typography, Button, Paper, Box } from \"@mui/material\";\r\nimport withStyles from '@mui/styles/withStyles';\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport SelfAligningImage from \"../../../shared/components/SelfAligningImage\";\r\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\r\nimport ConfirmationDialog from \"../../../shared/components/ConfirmationDialog\";\r\n\r\nconst styles = {\r\n  dBlock: { display: \"block\" },\r\n  dNone: { display: \"none\" },\r\n  toolbar: {\r\n    justifyContent: \"space-between\",\r\n  },\r\n};\r\n\r\nconst rowsPerPage = 25;\r\n\r\nfunction PostContent(props) {\r\n  const {\r\n    pushMessageToSnackbar,\r\n    setPosts,\r\n    posts,\r\n    openAddPostModal,\r\n    classes,\r\n  } = props;\r\n  const [page, setPage] = useState(0);\r\n  const [isDeletePostDialogOpen, setIsDeletePostDialogOpen] = useState(false);\r\n  const [isDeletePostDialogLoading, setIsDeletePostDialogLoading] = useState(\r\n    false\r\n  );\r\n\r\n  const closeDeletePostDialog = useCallback(() => {\r\n    setIsDeletePostDialogOpen(false);\r\n    setIsDeletePostDialogLoading(false);\r\n  }, [setIsDeletePostDialogOpen, setIsDeletePostDialogLoading]);\r\n\r\n  const deletePost = useCallback(() => {\r\n    setIsDeletePostDialogLoading(true);\r\n    setTimeout(() => {\r\n      const _posts = [...posts];\r\n      const index = _posts.find((element) => element.id === deletePost.id);\r\n      _posts.splice(index, 1);\r\n      setPosts(_posts);\r\n      pushMessageToSnackbar({\r\n        text: \"Your post has been deleted\",\r\n      });\r\n      closeDeletePostDialog();\r\n    }, 1500);\r\n  }, [\r\n    posts,\r\n    setPosts,\r\n    setIsDeletePostDialogLoading,\r\n    pushMessageToSnackbar,\r\n    closeDeletePostDialog,\r\n  ]);\r\n\r\n  const onDelete = useCallback(() => {\r\n    setIsDeletePostDialogOpen(true);\r\n  }, [setIsDeletePostDialogOpen]);\r\n\r\n  const handleChangePage = useCallback(\r\n    (__, page) => {\r\n      setPage(page);\r\n    },\r\n    [setPage]\r\n  );\r\n\r\n  const printImageGrid = useCallback(() => {\r\n    if (posts.length > 0) {\r\n      return (\r\n        <Box p={1}>\r\n          <Grid container spacing={1}>\r\n            {posts\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((post) => (\r\n                <Grid item xs={6} sm={4} md={3} key={post.id}>\r\n                  <SelfAligningImage\r\n                    src={post.src}\r\n                    title={post.name}\r\n                    timeStamp={post.timestamp}\r\n                    options={[\r\n                      {\r\n                        name: \"Delete\",\r\n                        onClick: () => {\r\n                          onDelete(post);\r\n                        },\r\n                        icon: <DeleteIcon />,\r\n                      },\r\n                    ]}\r\n                  />\r\n                </Grid>\r\n              ))}\r\n          </Grid>\r\n        </Box>\r\n      );\r\n    }\r\n    return (\r\n      <Box m={2}>\r\n        <HighlightedInformation>\r\n          No posts added yet. Click on &quot;NEW&quot; to create your first one.\r\n        </HighlightedInformation>\r\n      </Box>\r\n    );\r\n  }, [posts, onDelete, page]);\r\n\r\n  return (\r\n    <Paper>\r\n      <Toolbar className={classes.toolbar}>\r\n        <Typography variant=\"h6\">Your Posts</Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={openAddPostModal}\r\n          disableElevation\r\n        >\r\n          Add Post\r\n        </Button>\r\n      </Toolbar>\r\n      <Divider />\r\n      {printImageGrid()}\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={posts.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        backIconButtonProps={{\r\n          \"aria-label\": \"Previous Page\",\r\n        }}\r\n        nextIconButtonProps={{\r\n          \"aria-label\": \"Next Page\",\r\n        }}\r\n        onPageChange={handleChangePage}\r\n        classes={{\r\n          select: classes.dNone,\r\n          selectIcon: classes.dNone,\r\n          actions: posts.length > 0 ? classes.dBlock : classes.dNone,\r\n          caption: posts.length > 0 ? classes.dBlock : classes.dNone,\r\n        }}\r\n        labelRowsPerPage=\"\"\r\n      />\r\n      <ConfirmationDialog\r\n        open={isDeletePostDialogOpen}\r\n        title=\"Confirmation\"\r\n        content=\"Do you really want to delete the post?\"\r\n        onClose={closeDeletePostDialog}\r\n        loading={isDeletePostDialogLoading}\r\n        onConfirm={deletePost}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nPostContent.propTypes = {\r\n  openAddPostModal: PropTypes.func.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setPosts: PropTypes.func.isRequired,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles)(PostContent);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Paper, DialogTitle, DialogContent, DialogActions, Box } from \"@mui/material\";\r\n\r\nimport withStyles from '@mui/styles/withStyles';\r\n\r\nconst styles = theme => ({\r\n  helpPadding: {\r\n    \"@media (max-width:  400px)\": {\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1)\r\n    }\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\"\r\n  }\r\n});\r\n\r\nfunction ActionPaper(props) {\r\n  const {\r\n    theme,\r\n    classes,\r\n    title,\r\n    content,\r\n    maxWidth,\r\n    actions,\r\n    helpPadding,\r\n    fullWidthActions\r\n  } = props;\r\n  return (\r\n    <Box pt={1}>\r\n      <Paper style={{ maxWidth: theme.breakpoints.values[maxWidth] }}>\r\n        {title && <DialogTitle>{title}</DialogTitle>}\r\n        {content && (\r\n          <DialogContent\r\n            classes={helpPadding ? { root: classes.helpPadding } : null}\r\n          >\r\n            {content}\r\n          </DialogContent>\r\n        )}\r\n        {actions && (\r\n          <Box pb={2} pr={2}>\r\n            <DialogActions\r\n              classes={{ action: fullWidthActions ? classes.fullWidth : null }}\r\n            >\r\n              {actions}\r\n            </DialogActions>\r\n          </Box>\r\n        )}\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n\r\nActionPaper.propTypes = {\r\n  theme: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  title: PropTypes.oneOfType([\r\n    PropTypes.element,\r\n    PropTypes.func,\r\n    PropTypes.string\r\n  ]),\r\n  content: PropTypes.element,\r\n  maxWidth: PropTypes.string,\r\n  actions: PropTypes.element,\r\n  helpPadding: PropTypes.bool,\r\n  fullWidthActions: PropTypes.bool\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ActionPaper);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Dialog, DialogContent, DialogActions, Button, Box } from \"@mui/material\";\r\n\r\nimport withStyles from '@mui/styles/withStyles';\r\n\r\nconst styles = (theme) => ({\r\n  dialogPaper: { maxWidth: `${theme.breakpoints.values.md}px !important` },\r\n  dialogContent: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n  },\r\n});\r\n\r\nfunction ImageCropperDialog(props) {\r\n  const {\r\n    ImageCropper,\r\n    classes,\r\n    onClose,\r\n    open,\r\n    src,\r\n    onCrop,\r\n    aspectRatio,\r\n    theme,\r\n  } = props;\r\n  const [crop, setCrop] = useState(null);\r\n\r\n  const getCropFunctionFromChild = useCallback(\r\n    (cropFunction) => {\r\n      setCrop(() => cropFunction);\r\n    },\r\n    [setCrop]\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onEscapeKeyDown={onClose}\r\n      classes={{ paper: classes.dialogPaper }}\r\n      style={{ overflowX: \"visible\" }}\r\n    >\r\n      <DialogContent className={classes.dialogContent}>\r\n        <ImageCropper\r\n          src={src}\r\n          setCropFunction={getCropFunctionFromChild}\r\n          onCrop={onCrop}\r\n          aspectRatio={aspectRatio}\r\n          color={theme.palette.primary.main}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Box mr={1}>\r\n          <Button onClick={onClose}>Close</Button>\r\n        </Box>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={crop}>\r\n          Crop\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nImageCropperDialog.propTypes = {\r\n  ImageCropper: PropTypes.elementType,\r\n  classes: PropTypes.object.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  onCrop: PropTypes.func.isRequired,\r\n  src: PropTypes.string,\r\n  aspectRatio: PropTypes.number,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ImageCropperDialog);\r\n","import React, { Fragment, useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Typography,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  FormControl,\r\n  Select,\r\n  OutlinedInput,\r\n  MenuItem,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport withStyles from '@mui/styles/withStyles';\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport Bordered from \"../../../shared/components/Bordered\";\r\nimport ImageCropperDialog from \"../../../shared/components/ImageCropperDialog\";\r\n\r\nconst styles = (theme) => ({\r\n  floatButtonWrapper: {\r\n    position: \"absolute\",\r\n    top: theme.spacing(1),\r\n    right: theme.spacing(1),\r\n    zIndex: 1000,\r\n  },\r\n  inputRoot: {\r\n    width: 190,\r\n    \"@media (max-width:  400px)\": {\r\n      width: 160,\r\n    },\r\n    \"@media (max-width:  360px)\": {\r\n      width: 140,\r\n    },\r\n    \"@media (max-width:  340px)\": {\r\n      width: 120,\r\n    },\r\n  },\r\n  uploadIcon: {\r\n    fontSize: 48,\r\n    transition: theme.transitions.create([\"color\", \"box-shadow\", \"border\"], {\r\n      duration: theme.transitions.duration.short,\r\n      easing: theme.transitions.easing.easeInOut,\r\n    }),\r\n  },\r\n  imgWrapper: { position: \"relative\" },\r\n  img: {\r\n    width: \"100%\",\r\n    border: \"1px solid rgba(0, 0, 0, 0.23)\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    borderTopLeftRadius: 0,\r\n    borderBottomLeftRadius: 0,\r\n  },\r\n  uploadText: {\r\n    transition: theme.transitions.create([\"color\", \"box-shadow\", \"border\"], {\r\n      duration: theme.transitions.duration.short,\r\n      easing: theme.transitions.easing.easeInOut,\r\n    }),\r\n  },\r\n  numberInput: {\r\n    width: 110,\r\n  },\r\n  numberInputInput: {\r\n    padding: \"9px 34px 9px 14.5px\",\r\n  },\r\n  emojiTextArea: {\r\n    borderTopRightRadius: 0,\r\n    borderBottomRightRadius: 0,\r\n    marginRight: -1,\r\n  },\r\n  dNone: {\r\n    display: \"none\",\r\n  },\r\n});\r\n\r\nconst inputOptions = [\"None\", \"Slow\", \"Normal\", \"Fast\"];\r\n\r\nfunction AddPostOptions(props) {\r\n  const {\r\n    Dropzone,\r\n    classes,\r\n    files,\r\n    deleteItem,\r\n    onDrop,\r\n    EmojiTextArea,\r\n    ImageCropper,\r\n    DateTimePicker,\r\n    cropperFile,\r\n    onCrop,\r\n    onCropperClose,\r\n    uploadAt,\r\n    onChangeUploadAt,\r\n  } = props;\r\n  const [option1, setOption1] = useState(\"None\");\r\n  const [option2, setOption2] = useState(\"None\");\r\n  const [option3, setOption3] = useState(\"None\");\r\n  const [option4, setOption4] = useState(\"None\");\r\n\r\n  const handleChange = useCallback(\r\n    (event) => {\r\n      const { name, value } = event.target;\r\n      switch (name) {\r\n        case \"option1\":\r\n          setOption1(value);\r\n          break;\r\n        case \"option2\":\r\n          setOption2(value);\r\n          break;\r\n        case \"option3\":\r\n          setOption3(value);\r\n          break;\r\n        case \"option4\":\r\n          setOption4(value);\r\n          break;\r\n        default:\r\n          throw new Error(\"No branch selected in switch-statement.\");\r\n      }\r\n    },\r\n    [setOption1, setOption2, setOption3, setOption4]\r\n  );\r\n\r\n  const printFile = useCallback(() => {\r\n    if (files[0]) {\r\n      return (\r\n        <div className={classes.imgWrapper}>\r\n          <img\r\n            alt=\"uploaded item\"\r\n            src={files[0].preview}\r\n            className={classes.img}\r\n            style={{ height: 148 }}\r\n          />\r\n          <div className={classes.floatButtonWrapper}>\r\n            <IconButton onClick={deleteItem} size=\"large\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <Dropzone accept=\"image/png, image/jpeg\" onDrop={onDrop} fullHeight>\r\n        <span className={classes.uploadText}>\r\n          Click / Drop file <br /> here\r\n        </span>\r\n      </Dropzone>\r\n    );\r\n  }, [onDrop, files, classes, deleteItem]);\r\n\r\n  const inputs = \r\n    [\r\n      {\r\n        state: option1,\r\n        label: \"Option 1\",\r\n        stateName: \"option1\",\r\n      },\r\n      {\r\n        state: option2,\r\n        label: \"Option 2\",\r\n        stateName: \"option2\",\r\n      },\r\n      {\r\n        state: option3,\r\n        label: \"Option 3\",\r\n        stateName: \"option3\",\r\n      },\r\n      {\r\n        state: option4,\r\n        label: \"Option 4\",\r\n        stateName: \"option4\",\r\n      },\r\n    ];\r\n\r\n  return (\r\n    <Fragment>\r\n      {ImageCropper && (\r\n        <ImageCropperDialog\r\n          open={cropperFile ? true : false}\r\n          ImageCropper={ImageCropper}\r\n          src={cropperFile ? cropperFile.preview : \"\"}\r\n          onCrop={onCrop}\r\n          onClose={onCropperClose}\r\n          aspectRatio={4 / 3}\r\n        />\r\n      )}\r\n      <Typography paragraph variant=\"h6\">\r\n        Upload Image\r\n      </Typography>\r\n      <Box mb={2}>\r\n        {EmojiTextArea && (\r\n          <EmojiTextArea\r\n            inputClassName={classes.emojiTextArea}\r\n            maxCharacters={2200}\r\n            rightContent={printFile()}\r\n            emojiSet=\"google\"\r\n          />\r\n        )}\r\n      </Box>\r\n      <Typography paragraph variant=\"h6\">\r\n        Options\r\n      </Typography>\r\n      <List disablePadding>\r\n        <Bordered disableVerticalPadding disableBorderRadius>\r\n          <ListItem divider disableGutters className=\"listItemLeftPadding\">\r\n            <ListItemText>\r\n              <Typography variant=\"body2\">Upload at</Typography>\r\n            </ListItemText>\r\n            <ListItemSecondaryAction>\r\n              {DateTimePicker && (\r\n                <DateTimePicker\r\n                  value={uploadAt}\r\n                  format=\"yyyy/MM/dd hh:mm a\"\r\n                  onChange={onChangeUploadAt}\r\n                  disablePast\r\n                />\r\n              )}\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          {inputs.map((element, index) => (\r\n            <ListItem\r\n              className=\"listItemLeftPadding\"\r\n              disableGutters\r\n              divider={index !== inputs.length - 1}\r\n              key={index}\r\n            >\r\n              <ListItemText>\r\n                <Typography variant=\"body2\">{element.label}</Typography>\r\n              </ListItemText>\r\n              <FormControl variant=\"outlined\">\r\n                <ListItemSecondaryAction>\r\n                  <Select\r\n                    value={element.state}\r\n                    onChange={handleChange}\r\n                    input={\r\n                      <OutlinedInput\r\n                        name={element.stateName}\r\n                        labelWidth={0}\r\n                        className={classes.numberInput}\r\n                        classes={{ input: classes.numberInputInput }}\r\n                      />\r\n                    }\r\n                    MenuProps={{ disableScrollLock: true }}\r\n                  >\r\n                    {inputOptions.map((innerElement) => (\r\n                      <MenuItem value={innerElement} key={innerElement}>\r\n                        {innerElement}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </ListItemSecondaryAction>\r\n              </FormControl>\r\n            </ListItem>\r\n          ))}\r\n        </Bordered>\r\n      </List>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nAddPostOptions.propTypes = {\r\n  onEmojiTextareaChange: PropTypes.func,\r\n  DateTimePicker: PropTypes.elementType,\r\n  EmojiTextArea: PropTypes.elementType,\r\n  Dropzone: PropTypes.elementType,\r\n  ImageCropper: PropTypes.elementType,\r\n  classes: PropTypes.object,\r\n  cropperFile: PropTypes.object,\r\n  onCrop: PropTypes.func,\r\n  onCropperClose: PropTypes.func,\r\n  files: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  deleteItem: PropTypes.func,\r\n  onDrop: PropTypes.func,\r\n  value: PropTypes.string,\r\n  characters: PropTypes.number,\r\n  uploadAt: PropTypes.instanceOf(Date),\r\n  onChangeUploadAt: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(AddPostOptions);\r\n","import React, { Fragment, useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Box } from \"@mui/material\";\r\nimport ActionPaper from \"../../../shared/components/ActionPaper\";\r\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\r\nimport AddPostOptions from \"./AddPostOptions\";\r\n\r\nfunction AddPost(props) {\r\n  const {\r\n    pushMessageToSnackbar,\r\n    Dropzone,\r\n    EmojiTextArea,\r\n    DateTimePicker,\r\n    ImageCropper,\r\n    onClose,\r\n  } = props;\r\n\r\n  const [files, setFiles] = useState([]);\r\n  const [uploadAt, setUploadAt] = useState(new Date());\r\n  const [loading, setLoading] = useState(false);\r\n  const [cropperFile, setCropperFile] = useState(null);\r\n\r\n  const acceptDrop = useCallback(\r\n    (file) => {\r\n      setFiles([file]);\r\n    },\r\n    [setFiles]\r\n  );\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles, rejectedFiles) => {\r\n      if (acceptedFiles.length + rejectedFiles.length > 1) {\r\n        pushMessageToSnackbar({\r\n          isErrorMessage: true,\r\n          text: \"You cannot upload more than one file at once\",\r\n        });\r\n      } else if (acceptedFiles.length === 0) {\r\n        pushMessageToSnackbar({\r\n          isErrorMessage: true,\r\n          text: \"The file you wanted to upload isn't an image\",\r\n        });\r\n      } else if (acceptedFiles.length === 1) {\r\n        const file = acceptedFiles[0];\r\n        file.preview = URL.createObjectURL(file);\r\n        file.key = new Date().getTime();\r\n        setCropperFile(file);\r\n      }\r\n    },\r\n    [pushMessageToSnackbar, setCropperFile]\r\n  );\r\n\r\n  const onCropperClose = useCallback(() => {\r\n    setCropperFile(null);\r\n  }, [setCropperFile]);\r\n\r\n  const deleteItem = useCallback(() => {\r\n    setCropperFile(null);\r\n    setFiles([]);\r\n  }, [setCropperFile, setFiles]);\r\n\r\n  const onCrop = useCallback(\r\n    (dataUrl) => {\r\n      const file = { ...cropperFile };\r\n      file.preview = dataUrl;\r\n      acceptDrop(file);\r\n      setCropperFile(null);\r\n    },\r\n    [acceptDrop, cropperFile, setCropperFile]\r\n  );\r\n\r\n  const handleUpload = useCallback(() => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      pushMessageToSnackbar({\r\n        text: \"Your post has been uploaded\",\r\n      });\r\n      onClose();\r\n    }, 1500);\r\n  }, [setLoading, onClose, pushMessageToSnackbar]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <ActionPaper\r\n        helpPadding\r\n        maxWidth=\"md\"\r\n        content={\r\n          <AddPostOptions\r\n            EmojiTextArea={EmojiTextArea}\r\n            Dropzone={Dropzone}\r\n            files={files}\r\n            onDrop={onDrop}\r\n            deleteItem={deleteItem}\r\n            DateTimePicker={DateTimePicker}\r\n            uploadAt={uploadAt}\r\n            onChangeUploadAt={setUploadAt}\r\n            onCrop={onCrop}\r\n            ImageCropper={ImageCropper}\r\n            cropperFile={cropperFile}\r\n            onCropperClose={onCropperClose}\r\n          />\r\n        }\r\n        actions={\r\n          <Fragment>\r\n            <Box mr={1}>\r\n              <Button onClick={onClose} disabled={loading}>\r\n                Back\r\n              </Button>\r\n            </Box>\r\n            <Button\r\n              onClick={handleUpload}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              disabled={files.length === 0 || loading}\r\n            >\r\n              Upload {loading && <ButtonCircularProgress />}\r\n            </Button>\r\n          </Fragment>\r\n        }\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nAddPost.propTypes = {\r\n  pushMessageToSnackbar: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  Dropzone: PropTypes.elementType,\r\n  EmojiTextArea: PropTypes.elementType,\r\n  DateTimePicker: PropTypes.elementType,\r\n  ImageCropper: PropTypes.elementType,\r\n};\r\n\r\nexport default AddPost;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport PostContent from \"./PostContent\";\r\nimport AddPost from \"./AddPost\";\r\n\r\nfunction Posts(props) {\r\n  const {\r\n    selectPosts,\r\n    EmojiTextArea,\r\n    ImageCropper,\r\n    Dropzone,\r\n    DateTimePicker,\r\n    pushMessageToSnackbar,\r\n    posts,\r\n    setPosts,\r\n  } = props;\r\n  const [isAddPostPaperOpen, setIsAddPostPaperOpen] = useState(false);\r\n\r\n  const openAddPostModal = useCallback(() => {\r\n    setIsAddPostPaperOpen(true);\r\n  }, [setIsAddPostPaperOpen]);\r\n\r\n  const closeAddPostModal = useCallback(() => {\r\n    setIsAddPostPaperOpen(false);\r\n  }, [setIsAddPostPaperOpen]);\r\n\r\n  useEffect(() => {\r\n    selectPosts();\r\n  }, [selectPosts]);\r\n\r\n  if (isAddPostPaperOpen) {\r\n    return <AddPost\r\n      onClose={closeAddPostModal}\r\n      EmojiTextArea={EmojiTextArea}\r\n      ImageCropper={ImageCropper}\r\n      Dropzone={Dropzone}\r\n      DateTimePicker={DateTimePicker}\r\n      pushMessageToSnackbar={pushMessageToSnackbar}\r\n    />\r\n  }\r\n  return <PostContent\r\n    openAddPostModal={openAddPostModal}\r\n    posts={posts}\r\n    setPosts={setPosts}\r\n    pushMessageToSnackbar={pushMessageToSnackbar}\r\n  />\r\n}\r\n\r\nPosts.propTypes = {\r\n  EmojiTextArea: PropTypes.elementType,\r\n  ImageCropper: PropTypes.elementType,\r\n  Dropzone: PropTypes.elementType,\r\n  DateTimePicker: PropTypes.elementType,\r\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setPosts: PropTypes.func.isRequired,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n  selectPosts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Posts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Chip } from \"@mui/material\";\r\nimport shadeColor from \"../functions/shadeColor\";\r\n\r\nfunction ColorfulChip(props) {\r\n  const { color, label, className } = props;\r\n  return (\r\n    <Chip\r\n      style={{\r\n        color: color,\r\n        backgroundColor: shadeColor(color, 0.7)\r\n      }}\r\n      label={label}\r\n      className={className ? className : null}\r\n    />\r\n  );\r\n}\r\n\r\nColorfulChip.propTypes = {\r\n  color: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  className: PropTypes.oneOfType([PropTypes.object, PropTypes.string])\r\n};\r\n\r\nexport default ColorfulChip;\r\n","function unixToDateString(unix) {\r\n  const date = new Date(unix * 1000);\r\n  return (\r\n    `${date.getDate()}.${date.getMonth() + 1}.${date.getFullYear()}`\r\n  );\r\n}\r\n\r\nexport default unixToDateString;\r\n","function currencyPrettyPrint(cents) {\r\n  const dollars = cents / 100;\r\n  return dollars.toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\"\r\n  });\r\n}\r\n\r\nexport default currencyPrettyPrint;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Table, TableBody, TableCell, TablePagination, TableRow } from \"@mui/material\";\r\nimport withStyles from '@mui/styles/withStyles';\r\nimport EnhancedTableHead from \"../../../shared/components/EnhancedTableHead\";\r\nimport ColorfulChip from \"../../../shared/components/ColorfulChip\";\r\nimport unixToDateString from \"../../../shared/functions/unixToDateString\";\r\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\r\nimport currencyPrettyPrint from \"../../../shared/functions/currencyPrettyPrint\";\r\n\r\nconst styles = theme => ({\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n    width: \"100%\"\r\n  },\r\n  blackBackground: {\r\n    backgroundColor: theme.palette.primary.main\r\n  },\r\n  contentWrapper: {\r\n    padding: theme.spacing(3),\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: theme.spacing(2)\r\n    },\r\n    width: \"100%\"\r\n  },\r\n  dBlock: {\r\n    display: \"block !important\"\r\n  },\r\n  dNone: {\r\n    display: \"none !important\"\r\n  },\r\n  firstData: {\r\n    paddingLeft: theme.spacing(3)\r\n  }\r\n});\r\n\r\nconst rows = [\r\n  {\r\n    id: \"description\",\r\n    numeric: false,\r\n    label: \"Action\"\r\n  },\r\n  {\r\n    id: \"balanceChange\",\r\n    numeric: false,\r\n    label: \"Balance change\"\r\n  },\r\n  {\r\n    id: \"date\",\r\n    numeric: false,\r\n    label: \"Date\"\r\n  },\r\n  {\r\n    id: \"paidUntil\",\r\n    numeric: false,\r\n    label: \"Paid until\"\r\n  }\r\n];\r\n\r\nconst rowsPerPage = 25;\r\n\r\nfunction SubscriptionTable(props) {\r\n  const { transactions, theme, classes } = props;\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleChangePage = useCallback(\r\n    (_, page) => {\r\n      setPage(page);\r\n    },\r\n    [setPage]\r\n  );\r\n\r\n  if (transactions.length > 0) {\r\n    return (\r\n      <div className={classes.tableWrapper}>\r\n        <Table aria-labelledby=\"tableTitle\">\r\n          <EnhancedTableHead rowCount={transactions.length} rows={rows} />\r\n          <TableBody>\r\n            {transactions\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((transaction, index) => (\r\n                <TableRow hover tabIndex={-1} key={index}>\r\n                  <TableCell\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    className={classes.firstData}\r\n                  >\r\n                    {transaction.description}\r\n                  </TableCell>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {transaction.balanceChange > 0 ? (\r\n                      <ColorfulChip\r\n                        label={`+${currencyPrettyPrint(\r\n                          transaction.balanceChange\r\n                        )}`}\r\n                        color={theme.palette.secondary.main}\r\n                      />\r\n                    ) : (\r\n                      <ColorfulChip\r\n                        label={currencyPrettyPrint(transaction.balanceChange)}\r\n                        color={theme.palette.error.dark}\r\n                      />\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {unixToDateString(transaction.timestamp)}\r\n                  </TableCell>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {transaction.paidUntil\r\n                      ? unixToDateString(transaction.paidUntil)\r\n                      : \"\"}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n        <TablePagination\r\n          component=\"div\"\r\n          count={transactions.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={{\r\n            \"aria-label\": \"Previous Page\"\r\n          }}\r\n          nextIconButtonProps={{\r\n            \"aria-label\": \"Next Page\"\r\n          }}\r\n          onPageChange={handleChangePage}\r\n          classes={{\r\n            select: classes.dNone,\r\n            selectIcon: classes.dNone,\r\n            actions: transactions.length > 0 ? classes.dBlock : classes.dNone,\r\n            caption: transactions.length > 0 ? classes.dBlock : classes.dNone\r\n          }}\r\n          labelRowsPerPage=\"\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.contentWrapper}>\r\n      <HighlightedInformation>\r\n        No transactions received yet.\r\n      </HighlightedInformation>\r\n    </div>\r\n  );\r\n}\r\n\r\nSubscriptionTable.propTypes = {\r\n  theme: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(SubscriptionTable);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ListItemText, Button, Toolbar } from \"@mui/material\";\r\n\r\nimport withStyles from '@mui/styles/withStyles';\r\n\r\nconst styles = {\r\n  toolbar: {\r\n    justifyContent: \"space-between\"\r\n  }\r\n};\r\n\r\nfunction SubscriptionInfo(props) {\r\n  const { classes, openAddBalanceDialog } = props;\r\n  return (\r\n    <Toolbar className={classes.toolbar}>\r\n      <ListItemText primary=\"Status\" secondary=\"Premium Account\" />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={openAddBalanceDialog}\r\n        disableElevation\r\n      >\r\n        Add Balance\r\n      </Button>\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nSubscriptionInfo.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  openAddBalanceDialog: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SubscriptionInfo);\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { List, Divider, Paper } from \"@mui/material\";\r\nimport withStyles from '@mui/styles/withStyles';\r\nimport SubscriptionTable from \"./SubscriptionTable\";\r\nimport SubscriptionInfo from \"./SubscriptionInfo\";\r\n\r\nconst styles = {\r\n  divider: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.26)\"\r\n  }\r\n};\r\n\r\nfunction Subscription(props) {\r\n  const {\r\n    transactions,\r\n    classes,\r\n    openAddBalanceDialog,\r\n    selectSubscription\r\n  } = props;\r\n\r\n  useEffect(selectSubscription, [selectSubscription]);\r\n\r\n  return (\r\n    <Paper>\r\n      <List disablePadding>\r\n        <SubscriptionInfo openAddBalanceDialog={openAddBalanceDialog} />\r\n        <Divider className={classes.divider} />\r\n        <SubscriptionTable transactions={transactions} />\r\n      </List>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nSubscription.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  selectSubscription: PropTypes.func.isRequired,\r\n  openAddBalanceDialog: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Subscription);\r\n","import React, { memo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport withStyles from '@mui/styles/withStyles';\r\nimport Dashboard from \"./dashboard/Dashboard\";\r\nimport Posts from \"./posts/Posts\";\r\nimport Subscription from \"./subscription/Subscription\";\r\nimport PropsRoute from \"../../shared/components/PropsRoute\";\r\nimport useLocationBlocker from \"../../shared/functions/useLocationBlocker\";\r\n\r\nconst styles = (theme) => ({\r\n  wrapper: {\r\n    margin: theme.spacing(1),\r\n    width: \"auto\",\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      width: \"95%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n      marginTop: theme.spacing(4),\r\n      marginBottom: theme.spacing(4),\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      width: \"90%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      width: \"82.5%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      width: \"70%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction Routing(props) {\r\n  const {\r\n    classes,\r\n    EmojiTextArea,\r\n    ImageCropper,\r\n    Dropzone,\r\n    DateTimePicker,\r\n    pushMessageToSnackbar,\r\n    posts,\r\n    transactions,\r\n    toggleAccountActivation,\r\n    CardChart,\r\n    statistics,\r\n    targets,\r\n    setTargets,\r\n    setPosts,\r\n    isAccountActivated,\r\n    selectDashboard,\r\n    selectPosts,\r\n    selectSubscription,\r\n    openAddBalanceDialog,\r\n  } = props;\r\n  useLocationBlocker();\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <Switch>\r\n        <PropsRoute\r\n          path=\"/c/posts\"\r\n          component={Posts}\r\n          EmojiTextArea={EmojiTextArea}\r\n          ImageCropper={ImageCropper}\r\n          Dropzone={Dropzone}\r\n          DateTimePicker={DateTimePicker}\r\n          pushMessageToSnackbar={pushMessageToSnackbar}\r\n          posts={posts}\r\n          setPosts={setPosts}\r\n          selectPosts={selectPosts}\r\n        />\r\n        <PropsRoute\r\n          path=\"/c/subscription\"\r\n          component={Subscription}\r\n          transactions={transactions}\r\n          pushMessageToSnackbar={pushMessageToSnackbar}\r\n          selectSubscription={selectSubscription}\r\n          openAddBalanceDialog={openAddBalanceDialog}\r\n        />\r\n        <PropsRoute\r\n          path=\"\"\r\n          component={Dashboard}\r\n          toggleAccountActivation={toggleAccountActivation}\r\n          pushMessageToSnackbar={pushMessageToSnackbar}\r\n          CardChart={CardChart}\r\n          statistics={statistics}\r\n          targets={targets}\r\n          setTargets={setTargets}\r\n          isAccountActivated={isAccountActivated}\r\n          selectDashboard={selectDashboard}\r\n        />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nRouting.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  EmojiTextArea: PropTypes.elementType,\r\n  ImageCropper: PropTypes.elementType,\r\n  Dropzone: PropTypes.elementType,\r\n  DateTimePicker: PropTypes.elementType,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n  setTargets: PropTypes.func.isRequired,\r\n  setPosts: PropTypes.func.isRequired,\r\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  toggleAccountActivation: PropTypes.func,\r\n  CardChart: PropTypes.elementType,\r\n  statistics: PropTypes.object.isRequired,\r\n  targets: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  isAccountActivated: PropTypes.bool.isRequired,\r\n  selectDashboard: PropTypes.func.isRequired,\r\n  selectPosts: PropTypes.func.isRequired,\r\n  selectSubscription: PropTypes.func.isRequired,\r\n  openAddBalanceDialog: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(memo(Routing));\r\n","import React, { useCallback, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n} from \"@mui/material\";\r\nimport ErrorIcon from \"@mui/icons-material/Error\";\r\nimport formatDistance from \"date-fns/formatDistance\";\r\n\r\nfunction MessageListItem(props) {\r\n  const { message, divider } = props;\r\n  const [hasErrorOccurred, setHasErrorOccurred] = useState(false);\r\n\r\n  const handleError = useCallback(() => {\r\n    setHasErrorOccurred(true);\r\n  }, [setHasErrorOccurred]);\r\n\r\n  return (\r\n    <ListItem divider={divider}>\r\n      <ListItemAvatar>\r\n        {hasErrorOccurred ? (\r\n          <ErrorIcon color=\"secondary\" />\r\n        ) : (\r\n          <Avatar\r\n            src={hasErrorOccurred ? null : message.src}\r\n            onError={handleError}\r\n          />\r\n        )}\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={message.text}\r\n        secondary={`${formatDistance(message.date * 1000, new Date())} ago`}\r\n      />\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nMessageListItem.propTypes = {\r\n  message: PropTypes.object.isRequired,\r\n  divider: PropTypes.bool,\r\n};\r\n\r\nexport default MessageListItem;\r\n","import React, { Fragment, useState, useRef, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Popover,\r\n  IconButton,\r\n  AppBar,\r\n  List,\r\n  Divider,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport withStyles from '@mui/styles/withStyles';\r\nimport MessageIcon from \"@mui/icons-material/Message\";\r\nimport MessageListItem from \"./MessageListItem\";\r\n\r\nconst styles = (theme) => ({\r\n  tabContainer: {\r\n    overflowY: \"auto\",\r\n    maxHeight: 350,\r\n  },\r\n  popoverPaper: {\r\n    width: \"100%\",\r\n    maxWidth: 350,\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(1),\r\n    [theme.breakpoints.down('md')]: {\r\n      maxWidth: 270,\r\n    },\r\n  },\r\n  divider: {\r\n    marginTop: -2,\r\n  },\r\n  noShadow: {\r\n    boxShadow: \"none !important\",\r\n  },\r\n});\r\n\r\nfunction MessagePopperButton(props) {\r\n  const { classes, messages } = props;\r\n  const anchorEl = useRef();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleClick = useCallback(() => {\r\n    setIsOpen(!isOpen);\r\n  }, [isOpen, setIsOpen]);\r\n\r\n  const handleClickAway = useCallback(() => {\r\n    setIsOpen(false);\r\n  }, [setIsOpen]);\r\n\r\n  const id = isOpen ? \"scroll-playground\" : null;\r\n  return (\r\n    <Fragment>\r\n      <IconButton\r\n        onClick={handleClick}\r\n        buttonRef={anchorEl}\r\n        aria-label=\"Open Messages\"\r\n        aria-describedby={id}\r\n        color=\"primary\"\r\n        size=\"large\">\r\n        <MessageIcon />\r\n      </IconButton>\r\n      <Popover\r\n        disableScrollLock\r\n        id={id}\r\n        open={isOpen}\r\n        anchorEl={anchorEl.current}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"right\",\r\n        }}\r\n        classes={{ paper: classes.popoverPaper }}\r\n        onClose={handleClickAway}\r\n      >\r\n        <AppBar position=\"static\" color=\"inherit\" className={classes.noShadow}>\r\n          <Box pt={1} pl={2} pb={1} pr={1}>\r\n            <Typography variant=\"subtitle1\">Messages</Typography>\r\n          </Box>\r\n          <Divider className={classes.divider} />\r\n        </AppBar>\r\n        <List dense className={classes.tabContainer}>\r\n          {messages.length === 0 ? (\r\n            <ListItem>\r\n              <ListItemText>\r\n                You haven&apos;t received any messages yet.\r\n              </ListItemText>\r\n            </ListItem>\r\n          ) : (\r\n            messages.map((element, index) => (\r\n              <MessageListItem\r\n                key={index}\r\n                message={element}\r\n                divider={index !== messages.length - 1}\r\n              />\r\n            ))\r\n          )}\r\n        </List>\r\n      </Popover>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nMessagePopperButton.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(MessagePopperButton);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Drawer, IconButton, Toolbar, Divider, Typography, Box } from \"@mui/material\";\r\nimport withStyles from '@mui/styles/withStyles';\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = {\r\n  toolbar: {\r\n    minWidth: drawerWidth\r\n  }\r\n};\r\n\r\nfunction SideDrawer(props) {\r\n  const { classes, onClose, open } = props;\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} variant=\"temporary\" onClose={onClose}>\r\n      <Toolbar disableGutters className={classes.toolbar}>\r\n        <Box\r\n          pl={3}\r\n          pr={3}\r\n          display=\"flex\"\r\n          justifyContent=\"space-between\"\r\n          width=\"100%\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Typography variant=\"h6\">A Sidedrawer</Typography>\r\n          <IconButton\r\n            onClick={onClose}\r\n            color=\"primary\"\r\n            aria-label=\"Close Sidedrawer\"\r\n            size=\"large\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </Toolbar>\r\n      <Divider />\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nSideDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SideDrawer);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { OutlinedInput } from \"@mui/material\";\r\nimport withStyles from '@mui/styles/withStyles';\r\nimport currencyPrettyPrint from \"../../../shared/functions/currencyPrettyPrint\";\r\n\r\nconst styles = {\r\n  input: { padding: \"0px 9px\", cursor: \"pointer\" },\r\n  outlinedInput: {\r\n    width: 90,\r\n    height: 40,\r\n    cursor: \"pointer\"\r\n  },\r\n  wrapper: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n};\r\n\r\nfunction Balance(props) {\r\n  const { balance, classes, openAddBalanceDialog } = props;\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <OutlinedInput\r\n        value={balance === null ? \"\" : currencyPrettyPrint(balance)}\r\n        className={classes.outlinedInput}\r\n        classes={{ input: classes.input }}\r\n        readOnly\r\n        labelWidth={0}\r\n        onClick={openAddBalanceDialog}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nBalance.propTypes = {\r\n  balance: PropTypes.number.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  openAddBalanceDialog: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Balance);\r\n","import React, { Fragment, useRef, useCallback, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Avatar,\r\n  Drawer,\r\n  List,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Hidden,\r\n  Tooltip,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport DashboardIcon from \"@mui/icons-material/Dashboard\";\r\nimport ImageIcon from \"@mui/icons-material/Image\";\r\nimport AccountBalanceIcon from \"@mui/icons-material/AccountBalance\";\r\nimport PowerSettingsNewIcon from \"@mui/icons-material/PowerSettingsNew\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport SupervisorAccountIcon from \"@mui/icons-material/SupervisorAccount\";\r\nimport MessagePopperButton from \"./MessagePopperButton\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport Balance from \"./Balance\";\r\nimport NavigationDrawer from \"../../../shared/components/NavigationDrawer\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\n\r\nconst styles = (theme) => ({\r\n  appBar: {\r\n    boxShadow: theme.shadows[6],\r\n    backgroundColor: theme.palette.common.white,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\",\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  appBarToolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      paddingLeft: theme.spacing(3),\r\n      paddingRight: theme.spacing(3),\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      paddingLeft: theme.spacing(4),\r\n      paddingRight: theme.spacing(4),\r\n    },\r\n  },\r\n  accountAvatar: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    height: 24,\r\n    width: 24,\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginLeft: theme.spacing(1.5),\r\n      marginRight: theme.spacing(1.5),\r\n    },\r\n  },\r\n  drawerPaper: {\r\n    height: \"100%vh\",\r\n    whiteSpace: \"nowrap\",\r\n    border: 0,\r\n    width: theme.spacing(7),\r\n    overflowX: \"hidden\",\r\n    marginTop: theme.spacing(8),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n    backgroundColor: theme.palette.common.black,\r\n  },\r\n  smBordered: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      borderRadius: \"50% !important\",\r\n    },\r\n  },\r\n  menuLink: {\r\n    textDecoration: \"none\",\r\n    color: theme.palette.text.primary,\r\n  },\r\n  iconListItem: {\r\n    width: \"auto\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    paddingTop: 11,\r\n    paddingBottom: 11,\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  textPrimary: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  mobileItemSelected: {\r\n    backgroundColor: `${theme.palette.primary.main} !important`,\r\n  },\r\n  brandText: {\r\n    fontFamily: \"'Baloo Bhaijaan', cursive\",\r\n    fontWeight: 400,\r\n  },\r\n  username: {\r\n    paddingLeft: 0,\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  justifyCenter: {\r\n    justifyContent: \"center\",\r\n  },\r\n  permanentDrawerListItem: {\r\n    justifyContent: \"center\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n});\r\n\r\nfunction NavBar(props) {\r\n  const { selectedTab, messages, classes, openAddBalanceDialog, theme } = props;\r\n  // Will be use to make website more accessible by screen readers\r\n  const links = useRef([]);\r\n  const [isMobileOpen, setIsMobileOpen] = useState(false);\r\n  const [isSideDrawerOpen, setIsSideDrawerOpen] = useState(false);\r\n  const isWidthUpSm = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n\r\n  const openMobileDrawer = useCallback(() => {\r\n    setIsMobileOpen(true);\r\n  }, [setIsMobileOpen]);\r\n\r\n  const closeMobileDrawer = useCallback(() => {\r\n    setIsMobileOpen(false);\r\n  }, [setIsMobileOpen]);\r\n\r\n  const openDrawer = useCallback(() => {\r\n    setIsSideDrawerOpen(true);\r\n  }, [setIsSideDrawerOpen]);\r\n\r\n  const closeDrawer = useCallback(() => {\r\n    setIsSideDrawerOpen(false);\r\n  }, [setIsSideDrawerOpen]);\r\n\r\n  const menuItems = [\r\n    {\r\n      link: \"/c/dashboard\",\r\n      name: \"Dashboard\",\r\n      onClick: closeMobileDrawer,\r\n      icon: {\r\n        desktop: (\r\n          <DashboardIcon\r\n            className={\r\n              selectedTab === \"Dashboard\" ? classes.textPrimary : \"text-white\"\r\n            }\r\n            fontSize=\"small\"\r\n          />\r\n        ),\r\n        mobile: <DashboardIcon className=\"text-white\" />,\r\n      },\r\n    },\r\n    {\r\n      link: \"/c/posts\",\r\n      name: \"Posts\",\r\n      onClick: closeMobileDrawer,\r\n      icon: {\r\n        desktop: (\r\n          <ImageIcon\r\n            className={\r\n              selectedTab === \"Posts\" ? classes.textPrimary : \"text-white\"\r\n            }\r\n            fontSize=\"small\"\r\n          />\r\n        ),\r\n        mobile: <ImageIcon className=\"text-white\" />,\r\n      },\r\n    },\r\n    {\r\n      link: \"/c/subscription\",\r\n      name: \"Subscription\",\r\n      onClick: closeMobileDrawer,\r\n      icon: {\r\n        desktop: (\r\n          <AccountBalanceIcon\r\n            className={\r\n              selectedTab === \"Subscription\"\r\n                ? classes.textPrimary\r\n                : \"text-white\"\r\n            }\r\n            fontSize=\"small\"\r\n          />\r\n        ),\r\n        mobile: <AccountBalanceIcon className=\"text-white\" />,\r\n      },\r\n    },\r\n    {\r\n      link: \"/\",\r\n      name: \"Logout\",\r\n      icon: {\r\n        desktop: (\r\n          <PowerSettingsNewIcon className=\"text-white\" fontSize=\"small\" />\r\n        ),\r\n        mobile: <PowerSettingsNewIcon className=\"text-white\" />,\r\n      },\r\n    },\r\n  ];\r\n  return (\r\n    <Fragment>\r\n      <AppBar position=\"sticky\" className={classes.appBar}>\r\n        <Toolbar className={classes.appBarToolbar}>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <Hidden smUp>\r\n              <Box mr={1}>\r\n                <IconButton\r\n                  aria-label=\"Open Navigation\"\r\n                  onClick={openMobileDrawer}\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                >\r\n                  <MenuIcon />\r\n                </IconButton>\r\n              </Box>\r\n            </Hidden>\r\n            <Hidden smDown>\r\n              <Typography\r\n                variant=\"h4\"\r\n                className={classes.brandText}\r\n                display=\"inline\"\r\n                color=\"primary\"\r\n              >\r\n                Wa\r\n              </Typography>\r\n              <Typography\r\n                variant=\"h4\"\r\n                className={classes.brandText}\r\n                display=\"inline\"\r\n                color=\"secondary\"\r\n              >\r\n                Ver\r\n              </Typography>\r\n            </Hidden>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"flex-end\"\r\n            alignItems=\"center\"\r\n            width=\"100%\"\r\n          >\r\n            {isWidthUpSm && (\r\n              <Box mr={3}>\r\n                <Balance\r\n                  balance={2573}\r\n                  openAddBalanceDialog={openAddBalanceDialog}\r\n                />\r\n              </Box>\r\n            )}\r\n            <MessagePopperButton messages={messages} />\r\n            <ListItem\r\n              disableGutters\r\n              className={classNames(classes.iconListItem, classes.smBordered)}\r\n            >\r\n              <Avatar\r\n                alt=\"profile picture\"\r\n                src={`${process.env.PUBLIC_URL}/images/logged_in/profilePicture.jpg`}\r\n                className={classNames(classes.accountAvatar)}\r\n              />\r\n              {isWidthUpSm && (\r\n                <ListItemText\r\n                  className={classes.username}\r\n                  primary={\r\n                    <Typography color=\"textPrimary\">Username</Typography>\r\n                  }\r\n                />\r\n              )}\r\n            </ListItem>\r\n          </Box>\r\n          <IconButton\r\n            onClick={openDrawer}\r\n            color=\"primary\"\r\n            aria-label=\"Open Sidedrawer\"\r\n            size=\"large\"\r\n          >\r\n            <SupervisorAccountIcon />\r\n          </IconButton>\r\n          <SideDrawer open={isSideDrawerOpen} onClose={closeDrawer} />\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Hidden smDown>\r\n        <Drawer //  both drawers can be combined into one for performance\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n          open={false}\r\n        >\r\n          <List>\r\n            {menuItems.map((element, index) => (\r\n              <Link\r\n                to={element.link}\r\n                className={classes.menuLink}\r\n                onClick={element.onClick}\r\n                key={index}\r\n                ref={(node) => {\r\n                  links.current[index] = node;\r\n                }}\r\n              >\r\n                <Tooltip\r\n                  title={element.name}\r\n                  placement=\"right\"\r\n                  key={element.name}\r\n                >\r\n                  <ListItem\r\n                    selected={selectedTab === element.name}\r\n                    button\r\n                    divider={index !== menuItems.length - 1}\r\n                    className={classes.permanentDrawerListItem}\r\n                    onClick={() => {\r\n                      links.current[index].click();\r\n                    }}\r\n                    aria-label={\r\n                      element.name === \"Logout\"\r\n                        ? \"Logout\"\r\n                        : `Go to ${element.name}`\r\n                    }\r\n                  >\r\n                    <ListItemIcon className={classes.justifyCenter}>\r\n                      {element.icon.desktop}\r\n                    </ListItemIcon>\r\n                  </ListItem>\r\n                </Tooltip>\r\n              </Link>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n      </Hidden>\r\n      <NavigationDrawer\r\n        menuItems={menuItems.map((element) => ({\r\n          link: element.link,\r\n          name: element.name,\r\n          icon: element.icon.mobile,\r\n          onClick: element.onClick,\r\n        }))}\r\n        anchor=\"left\"\r\n        open={isMobileOpen}\r\n        selectedItem={selectedTab}\r\n        onClose={closeMobileDrawer}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nNavBar.propTypes = {\r\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  selectedTab: PropTypes.string.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  openAddBalanceDialog: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(NavBar);\r\n","import React, { useCallback, useState, useRef, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Snackbar } from \"@mui/material\";\r\n\r\nimport withStyles from '@mui/styles/withStyles';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n});\r\n\r\nfunction ConsecutiveSnackbars(props) {\r\n  const { classes, getPushMessageFromChild } = props;\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messageInfo, setMessageInfo] = useState({});\r\n  const queue = useRef([]);\r\n\r\n  const processQueue = useCallback(() => {\r\n    if (queue.current.length > 0) {\r\n      setMessageInfo(queue.current.shift());\r\n      setIsOpen(true);\r\n    }\r\n  }, [setMessageInfo, setIsOpen, queue]);\r\n\r\n  const handleClose = useCallback((_, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setIsOpen(false);\r\n  }, [setIsOpen]);\r\n\r\n  const pushMessage = useCallback(message => {\r\n    queue.current.push({\r\n      message,\r\n      key: new Date().getTime(),\r\n    });\r\n    if (isOpen) {\r\n      // immediately begin dismissing current message\r\n      // to start showing new one\r\n      setIsOpen(false);\r\n    } else {\r\n      processQueue();\r\n    }\r\n  }, [queue, isOpen, setIsOpen, processQueue]);\r\n\r\n  useEffect(() => {\r\n    getPushMessageFromChild(pushMessage);\r\n  }, [getPushMessageFromChild, pushMessage]);\r\n\r\n  return (\r\n    <Snackbar\r\n      disableWindowBlurListener\r\n      key={messageInfo.key}\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"left\",\r\n      }}\r\n      open={isOpen}\r\n      autoHideDuration={6000}\r\n      onClose={handleClose}\r\n      ContentProps={{\r\n        classes: {\r\n          root: classes.root,\r\n        },\r\n      }}\r\n      message={\r\n        <span>{messageInfo.message ? messageInfo.message.text : null}</span>\r\n      }\r\n      TransitionProps={{\r\n        onExited: processQueue\r\n      }} />\r\n  );\r\n\r\n}\r\n\r\nConsecutiveSnackbars.propTypes = {\r\n  getPushMessageFromChild: PropTypes.func.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ConsecutiveSnackbars);\r\n","const data = [\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image1.jpg`,\r\n    name: \"Markus\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image2.jpg`,\r\n    name: \"David\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image3.jpg`,\r\n    name: \"Arold\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image4.jpg`,\r\n    name: \"Joanic\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image5.jpg`,\r\n    name: \"Sophia\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image6.jpg`,\r\n    name: \"Aaron\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image7.jpg`,\r\n    name: \"Steven\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image8.jpg`,\r\n    name: \"Felix\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image9.jpg`,\r\n    name: \"Vivien\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image10.jpg`,\r\n    name: \"Leonie\",\r\n  },\r\n];\r\n\r\nexport default data;","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction LazyLoadAddBalanceDialog(props) {\r\n  const { open, onClose, onSuccess } = props;\r\n  const [AddBalanceDialog, setAddBalanceDialog] = useState(null);\r\n  const [hasFetchedAddBalanceDialog, setHasFetchedAddBlanceDialog] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (open && !hasFetchedAddBalanceDialog) {\r\n      setHasFetchedAddBlanceDialog(true);\r\n      import(\"./AddBalanceDialog\").then(Component => {\r\n        setAddBalanceDialog(() => Component.default);\r\n      });\r\n    }\r\n  }, [open, hasFetchedAddBalanceDialog, setHasFetchedAddBlanceDialog, setAddBalanceDialog]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {AddBalanceDialog && (\r\n        <AddBalanceDialog\r\n          open={open}\r\n          onClose={onClose}\r\n          onSuccess={onSuccess}\r\n        ></AddBalanceDialog>\r\n      )}\r\n    </Fragment>\r\n  );\r\n\r\n}\r\n\r\nLazyLoadAddBalanceDialog.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  onSuccess: PropTypes.func.isRequired\r\n};\r\n\r\nexport default LazyLoadAddBalanceDialog;\r\n","import React, { memo, useCallback, useState, useEffect, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport withStyles from '@mui/styles/withStyles';\r\nimport Routing from \"./Routing\";\r\nimport NavBar from \"./navigation/NavBar\";\r\nimport ConsecutiveSnackbarMessages from \"../../shared/components/ConsecutiveSnackbarMessages\";\r\nimport smoothScrollTop from \"../../shared/functions/smoothScrollTop\";\r\nimport persons from \"../dummy_data/persons\";\r\nimport LazyLoadAddBalanceDialog from \"./subscription/LazyLoadAddBalanceDialog\";\r\n\r\nconst styles = (theme) => ({\r\n  main: {\r\n    marginLeft: theme.spacing(9),\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n});\r\n\r\nfunction shuffle(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n}\r\n\r\nfunction Main(props) {\r\n  const { classes } = props;\r\n  const [selectedTab, setSelectedTab] = useState(null);\r\n  const [CardChart, setCardChart] = useState(null);\r\n  const [hasFetchedCardChart, setHasFetchedCardChart] = useState(false);\r\n  const [EmojiTextArea, setEmojiTextArea] = useState(null);\r\n  const [hasFetchedEmojiTextArea, setHasFetchedEmojiTextArea] = useState(false);\r\n  const [ImageCropper, setImageCropper] = useState(null);\r\n  const [hasFetchedImageCropper, setHasFetchedImageCropper] = useState(false);\r\n  const [Dropzone, setDropzone] = useState(null);\r\n  const [hasFetchedDropzone, setHasFetchedDropzone] = useState(false);\r\n  const [DateTimePicker, setDateTimePicker] = useState(null);\r\n  const [hasFetchedDateTimePicker, setHasFetchedDateTimePicker] = useState(\r\n    false\r\n  );\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [statistics, setStatistics] = useState({ views: [], profit: [] });\r\n  const [posts, setPosts] = useState([]);\r\n  const [targets, setTargets] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n  const [isAccountActivated, setIsAccountActivated] = useState(false);\r\n  const [isAddBalanceDialogOpen, setIsAddBalanceDialogOpen] = useState(false);\r\n  const [pushMessageToSnackbar, setPushMessageToSnackbar] = useState(null);\r\n\r\n  const fetchRandomTargets = useCallback(() => {\r\n    const targets = [];\r\n    for (let i = 0; i < 35; i += 1) {\r\n      const randomPerson = persons[Math.floor(Math.random() * persons.length)];\r\n      const target = {\r\n        id: i,\r\n        number1: Math.floor(Math.random() * 251),\r\n        number2: Math.floor(Math.random() * 251),\r\n        number3: Math.floor(Math.random() * 251),\r\n        number4: Math.floor(Math.random() * 251),\r\n        name: randomPerson.name,\r\n        profilePicUrl: randomPerson.src,\r\n        isActivated: Math.round(Math.random()) ? true : false,\r\n      };\r\n      targets.push(target);\r\n    }\r\n    setTargets(targets);\r\n  }, [setTargets]);\r\n\r\n  const openAddBalanceDialog = useCallback(() => {\r\n    setIsAddBalanceDialogOpen(true);\r\n  }, [setIsAddBalanceDialogOpen]);\r\n\r\n  const closeAddBalanceDialog = useCallback(() => {\r\n    setIsAddBalanceDialogOpen(false);\r\n  }, [setIsAddBalanceDialogOpen]);\r\n\r\n  const onPaymentSuccess = useCallback(() => {\r\n    pushMessageToSnackbar({\r\n      text: \"Your balance has been updated.\",\r\n    });\r\n    setIsAddBalanceDialogOpen(false);\r\n  }, [pushMessageToSnackbar, setIsAddBalanceDialogOpen]);\r\n\r\n  const fetchRandomStatistics = useCallback(() => {\r\n    const statistics = { profit: [], views: [] };\r\n    const iterations = 300;\r\n    const oneYearSeconds = 60 * 60 * 24 * 365;\r\n    let curProfit = Math.round(3000 + Math.random() * 1000);\r\n    let curViews = Math.round(3000 + Math.random() * 1000);\r\n    let curUnix = Math.round(new Date().getTime() / 1000) - oneYearSeconds;\r\n    for (let i = 0; i < iterations; i += 1) {\r\n      curUnix += Math.round(oneYearSeconds / iterations);\r\n      curProfit += Math.round((Math.random() * 2 - 1) * 10);\r\n      curViews += Math.round((Math.random() * 2 - 1) * 10);\r\n      statistics.profit.push({\r\n        value: curProfit,\r\n        timestamp: curUnix,\r\n      });\r\n      statistics.views.push({\r\n        value: curViews,\r\n        timestamp: curUnix,\r\n      });\r\n    }\r\n    setStatistics(statistics);\r\n  }, [setStatistics]);\r\n\r\n  const fetchRandomTransactions = useCallback(() => {\r\n    const transactions = [];\r\n    const iterations = 32;\r\n    const oneMonthSeconds = Math.round(60 * 60 * 24 * 30.5);\r\n    const transactionTemplates = [\r\n      {\r\n        description: \"Starter subscription\",\r\n        isSubscription: true,\r\n        balanceChange: -1499,\r\n      },\r\n      {\r\n        description: \"Premium subscription\",\r\n        isSubscription: true,\r\n        balanceChange: -2999,\r\n      },\r\n      {\r\n        description: \"Business subscription\",\r\n        isSubscription: true,\r\n        balanceChange: -4999,\r\n      },\r\n      {\r\n        description: \"Tycoon subscription\",\r\n        isSubscription: true,\r\n        balanceChange: -9999,\r\n      },\r\n      {\r\n        description: \"Added funds\",\r\n        isSubscription: false,\r\n        balanceChange: 2000,\r\n      },\r\n      {\r\n        description: \"Added funds\",\r\n        isSubscription: false,\r\n        balanceChange: 5000,\r\n      },\r\n    ];\r\n    let curUnix = Math.round(\r\n      new Date().getTime() / 1000 - iterations * oneMonthSeconds\r\n    );\r\n    for (let i = 0; i < iterations; i += 1) {\r\n      const randomTransactionTemplate =\r\n        transactionTemplates[\r\n          Math.floor(Math.random() * transactionTemplates.length)\r\n        ];\r\n      const transaction = {\r\n        id: i,\r\n        description: randomTransactionTemplate.description,\r\n        balanceChange: randomTransactionTemplate.balanceChange,\r\n        paidUntil: curUnix + oneMonthSeconds,\r\n        timestamp: curUnix,\r\n      };\r\n      curUnix += oneMonthSeconds;\r\n      transactions.push(transaction);\r\n    }\r\n    transactions.reverse();\r\n    setTransactions(transactions);\r\n  }, [setTransactions]);\r\n\r\n  const fetchRandomMessages = useCallback(() => {\r\n    shuffle(persons);\r\n    const messages = [];\r\n    const iterations = persons.length;\r\n    const oneDaySeconds = 60 * 60 * 24;\r\n    let curUnix = Math.round(\r\n      new Date().getTime() / 1000 - iterations * oneDaySeconds\r\n    );\r\n    for (let i = 0; i < iterations; i += 1) {\r\n      const person = persons[i];\r\n      const message = {\r\n        id: i,\r\n        src: person.src,\r\n        date: curUnix,\r\n        text: \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr sed.\",\r\n      };\r\n      curUnix += oneDaySeconds;\r\n      messages.push(message);\r\n    }\r\n    messages.reverse();\r\n    setMessages(messages);\r\n  }, [setMessages]);\r\n\r\n  const fetchRandomPosts = useCallback(() => {\r\n    shuffle(persons);\r\n    const posts = [];\r\n    const iterations = persons.length;\r\n    const oneDaySeconds = 60 * 60 * 24;\r\n    let curUnix = Math.round(\r\n      new Date().getTime() / 1000 - iterations * oneDaySeconds\r\n    );\r\n    for (let i = 0; i < iterations; i += 1) {\r\n      const person = persons[i];\r\n      const post = {\r\n        id: i,\r\n        src: person.src,\r\n        timestamp: curUnix,\r\n        name: person.name,\r\n      };\r\n      curUnix += oneDaySeconds;\r\n      posts.push(post);\r\n    }\r\n    posts.reverse();\r\n    setPosts(posts);\r\n  }, [setPosts]);\r\n\r\n  const toggleAccountActivation = useCallback(() => {\r\n    if (pushMessageToSnackbar) {\r\n      if (isAccountActivated) {\r\n        pushMessageToSnackbar({\r\n          text: \"Your account is now deactivated.\",\r\n        });\r\n      } else {\r\n        pushMessageToSnackbar({\r\n          text: \"Your account is now activated.\",\r\n        });\r\n      }\r\n    }\r\n    setIsAccountActivated(!isAccountActivated);\r\n  }, [pushMessageToSnackbar, isAccountActivated, setIsAccountActivated]);\r\n\r\n  const selectDashboard = useCallback(() => {\r\n    smoothScrollTop();\r\n    document.title = \"WaVer - Dashboard\";\r\n    setSelectedTab(\"Dashboard\");\r\n    if (!hasFetchedCardChart) {\r\n      setHasFetchedCardChart(true);\r\n      import(\"../../shared/components/CardChart\").then((Component) => {\r\n        setCardChart(Component.default);\r\n      });\r\n    }\r\n  }, [\r\n    setSelectedTab,\r\n    setCardChart,\r\n    hasFetchedCardChart,\r\n    setHasFetchedCardChart,\r\n  ]);\r\n\r\n  const selectPosts = useCallback(() => {\r\n    smoothScrollTop();\r\n    document.title = \"WaVer - Posts\";\r\n    setSelectedTab(\"Posts\");\r\n    if (!hasFetchedEmojiTextArea) {\r\n      setHasFetchedEmojiTextArea(true);\r\n      import(\"../../shared/components/EmojiTextArea\").then((Component) => {\r\n        setEmojiTextArea(Component.default);\r\n      });\r\n    }\r\n    if (!hasFetchedImageCropper) {\r\n      setHasFetchedImageCropper(true);\r\n      import(\"../../shared/components/ImageCropper\").then((Component) => {\r\n        setImageCropper(Component.default);\r\n      });\r\n    }\r\n    if (!hasFetchedDropzone) {\r\n      setHasFetchedDropzone(true);\r\n      import(\"../../shared/components/Dropzone\").then((Component) => {\r\n        setDropzone(Component.default);\r\n      });\r\n    }\r\n    if (!hasFetchedDateTimePicker) {\r\n      setHasFetchedDateTimePicker(true);\r\n      import(\"../../shared/components/DateTimePicker\").then((Component) => {\r\n        setDateTimePicker(Component.default);\r\n      });\r\n    }\r\n  }, [\r\n    setSelectedTab,\r\n    setEmojiTextArea,\r\n    setImageCropper,\r\n    setDropzone,\r\n    setDateTimePicker,\r\n    hasFetchedEmojiTextArea,\r\n    setHasFetchedEmojiTextArea,\r\n    hasFetchedImageCropper,\r\n    setHasFetchedImageCropper,\r\n    hasFetchedDropzone,\r\n    setHasFetchedDropzone,\r\n    hasFetchedDateTimePicker,\r\n    setHasFetchedDateTimePicker,\r\n  ]);\r\n\r\n  const selectSubscription = useCallback(() => {\r\n    smoothScrollTop();\r\n    document.title = \"WaVer - Subscription\";\r\n    setSelectedTab(\"Subscription\");\r\n  }, [setSelectedTab]);\r\n\r\n  const getPushMessageFromChild = useCallback(\r\n    (pushMessage) => {\r\n      setPushMessageToSnackbar(() => pushMessage);\r\n    },\r\n    [setPushMessageToSnackbar]\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchRandomTargets();\r\n    fetchRandomStatistics();\r\n    fetchRandomTransactions();\r\n    fetchRandomMessages();\r\n    fetchRandomPosts();\r\n  }, [\r\n    fetchRandomTargets,\r\n    fetchRandomStatistics,\r\n    fetchRandomTransactions,\r\n    fetchRandomMessages,\r\n    fetchRandomPosts,\r\n  ]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <LazyLoadAddBalanceDialog\r\n        open={isAddBalanceDialogOpen}\r\n        onClose={closeAddBalanceDialog}\r\n        onSuccess={onPaymentSuccess}\r\n      />\r\n      <NavBar\r\n        selectedTab={selectedTab}\r\n        messages={messages}\r\n        openAddBalanceDialog={openAddBalanceDialog}\r\n      />\r\n      <ConsecutiveSnackbarMessages\r\n        getPushMessageFromChild={getPushMessageFromChild}\r\n      />\r\n      <main className={classNames(classes.main)}>\r\n        <Routing\r\n          isAccountActivated={isAccountActivated}\r\n          ImageCropper={ImageCropper}\r\n          EmojiTextArea={EmojiTextArea}\r\n          CardChart={CardChart}\r\n          Dropzone={Dropzone}\r\n          DateTimePicker={DateTimePicker}\r\n          toggleAccountActivation={toggleAccountActivation}\r\n          pushMessageToSnackbar={pushMessageToSnackbar}\r\n          transactions={transactions}\r\n          statistics={statistics}\r\n          posts={posts}\r\n          targets={targets}\r\n          selectDashboard={selectDashboard}\r\n          selectPosts={selectPosts}\r\n          selectSubscription={selectSubscription}\r\n          openAddBalanceDialog={openAddBalanceDialog}\r\n          setTargets={setTargets}\r\n          setPosts={setPosts}\r\n        />\r\n      </main>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nMain.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(memo(Main));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CircularProgress, Box } from \"@mui/material\";\r\n\r\nimport withStyles from '@mui/styles/withStyles';\r\n\r\nconst styles = theme => ({\r\n  circularProgress: {\r\n    color: theme.palette.secondary.main\r\n  }\r\n});\r\n\r\nfunction ButtonCircularProgress(props) {\r\n  const { size, classes } = props;\r\n  return (\r\n    <Box color=\"secondary.main\" pl={1.5} display=\"flex\">\r\n      <CircularProgress\r\n        size={size ? size : 24}\r\n        thickness={size ? (size / 5) * 24 : 5}\r\n        className={classes.circularProgress}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nButtonCircularProgress.propTypes = {\r\n  size: PropTypes.number,\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ButtonCircularProgress);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Drawer,\r\n  IconButton,\r\n  Typography,\r\n  Toolbar,\r\n} from \"@mui/material\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\n\r\nconst styles = (theme) => ({\r\n  closeIcon: {\r\n    marginRight: theme.spacing(0.5),\r\n  },\r\n  headSection: {\r\n    width: 200,\r\n  },\r\n  blackList: {\r\n    backgroundColor: theme.palette.common.black,\r\n    height: \"100%\",\r\n  },\r\n  noDecoration: {\r\n    textDecoration: \"none !important\",\r\n  },\r\n});\r\n\r\nfunction NavigationDrawer(props) {\r\n  const { open, onClose, anchor, classes, menuItems, selectedItem, theme } =\r\n    props;\r\n  const isWidthUpSm = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n\r\n  window.onresize = () => {\r\n    if (isWidthUpSm && open) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Drawer variant=\"temporary\" open={open} onClose={onClose} anchor={anchor}>\r\n      <Toolbar className={classes.headSection}>\r\n        <ListItem\r\n          style={{\r\n            paddingTop: theme.spacing(0),\r\n            paddingBottom: theme.spacing(0),\r\n            height: \"100%\",\r\n            justifyContent: anchor === \"left\" ? \"flex-start\" : \"flex-end\",\r\n          }}\r\n          disableGutters\r\n        >\r\n          <ListItemIcon className={classes.closeIcon}>\r\n            <IconButton\r\n              onClick={onClose}\r\n              aria-label=\"Close Navigation\"\r\n              size=\"large\"\r\n            >\r\n              <CloseIcon color=\"primary\" />\r\n            </IconButton>\r\n          </ListItemIcon>\r\n        </ListItem>\r\n      </Toolbar>\r\n      <List className={classes.blackList}>\r\n        {menuItems.map((element) => {\r\n          if (element.link) {\r\n            return (\r\n              <Link\r\n                key={element.name}\r\n                to={element.link}\r\n                className={classes.noDecoration}\r\n                onClick={onClose}\r\n              >\r\n                <ListItem\r\n                  button\r\n                  selected={selectedItem === element.name}\r\n                  /**\r\n                   * We disable ripple as it will make a weird animation\r\n                   * with primary and secondary color\r\n                   */\r\n                  disableRipple\r\n                  disableTouchRipple\r\n                >\r\n                  <ListItemIcon>{element.icon}</ListItemIcon>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Typography variant=\"subtitle1\" className=\"text-white\">\r\n                        {element.name}\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n              </Link>\r\n            );\r\n          }\r\n          return (\r\n            <ListItem button key={element.name} onClick={element.onClick}>\r\n              <ListItemIcon>{element.icon}</ListItemIcon>\r\n              <ListItemText\r\n                primary={\r\n                  <Typography variant=\"subtitle1\" className=\"text-white\">\r\n                    {element.name}\r\n                  </Typography>\r\n                }\r\n              />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nNavigationDrawer.propTypes = {\r\n  anchor: PropTypes.string.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  menuItems: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  selectedItem: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(NavigationDrawer);\r\n","function shadeColor(color, percent) {\r\n  const f = parseInt(color.slice(1), 16);\r\n  const t = percent < 0 ? 0 : 255;\r\n  const p = percent < 0 ? percent * -1 : percent;\r\n  const R = f >> 16;\r\n  const G = (f >> 8) & 0x00ff;\r\n  const B = f & 0x0000ff;\r\n  return `#${(\r\n    0x1000000 +\r\n    (Math.round((t - R) * p) + R) * 0x10000 +\r\n    (Math.round((t - G) * p) + G) * 0x100 +\r\n    (Math.round((t - B) * p) + B)\r\n  )\r\n    .toString(16)\r\n    .slice(1)}`;\r\n}\r\n\r\nexport default shadeColor;\r\n"],"names":["_ref","component","rest","_jsx","Route","render","routeProps","_len","arguments","length","Array","_key","finalProps","Object","assign","React","renderMergedProps","getLocationId","pathname","search","hash","useLocationBlocker","history","useHistory","useEffect","block","location","action","globLastC","Infinity","smoothScrollTopRec","c","document","documentElement","scrollTop","body","window","requestAnimationFrame","scrollTo","setTimeout","withStyles","theme","main","backgroundColor","palette","warning","light","border","borderWidth","padding","spacing","borderRadius","shape","withTheme","props","className","children","classes","classNames","Typography","variant","wrapper","borderColor","greyed","disableVerticalPadding","disableBorderRadius","style","paddingLeft","paddingRight","inputOptions","numberInput","width","numberInputInput","dBlock","display","listItemLeftPadding","accordionDetails","paddintTop","justifyContent","pushMessageToSnackbar","isSaveLoading","setIsSaveLoading","useState","isDefaultLoading","setIsDefaultLoading","option1","setOption1","option2","setOption2","option3","setOption3","option4","setOption4","option5","setOption5","option6","setOption6","handleChange","useCallback","event","name","value","target","Error","resetState","onSetDefault","text","onSubmit","inputs","state","label","stateName","_jsxs","Accordion","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","List","disablePadding","Bordered","map","element","index","ListItem","disableGutters","divider","ListItemText","FormControl","ListItemSecondaryAction","Select","onChange","input","OutlinedInput","labelWidth","MenuProps","disableScrollLock","innerElement","MenuItem","type","inputProps","step","Box","mr","Button","onClick","disabled","ButtonCircularProgress","color","tooltipTypo","whiteSpace","typography","caption","common","white","tooltip","verticalAlign","fontSize","helpIcon","marginLeft","transition","transitions","create","duration","short","easing","easeInOut","title","isHovered","setIsHovered","onMouseOver","onMouseLeave","Tooltip","enterTouchDelay","HelpIconOutline","onFocus","onBlur","cursor","breakpoints","down","listItem","up","paddingTop","option7","setOption7","handleInputChange","handleCheckboxChange","checked","secondaryAction","Checkbox","helpText","HelpIcon","Fragment","Settings1","Settings2","tableSortLabel","userSelect","noIcon","paddingFix","order","orderBy","rows","onRequestSort","createSortHandler","property","TableHead","TableRow","row","TableCell","align","numeric","sortDirection","placement","enterDelay","TableSortLabel","active","id","direction","array","cmp","stabilizedThis","el","sort","a","b","desc","open","onClose","loading","content","onConfirm","Dialog","disableEscapeKeyDown","DialogTitle","DialogContent","DialogContentText","DialogActions","tableWrapper","overflowX","alignRight","flexDirection","alignItems","blackIcon","black","avatar","height","firstData","iconButton","dNone","targets","setTargets","setOrder","setOrderBy","page","setPage","isDeleteTargetDialogOpen","setIsDeleteTargetDialogOpen","deleteTargetDialogRow","setDeleteTargetDialogRow","isDeleteTargetLoading","setIsDeleteTargetLoading","handleRequestSort","__","_orderBy","_order","deleteTarget","_targets","findIndex","splice","handleChangePage","_","handleDeleteTargetDialogClose","handleDeleteTargetDialogOpen","toggleTarget","isActivated","ConfirmationDialog","Table","EnhancedTableHead","rowCount","TableBody","stableSort","getSorting","slice","hover","tabIndex","scope","Avatar","src","profilePicUrl","number1","number2","number3","number4","IconButton","size","PauseCircleOutlineIcon","PlayCirlceOutlineIcon","DeleteIcon","m","HighlightedInformation","TablePagination","count","rowsPerPage","backIconButtonProps","nextIconButtonProps","onPageChange","select","selectIcon","actions","labelRowsPerPage","paper","borderBottomLeftRadius","borderBottomRightRadius","toolbar","scaleMinus","transform","from","to","spin","animation","listItemSecondaryAction","toggleAccountActivation","isAccountActivated","Paper","Toolbar","primary","secondary","ListItemIcon","LoopIcon","Switch","CardChart","data","profit","views","Grid","container","item","xs","md","selectDashboard","statistics","StatisticsArea","mt","gutterBottom","AccountInformationArea","SettingsArea","UserDataArea","listItemtext","items","anchorEl","useRef","isOpen","setIsOpen","handleClose","handleOpen","buttonRef","MoreVertIcon","Popover","current","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","dense","icon","imageContainer","overflow","position","image","top","bottom","left","right","margin","timeStamp","options","roundedBorder","img","hasMoreWidthThanHeight","setHasMoreWidthThanHeight","hasLoaded","setHasLoaded","onLoad","naturalHeight","naturalWidth","ref","alt","ImageListItemBar","subtitle","format","Date","awareOfUnicodeTokens","actionIcon","VertOptions","setPosts","posts","openAddPostModal","isDeletePostDialogOpen","setIsDeletePostDialogOpen","isDeletePostDialogLoading","setIsDeletePostDialogLoading","closeDeletePostDialog","deletePost","_posts","find","onDelete","printImageGrid","p","post","sm","SelfAligningImage","timestamp","disableElevation","Divider","helpPadding","fullWidth","maxWidth","fullWidthActions","pt","values","root","pb","pr","dialogPaper","dialogContent","ImageCropper","onCrop","aspectRatio","crop","setCrop","getCropFunctionFromChild","cropFunction","onEscapeKeyDown","setCropFunction","floatButtonWrapper","zIndex","inputRoot","uploadIcon","imgWrapper","borderTopLeftRadius","uploadText","emojiTextArea","borderTopRightRadius","marginRight","Dropzone","files","deleteItem","onDrop","EmojiTextArea","DateTimePicker","cropperFile","onCropperClose","uploadAt","onChangeUploadAt","printFile","preview","CloseIcon","accept","fullHeight","ImageCropperDialog","paragraph","mb","inputClassName","maxCharacters","rightContent","emojiSet","disablePast","setFiles","setUploadAt","setLoading","setCropperFile","acceptDrop","file","acceptedFiles","rejectedFiles","isErrorMessage","URL","createObjectURL","key","getTime","dataUrl","handleUpload","ActionPaper","AddPostOptions","selectPosts","isAddPostPaperOpen","setIsAddPostPaperOpen","closeAddPostModal","AddPost","PostContent","Chip","shadeColor","unix","date","getDate","getMonth","getFullYear","cents","toLocaleString","currency","blackBackground","contentWrapper","transactions","transaction","description","balanceChange","ColorfulChip","currencyPrettyPrint","error","dark","unixToDateString","paidUntil","openAddBalanceDialog","selectSubscription","SubscriptionInfo","SubscriptionTable","Routing","PropsRoute","path","Posts","Subscription","Dashboard","marginTop","marginBottom","memo","message","hasErrorOccurred","setHasErrorOccurred","handleError","ListItemAvatar","ErrorIcon","onError","formatDistance","tabContainer","overflowY","maxHeight","popoverPaper","noShadow","boxShadow","messages","handleClick","handleClickAway","MessageIcon","AppBar","pl","MessageListItem","styles","minWidth","Drawer","anchor","outlinedInput","balance","readOnly","appBar","shadows","sharp","leavingScreen","appBarToolbar","accountAvatar","drawerPaper","smBordered","menuLink","textDecoration","iconListItem","paddingBottom","textPrimary","mobileItemSelected","brandText","fontFamily","fontWeight","username","justifyCenter","permanentDrawerListItem","selectedTab","links","isMobileOpen","setIsMobileOpen","isSideDrawerOpen","setIsSideDrawerOpen","isWidthUpSm","useMediaQuery","openMobileDrawer","closeMobileDrawer","openDrawer","closeDrawer","menuItems","link","desktop","DashboardIcon","mobile","ImageIcon","AccountBalanceIcon","PowerSettingsNewIcon","Hidden","smUp","MenuIcon","smDown","Balance","MessagePopperButton","SupervisorAccountIcon","SideDrawer","Link","node","selected","button","click","NavigationDrawer","selectedItem","getPushMessageFromChild","messageInfo","setMessageInfo","queue","processQueue","shift","reason","pushMessage","push","Snackbar","disableWindowBlurListener","autoHideDuration","ContentProps","TransitionProps","onExited","onSuccess","AddBalanceDialog","setAddBalanceDialog","hasFetchedAddBalanceDialog","setHasFetchedAddBlanceDialog","then","Component","default","shuffle","i","j","Math","floor","random","Main","setSelectedTab","setCardChart","hasFetchedCardChart","setHasFetchedCardChart","setEmojiTextArea","hasFetchedEmojiTextArea","setHasFetchedEmojiTextArea","setImageCropper","hasFetchedImageCropper","setHasFetchedImageCropper","setDropzone","hasFetchedDropzone","setHasFetchedDropzone","setDateTimePicker","hasFetchedDateTimePicker","setHasFetchedDateTimePicker","setTransactions","setStatistics","setMessages","setIsAccountActivated","isAddBalanceDialogOpen","setIsAddBalanceDialogOpen","setPushMessageToSnackbar","fetchRandomTargets","randomPerson","persons","round","closeAddBalanceDialog","onPaymentSuccess","fetchRandomStatistics","oneYearSeconds","curProfit","curViews","curUnix","fetchRandomTransactions","oneMonthSeconds","transactionTemplates","isSubscription","randomTransactionTemplate","reverse","fetchRandomMessages","iterations","fetchRandomPosts","person","smoothScrollTop","LazyLoadAddBalanceDialog","NavBar","ConsecutiveSnackbarMessages","circularProgress","CircularProgress","thickness","closeIcon","headSection","blackList","noDecoration","onresize","disableRipple","disableTouchRipple","percent","f","parseInt","t","R","G","B","toString"],"sourceRoot":""}