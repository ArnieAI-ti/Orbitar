{"version":3,"file":"static/js/804.d7cc3360.chunk.js","mappings":"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","sources":["shared/components/PropsRoute.js","shared/functions/useLocationBlocker.js","shared/functions/smoothScrollTop.js","shared/components/HighlightedInformation.js","shared/components/Bordered.js","logged_in/components/dashboard/Settings1.js","shared/components/HelpIcon.js","logged_in/components/dashboard/Settings2.js","logged_in/components/dashboard/SettingsArea.js","shared/components/EnhancedTableHead.js","shared/functions/stableSort.js","shared/functions/getSorting.js","shared/components/ConfirmationDialog.js","logged_in/components/dashboard/UserDataArea.js","logged_in/components/dashboard/AccountInformationArea.js","logged_in/components/dashboard/StatisticsArea.js","logged_in/components/dashboard/Dashboard.js","shared/components/VertOptions.js","shared/components/SelfAligningImage.js","logged_in/components/posts/PostContent.js","shared/components/ActionPaper.js","shared/components/ImageCropperDialog.js","logged_in/components/posts/AddPostOptions.js","logged_in/components/posts/AddPost.js","logged_in/components/posts/Posts.js","shared/components/ColorfulChip.js","shared/functions/unixToDateString.js","shared/functions/currencyPrettyPrint.js","logged_in/components/subscription/SubscriptionTable.js","logged_in/components/subscription/SubscriptionInfo.js","logged_in/components/subscription/Subscription.js","logged_in/components/Routing.js","logged_in/components/navigation/MessageListItem.js","logged_in/components/navigation/MessagePopperButton.js","logged_in/components/navigation/SideDrawer.js","logged_in/components/navigation/Balance.js","logged_in/components/navigation/NavBar.js","shared/components/ConsecutiveSnackbarMessages.js","logged_in/dummy_data/persons.js","logged_in/components/subscription/LazyLoadAddBalanceDialog.js","logged_in/components/Main.js","shared/components/ButtonCircularProgress.js","shared/components/NavigationDrawer.js","shared/functions/shadeColor.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst renderMergedProps = (component, ...rest) => {\r\n  const finalProps = Object.assign({}, ...rest);\r\n  return React.createElement(component, finalProps);\r\n};\r\n\r\n/**\r\n * Wrapper around the Router component, which makes it pass the properties\r\n * to it's child.\r\n * Taken from https://github.com/ReactTraining/react-router/issues/4105\r\n */\r\nconst PropsRoute = ({ component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={routeProps => renderMergedProps(component, routeProps, rest)}\r\n  />\r\n);\r\n\r\nPropsRoute.propTypes = {\r\n  component: PropTypes.oneOfType([PropTypes.elementType, PropTypes.node])\r\n};\r\n\r\nexport default PropsRoute;\r\n","import { useHistory } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nconst useLocationBlocker = () => {\r\n  /** \r\n   * Prevents react-router from pushing the same\r\n   * page to the history twice which leads to\r\n   * multiple clicks on the back icon of the browser\r\n   * being necessary to go back into the history.\r\n  */\r\n  const history = useHistory();\r\n  useEffect(\r\n    () =>\r\n      history.block(\r\n        (location, action) =>\r\n          action !== \"PUSH\" ||\r\n          getLocationId(location) !== getLocationId(history.location)\r\n      ),\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n}\r\n\r\nconst getLocationId = ({ pathname, search, hash }) => {\r\n  return pathname + (search ? \"?\" + search : \"\") + (hash ? \"#\" + hash : \"\");\r\n}\r\n\r\nexport default useLocationBlocker;","/**\r\n * When called scrolls smooth to the top of the page.\r\n * globLastC prevents shaky animations when scrolling to\r\n * bottom while topscrolling.\r\n */\r\nlet globLastC = Infinity;\r\n\r\nfunction smoothScrollTopRec() {\r\n  const c = document.documentElement.scrollTop || document.body.scrollTop;\r\n  if (c > 0 && globLastC > c) {\r\n    globLastC = c;\r\n    window.requestAnimationFrame(smoothScrollTopRec);\r\n    window.scrollTo(0, c - c / 8);\r\n  } else {\r\n    globLastC = Infinity;\r\n  }\r\n}\r\n\r\nfunction smoothScrollTop() {\r\n  /**\r\n   * Normally this gets called from componentDidMount()\r\n   * Not waiting a tiny fraction of time can lead\r\n   * to shaky behaviour\r\n   */\r\n  setTimeout(() => {\r\n    smoothScrollTopRec();\r\n  }, 10);\r\n}\r\n\r\nexport default smoothScrollTop;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { Typography } from \"@mui/material\";\r\n\r\nimport withStyles from '@mui/styles/withStyles';\r\n\r\nconst styles = theme => ({\r\n  main: {\r\n    backgroundColor: theme.palette.warning.light,\r\n    border: `${theme.border.borderWidth}px solid ${theme.palette.warning.main}`,\r\n    padding: theme.spacing(2),\r\n    borderRadius: theme.shape.borderRadius\r\n  }\r\n});\r\n\r\nfunction HighlighedInformation(props) {\r\n  const { className, children, classes } = props;\r\n  return (\r\n    <div className={classNames(classes.main, className ? className : null)}>\r\n      <Typography variant=\"body2\">{children}</Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nHighlighedInformation.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.element,\r\n    PropTypes.array\r\n  ]).isRequired,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(HighlighedInformation);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from '@mui/styles/withStyles';\r\n\r\nconst styles = theme => ({\r\n  wrapper: {\r\n    border: `${theme.border.borderWidth}px solid ${theme.border.borderColor}`\r\n  },\r\n  greyed: {\r\n    border: `${theme.border.borderWidth}px solid rgba(0, 0, 0, 0.23)`\r\n  }\r\n});\r\n\r\nfunction Bordered(props) {\r\n  const {\r\n    classes,\r\n    theme,\r\n    disableVerticalPadding,\r\n    disableBorderRadius,\r\n    children,\r\n    variant\r\n  } = props;\r\n  return (\r\n    <div\r\n      className={variant === \"greyed\" ? classes.greyed : classes.wrapper}\r\n      style={{\r\n        paddingLeft: disableVerticalPadding ? 0 : theme.spacing(2),\r\n        paddingRight: disableVerticalPadding ? 0 : theme.spacing(2),\r\n        borderRadius: disableBorderRadius ? 0 : theme.shape.borderRadius\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nBordered.propTypes = {\r\n  classes: PropTypes.object,\r\n  theme: PropTypes.object,\r\n  disableVerticalPadding: PropTypes.bool,\r\n  disableBorderRadius: PropTypes.bool,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.element,\r\n    PropTypes.func,\r\n    PropTypes.array\r\n  ]),\r\n  variant: PropTypes.string\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(Bordered);\r\n","import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  Button,\n  Accordion,\n  AccordionSummary,\n  Typography,\n  ListItemText,\n  OutlinedInput,\n  AccordionDetails,\n  MenuItem,\n  FormControl,\n  Select,\n  Box,\n} from \"@mui/material\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Bordered from \"../../../shared/components/Bordered\";\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\n\nconst styles = (theme) => ({\n  numberInput: {\n    width: 110,\n  },\n  numberInputInput: {\n    padding: \"9px 34px 9px 14.5px\",\n  },\n  dBlock: { display: \"block\" },\n  listItemLeftPadding: {\n    paddingRight: theme.spacing(3),\n  },\n  accordionDetails: {\n    paddintTop: theme.spacing(0),\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n});\nconst inputOptions = [\"None\", \"Slow\", \"Normal\", \"Fast\"];\n\nfunction Settings1(props) {\n  const { classes, pushMessageToSnackbar, theme } = props;\n  const [isSaveLoading, setIsSaveLoading] = useState(false);\n  const [isDefaultLoading, setIsDefaultLoading] = useState(false);\n  const [option1, setOption1] = useState(\"None\");\n  const [option2, setOption2] = useState(\"None\");\n  const [option3, setOption3] = useState(\"None\");\n  const [option4, setOption4] = useState(\"None\");\n  const [option5, setOption5] = useState(\"2 Days\");\n  const [option6, setOption6] = useState(7500);\n\n  const handleChange = useCallback(\n    (event) => {\n      const { name, value } = event.target;\n      if (name === \"option6\") {\n        if (value > 7500 || value < 1000) {\n          return;\n        }\n      }\n      switch (name) {\n        case \"option1\": {\n          setOption1(value);\n          break;\n        }\n        case \"option2\": {\n          setOption2(value);\n          break;\n        }\n        case \"option3\": {\n          setOption3(value);\n          break;\n        }\n        case \"option4\": {\n          setOption4(value);\n          break;\n        }\n        case \"option5\": {\n          setOption5(value);\n          break;\n        }\n        case \"option6\": {\n          setOption6(value);\n          break;\n        }\n        default:\n          throw new Error(\"No branch selected in switch statement.\");\n      }\n    },\n    [setOption1, setOption2, setOption3, setOption4, setOption5, setOption6]\n  );\n\n  const resetState = useCallback(() => {\n    setIsSaveLoading(false);\n    setIsDefaultLoading(false);\n    setOption1(\"None\");\n    setOption2(\"None\");\n    setOption3(\"None\");\n    setOption4(\"None\");\n    setOption5(\"2 Days\");\n    setOption6(7500);\n  }, [\n    setIsSaveLoading,\n    setIsDefaultLoading,\n    setOption1,\n    setOption2,\n    setOption3,\n    setOption4,\n    setOption5,\n    setOption6,\n  ]);\n\n  const onSetDefault = useCallback(() => {\n    setIsDefaultLoading(true);\n    setTimeout(() => {\n      pushMessageToSnackbar({\n        text: \"Your settings have been reset to default\",\n      });\n      resetState();\n    }, 1500);\n  }, [pushMessageToSnackbar, resetState]);\n\n  const onSubmit = useCallback(() => {\n    setIsSaveLoading(true);\n    setTimeout(() => {\n      pushMessageToSnackbar({\n        text: \"Your settings have been saved\",\n      });\n      setIsSaveLoading(false);\n    }, 1500);\n  }, [setIsSaveLoading, pushMessageToSnackbar]);\n\n  const inputs = [\n    {\n      state: option1,\n      label: \"Option 1\",\n      stateName: \"option1\",\n    },\n    {\n      state: option2,\n      label: \"Option 2\",\n      stateName: \"option2\",\n    },\n    {\n      state: option3,\n      label: \"Option 3\",\n      stateName: \"option3\",\n    },\n    {\n      state: option4,\n      label: \"Option 4\",\n      stateName: \"option4\",\n    },\n  ];\n\n  return (\n    <Accordion sx={{ borderRadius: theme.shape.borderRadius, boxShadow: theme.shadows[3] }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography>Settings 1</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.dBlock}>\n        <List disablePadding>\n          <Bordered disableVerticalPadding disableBorderRadius>\n            {inputs.map((element, index) => (\n              <ListItem\n                className=\"listItemLeftPadding\"\n                disableGutters\n                divider\n                key={index}\n              >\n                <ListItemText>\n                  <Typography variant=\"body2\">{element.label}</Typography>\n                </ListItemText>\n                <FormControl variant=\"outlined\">\n                  <ListItemSecondaryAction\n                    className={classes.ListItemSecondaryAction}\n                  >\n                    <Select\n                      value={element.state}\n                      onChange={handleChange}\n                      input={\n                        <OutlinedInput\n                          name={element.stateName}\n                          labelWidth={0}\n                          className={classes.numberInput}\n                          classes={{ input: classes.numberInputInput }}\n                        />\n                      }\n                      MenuProps={{ disableScrollLock: true }}\n                    >\n                      {inputOptions.map((innerElement) => (\n                        <MenuItem value={innerElement} key={innerElement}>\n                          {innerElement}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </ListItemSecondaryAction>\n                </FormControl>\n              </ListItem>\n            ))}\n            <ListItem className=\"listItemLeftPadding\" disableGutters divider>\n              <ListItemText>\n                <Typography variant=\"body2\">Option 5</Typography>\n              </ListItemText>\n              <FormControl variant=\"outlined\">\n                <ListItemSecondaryAction\n                  className={classes.ListItemSecondaryAction}\n                >\n                  <Select\n                    value={option5}\n                    onChange={handleChange}\n                    input={\n                      <OutlinedInput\n                        name=\"option5\"\n                        labelWidth={0}\n                        className={classes.numberInput}\n                        classes={{ input: classes.numberInputInput }}\n                      />\n                    }\n                    MenuProps={{ disableScrollLock: true }}\n                  >\n                    {[\n                      \"Always\",\n                      \"6 Hours\",\n                      \"12 Hours\",\n                      \"1 Day\",\n                      \"2 Days\",\n                      \"3 Days\",\n                      \"1 Week\",\n                    ].map((element) => (\n                      <MenuItem value={element} key={element}>\n                        {element}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </ListItemSecondaryAction>\n              </FormControl>\n            </ListItem>\n            <ListItem className=\"listItemLeftPadding\" disableGutters>\n              <ListItemText>\n                <Typography variant=\"body2\">Option 6</Typography>\n              </ListItemText>\n              <FormControl variant=\"outlined\">\n                <ListItemSecondaryAction\n                  className={classes.ListItemSecondaryAction}\n                >\n                  <OutlinedInput\n                    labelWidth={0}\n                    name=\"option6\"\n                    value={option6}\n                    type=\"number\"\n                    onChange={handleChange}\n                    className={classes.numberInput}\n                    classes={{ input: classes.numberInputInput }}\n                    inputProps={{ step: 20 }}\n                  />\n                </ListItemSecondaryAction>\n              </FormControl>\n            </ListItem>\n          </Bordered>\n        </List>\n      </AccordionDetails>\n      <AccordionDetails className={classes.accordionDetails}>\n        <Box mr={1}>\n          <Button\n            onClick={onSetDefault}\n            disabled={isSaveLoading || isDefaultLoading}\n          >\n            Default {isDefaultLoading && <ButtonCircularProgress />}\n          </Button>\n        </Box>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={isSaveLoading || isDefaultLoading}\n          onClick={onSubmit}\n        >\n          Save {isSaveLoading && <ButtonCircularProgress />}\n        </Button>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n\nSettings1.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  pushMessageToSnackbar: PropTypes.func,\n};\n\nexport default withStyles(styles, { withTheme: true })(Settings1);\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Tooltip, Typography } from \"@mui/material\";\r\nimport withStyles from '@mui/styles/withStyles';\r\nimport HelpIconOutline from \"@mui/icons-material/HelpOutline\";\r\n\r\nconst styles = theme => ({\r\n  tooltipTypo: {\r\n    whiteSpace: \"pre-line !important\",\r\n    ...theme.typography.caption,\r\n    color: theme.palette.common.white\r\n  },\r\n  tooltip: {\r\n    verticalAlign: \"middle\",\r\n    fontSize: \"1.25rem\"\r\n  },\r\n  helpIcon: {\r\n    marginLeft: theme.spacing(1),\r\n    \"@media (max-width: 350px)\": {\r\n      marginLeft: theme.spacing(0.5)\r\n    },\r\n    transition: theme.transitions.create([\"color\"], {\r\n      duration: theme.transitions.duration.short,\r\n      easing: theme.transitions.easing.easeInOut\r\n    })\r\n  }\r\n});\r\n\r\nfunction HelpIcon(props) {\r\n  const { classes, title } = props;\r\n  const [isHovered, setIsHovered] = useState(false);\r\n\r\n  const onMouseOver = useCallback(() => {\r\n    setIsHovered(true);\r\n  }, []);\r\n\r\n  const onMouseLeave = useCallback(() => {\r\n    setIsHovered(false);\r\n  }, []);\r\n\r\n  return (\r\n    <Tooltip\r\n      title={\r\n        <Typography variant=\"body2\" className={classes.tooltipTypo}>\r\n          {title}\r\n        </Typography>\r\n      }\r\n      className={classes.tooltip}\r\n      enterTouchDelay={300}\r\n    >\r\n      <HelpIconOutline\r\n        /**\r\n         * We have to use onMouseOver and not onMouseEnter, because if we have overlapping\r\n         * tooltips, the onMouseEnter wont fire when the old tooltip is fading\r\n         * */\r\n        onMouseOver={onMouseOver}\r\n        onFocus={onMouseOver}\r\n        onBlur={onMouseLeave}\r\n        onMouseLeave={onMouseLeave}\r\n        color={isHovered ? \"primary\" : \"inherit\"}\r\n        className={classes.helpIcon}\r\n        style={{ cursor: isHovered ? \"pointer\" : \"auto\" }}\r\n      />\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nHelpIcon.propTypes = {\r\n  classes: PropTypes.object,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node])\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(HelpIcon);\r\n","import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Typography,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  FormControl,\n  Select,\n  OutlinedInput,\n  MenuItem,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport HelpIcon from \"../../../shared/components/HelpIcon\";\nimport Bordered from \"../../../shared/components/Bordered\";\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\n\nconst styles = (theme) => ({\n  numberInput: {\n    width: 120,\n    [theme.breakpoints.down(\"md\")]: {\n      width: 80,\n    },\n    \"@media (max-width: 350px)\": {\n      width: 65,\n    },\n  },\n  numberInputInput: {\n    padding: \"9px 14.5px\",\n    \"@media (max-width: 380px)\": {\n      padding: \"9px 8.5px\",\n    },\n    \"@media (max-width: 350px)\": {\n      padding: \"9px 6.5px\",\n    },\n  },\n  listItem: {\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingLeft: theme.spacing(4),\n    },\n    paddingLeft: 100,\n  },\n  AccordionDetails: {\n    paddingTop: theme.spacing(0),\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  dBlock: {\n    display: \"block\",\n  },\n});\n\nfunction Settings2(props) {\n  const { pushMessageToSnackbar, classes, theme } = props;\n  const [isDefaultLoading, setIsDefaultLoading] = useState(false);\n  const [isSaveLoading, setIsSaveLoading] = useState(false);\n  const [option1, setOption1] = useState(false);\n  const [option2, setOption2] = useState(false);\n  const [option3, setOption3] = useState(false);\n  const [option4, setOption4] = useState(false);\n  const [option5, setOption5] = useState(false);\n  const [option6, setOption6] = useState(\"Both\");\n  const [option7, setOption7] = useState(\"2 weeks\");\n\n  const resetState = useCallback(() => {\n    setIsDefaultLoading(false);\n    setIsSaveLoading(false);\n    setOption1(false);\n    setOption2(false);\n    setOption3(false);\n    setOption4(false);\n    setOption5(false);\n    setOption6(\"Both\");\n    setOption7(\"2 weeks\");\n  }, [\n    setOption1,\n    setOption2,\n    setOption3,\n    setOption4,\n    setOption5,\n    setOption6,\n    setOption7,\n  ]);\n\n  const onSubmit = useCallback(() => {\n    setIsSaveLoading(true);\n    setTimeout(() => {\n      pushMessageToSnackbar({\n        text: \"Your settings have been saved\",\n      });\n      setIsSaveLoading(false);\n    }, 1500);\n  }, [pushMessageToSnackbar, setIsSaveLoading]);\n\n  const onSetDefault = useCallback(() => {\n    setIsDefaultLoading(true);\n    setTimeout(() => {\n      pushMessageToSnackbar({\n        text: \"Your settings have been reset to default\",\n      });\n      resetState();\n    }, 1500);\n  }, [pushMessageToSnackbar, resetState, setIsDefaultLoading]);\n\n  const handleInputChange = useCallback(\n    (event) => {\n      const { name, value } = event.target;\n      switch (name) {\n        case \"option6\": {\n          setOption6(value);\n          break;\n        }\n        case \"option7\": {\n          setOption7(value);\n          break;\n        }\n        default:\n          throw new Error(\"No branch selected in switch statement\");\n      }\n    },\n    [setOption6, setOption7]\n  );\n\n  const handleCheckboxChange = (name) => (event) => {\n    switch (name) {\n      case \"option1\":\n        setOption1(event.target.checked);\n        break;\n      case \"option2\":\n        setOption2(event.target.checked);\n        break;\n      case \"option3\":\n        setOption3(event.target.checked);\n        break;\n      case \"option4\":\n        setOption4(event.target.checked);\n        break;\n      case \"option5\":\n        setOption5(event.target.checked);\n        break;\n      default:\n        throw new Error(\"No branch selected in switch statement.\");\n    }\n  };\n\n  const inputs = [\n    {\n      title: \"Option 1\",\n      secondaryAction: (\n        <Checkbox\n          value=\"option1\"\n          color=\"primary\"\n          checked={option1}\n          onChange={handleCheckboxChange(\"option1\")}\n        />\n      ),\n    },\n    {\n      title: \"Option 2\",\n      secondaryAction: (\n        <Checkbox\n          value=\"option2\"\n          color=\"primary\"\n          checked={option2}\n          onChange={handleCheckboxChange(\"option2\")}\n        />\n      ),\n    },\n    {\n      title: \"Option 3\",\n      secondaryAction: (\n        <Checkbox\n          value=\"option3\"\n          color=\"primary\"\n          checked={option3}\n          onChange={handleCheckboxChange(\"option3\")}\n        />\n      ),\n      helpText: \"You can add some further explanation here.\",\n    },\n    {\n      title: \"Option 4\",\n      secondaryAction: (\n        <Checkbox\n          value=\"option4\"\n          color=\"primary\"\n          checked={option4}\n          onChange={handleCheckboxChange(\"option4\")}\n        />\n      ),\n    },\n    {\n      title: \"Option 5\",\n      secondaryAction: (\n        <Checkbox\n          value=\"option5\"\n          color=\"primary\"\n          checked={option5}\n          onChange={handleCheckboxChange(\"option5\")}\n        />\n      ),\n    },\n    {\n      title: \"Option 6\",\n      secondaryAction: (\n        <Select\n          value={option6}\n          input={\n            <OutlinedInput\n              onChange={handleInputChange}\n              labelWidth={0}\n              className={classes.numberInput}\n              classes={{ input: classes.numberInputInput }}\n              name=\"option6\"\n            />\n          }\n        >\n          <MenuItem value=\"Both\">Both</MenuItem>\n          <MenuItem value=\"Male+\">Male+</MenuItem>\n          <MenuItem value=\"Female+\">Female+</MenuItem>\n          <MenuItem value=\"Only male\">Only male</MenuItem>\n          <MenuItem value=\"Only female\">Only female</MenuItem>\n        </Select>\n      ),\n      helpText: \"You can add some further explanation here.\",\n    },\n    {\n      title: \"Option 7\",\n      secondaryAction: (\n        <Select\n          value={option7}\n          input={\n            <OutlinedInput\n              onChange={handleInputChange}\n              labelWidth={0}\n              className={classes.numberInput}\n              classes={{ input: classes.numberInputInput }}\n              name=\"option7\"\n            />\n          }\n        >\n          <MenuItem value=\"None\">None</MenuItem>\n          <MenuItem value=\"6 hours\">6 hours</MenuItem>\n          <MenuItem value=\"12 hours\">12 hours</MenuItem>\n          <MenuItem value=\"1 day\">1 day</MenuItem>\n          <MenuItem value=\"3 days\">3 days</MenuItem>\n          <MenuItem value=\"1 week\">1 week</MenuItem>\n          <MenuItem value=\"2 weeks\">2 weeks</MenuItem>\n          <MenuItem value=\"1 month\">1 month</MenuItem>\n          <MenuItem value=\"3 months\">3 months</MenuItem>\n          <MenuItem value=\"6 months\">6 months</MenuItem>\n        </Select>\n      ),\n      helpText: \"You can add some further explanation here.\",\n    },\n  ];\n\n  return (\n    <Accordion sx={{ borderRadius: theme.shape.borderRadius, boxShadow: theme.shadows[3] }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography>Settings 2</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.dBlock}>\n        <List disablePadding>\n          <Bordered disableVerticalPadding disableBorderRadius>\n            {inputs.map((element, index) => (\n              <ListItem\n                key={index}\n                divider={index !== inputs.length - 1}\n                className=\"listItemLeftPadding\"\n              >\n                <ListItemText>\n                  <Typography variant=\"body2\">\n                    {element.title}\n                    {element.helpText && <HelpIcon title={element.helpText} />}\n                  </Typography>\n                </ListItemText>\n                <ListItemSecondaryAction>\n                  <FormControl variant=\"outlined\">\n                    {element.secondaryAction}\n                  </FormControl>\n                </ListItemSecondaryAction>\n              </ListItem>\n            ))}\n          </Bordered>\n        </List>\n      </AccordionDetails>\n      <AccordionDetails className={classes.AccordionDetails}>\n        <Box mr={1}>\n          <Button\n            onClick={onSetDefault}\n            disabled={isSaveLoading || isDefaultLoading}\n          >\n            Default {isDefaultLoading && <ButtonCircularProgress />}\n          </Button>\n        </Box>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={onSubmit}\n          disabled={isSaveLoading || isDefaultLoading}\n        >\n          Save {isSaveLoading && <ButtonCircularProgress />}\n        </Button>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n\nSettings2.propTypes = {\n  classes: PropTypes.object,\n  pushMessageToSnackbar: PropTypes.func,\n};\n\nexport default withStyles(styles, { withTheme: true })(Settings2);\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Settings1 from \"./Settings1\";\r\nimport Settings2 from \"./Settings2\";\r\n\r\nfunction SettingsArea(props) {\r\n  const { pushMessageToSnackbar } = props;\r\n  return (\r\n    <Fragment>\r\n      <Settings1 pushMessageToSnackbar={pushMessageToSnackbar} />\r\n      <Settings2 pushMessageToSnackbar={pushMessageToSnackbar} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nSettingsArea.propTypes = {\r\n  pushMessageToSnackbar: PropTypes.func\r\n};\r\n\r\nexport default SettingsArea;\r\n","import React, { useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { Typography, TableCell, TableHead, TableRow, TableSortLabel, Tooltip } from \"@mui/material\";\r\n\r\nimport withStyles from '@mui/styles/withStyles';\r\n\r\nconst styles = theme => ({\r\n  tableSortLabel: {\r\n    cursor: \"text\",\r\n    userSelect: \"auto\",\r\n    color: \"inherit !important\"\r\n  },\r\n  noIcon: {\r\n    \"& path\": {\r\n      display: \"none !important\"\r\n    }\r\n  },\r\n  paddingFix: {\r\n    paddingLeft: theme.spacing(3)\r\n  }\r\n});\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { order, orderBy, rows, onRequestSort, classes } = props;\r\n\r\n  const createSortHandler = useCallback(\r\n    property => event => {\r\n      onRequestSort(event, property);\r\n    },\r\n    [onRequestSort]\r\n  );\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {rows.map((row, index) => (\r\n          <TableCell\r\n            key={index}\r\n            align={row.numeric ? \"right\" : \"inherit\"}\r\n            padding=\"normal\"\r\n            sortDirection={orderBy === row.name ? order : false}\r\n            className={index === 0 ? classes.paddingFix : null}\r\n          >\r\n            {onRequestSort ? (\r\n              <Tooltip\r\n                title=\"Sort\"\r\n                placement={row.numeric ? \"bottom-end\" : \"bottom-start\"}\r\n                enterDelay={300}\r\n              >\r\n                <TableSortLabel\r\n                  active={orderBy === row.id}\r\n                  direction={order}\r\n                  onClick={createSortHandler(row.id)}\r\n                >\r\n                  <Typography variant=\"body2\">{row.label}</Typography>\r\n                </TableSortLabel>\r\n              </Tooltip>\r\n            ) : (\r\n              <TableSortLabel\r\n                className={classNames(classes.tableSortLabel, classes.noIcon)}\r\n              >\r\n                <Typography variant=\"body2\" className={classes.label}>\r\n                  {row.label}\r\n                </Typography>\r\n              </TableSortLabel>\r\n            )}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  onRequestSort: PropTypes.func,\r\n  order: PropTypes.string,\r\n  orderBy: PropTypes.string,\r\n  rows: PropTypes.arrayOf(PropTypes.object).isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(EnhancedTableHead);\r\n","function stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\nexport default stableSort;\r\n","function desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => desc(a, b, orderBy)\r\n    : (a, b) => -desc(a, b, orderBy);\r\n}\r\nexport default getSorting;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Button\r\n} from \"@mui/material\";\r\nimport ButtonCircularProgress from \"./ButtonCircularProgress\";\r\n\r\nfunction ConfirmationDialog(props) {\r\n  const { open, onClose, loading, title, content, onConfirm } = props;\r\n  return (\r\n    <Dialog open={open} onClose={onClose} disableEscapeKeyDown={loading}>\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>{content}</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} disabled={loading}>\r\n          Close\r\n        </Button>\r\n        <Button\r\n          color=\"secondary\"\r\n          onClick={onConfirm}\r\n          variant=\"contained\"\r\n          disabled={loading}\r\n        >\r\n          Yes {loading && <ButtonCircularProgress />}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nConfirmationDialog.propTypes = {\r\n  open: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  loading: PropTypes.bool,\r\n  title: PropTypes.string,\r\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  onConfirm: PropTypes.func\r\n};\r\n\r\nexport default ConfirmationDialog;\r\n","import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TablePagination,\n  TableRow,\n  IconButton,\n  Avatar,\n  Box,\n  Accordion,\n  AccordionSummary,\n  Typography,\n} from \"@mui/material\";\nimport withStyles from '@mui/styles/withStyles';\nimport PlayCirlceOutlineIcon from \"@mui/icons-material/PlayCircleOutline\";\nimport PauseCircleOutlineIcon from \"@mui/icons-material/PauseCircleOutline\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EnhancedTableHead from \"../../../shared/components/EnhancedTableHead\";\nimport stableSort from \"../../../shared/functions/stableSort\";\nimport getSorting from \"../../../shared/functions/getSorting\";\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\nimport ConfirmationDialog from \"../../../shared/components/ConfirmationDialog\";\n\nconst styles = (theme) => ({\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  alignRight: {\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(2),\n  },\n  blackIcon: {\n    color: theme.palette.common.black,\n  },\n  avatar: {\n    width: 28,\n    height: 28,\n  },\n  firstData: {\n    paddingLeft: theme.spacing(3),\n  },\n  iconButton: {\n    padding: theme.spacing(1),\n  },\n  dBlock: {\n    display: \"block\",\n  },\n  dNone: {\n    display: \"none\",\n  },\n});\n\nconst rows = [\n  {\n    id: \"icon\",\n    numeric: true,\n    label: \"\",\n  },\n  {\n    id: \"name\",\n    numeric: false,\n    label: \"Name\",\n  },\n  { id: \"number1\", numeric: false, label: \"Category 1\" },\n  { id: \"number2\", numeric: false, label: \"Category 2\" },\n  { id: \"number3\", numeric: false, label: \"Category 3\" },\n  {\n    id: \"number4\",\n    numeric: false,\n    label: \"Category 4\",\n  },\n  {\n    id: \"actions\",\n    numeric: false,\n    label: \"\",\n  },\n];\n\nconst rowsPerPage = 25;\n\nfunction CustomTable(props) {\n  const { pushMessageToSnackbar, classes, targets, setTargets, theme } = props;\n  const [order, setOrder] = useState(\"asc\");\n  const [orderBy, setOrderBy] = useState(null);\n  const [page, setPage] = useState(0);\n  const [isDeleteTargetDialogOpen, setIsDeleteTargetDialogOpen] = useState(\n    false\n  );\n  const [deleteTargetDialogRow, setDeleteTargetDialogRow] = useState(null);\n  const [isDeleteTargetLoading, setIsDeleteTargetLoading] = useState(false);\n\n  const handleRequestSort = useCallback(\n    (__, property) => {\n      const _orderBy = property;\n      let _order = \"desc\";\n      if (orderBy === property && order === \"desc\") {\n        _order = \"asc\";\n      }\n      setOrder(_order);\n      setOrderBy(_orderBy);\n    },\n    [setOrder, setOrderBy, order, orderBy]\n  );\n\n  const deleteTarget = useCallback(() => {\n    setIsDeleteTargetLoading(true);\n    setTimeout(() => {\n      setIsDeleteTargetDialogOpen(false);\n      setIsDeleteTargetLoading(false);\n      const _targets = [...targets];\n      const index = _targets.findIndex(\n        (element) => element.id === deleteTargetDialogRow.id\n      );\n      _targets.splice(index, 1);\n      setTargets(_targets);\n      pushMessageToSnackbar({\n        text: \"Your friend has been removed\",\n      });\n    }, 1500);\n  }, [\n    setIsDeleteTargetDialogOpen,\n    setIsDeleteTargetLoading,\n    pushMessageToSnackbar,\n    setTargets,\n    deleteTargetDialogRow,\n    targets,\n  ]);\n\n  const handleChangePage = useCallback(\n    (_, page) => {\n      setPage(page);\n    },\n    [setPage]\n  );\n\n  const handleDeleteTargetDialogClose = useCallback(() => {\n    setIsDeleteTargetDialogOpen(false);\n  }, [setIsDeleteTargetDialogOpen]);\n\n  const handleDeleteTargetDialogOpen = useCallback(\n    (row) => {\n      setIsDeleteTargetDialogOpen(true);\n      setDeleteTargetDialogRow(row);\n    },\n    [setIsDeleteTargetDialogOpen, setDeleteTargetDialogRow]\n  );\n\n  const toggleTarget = useCallback(\n    (row) => {\n      const _targets = [...targets];\n      const index = _targets.findIndex((element) => element.id === row.id);\n      row.isActivated = !row.isActivated;\n      _targets[index] = row;\n      if (row.isActivated) {\n        pushMessageToSnackbar({\n          text: \"The row is now activated\",\n        });\n      } else {\n        pushMessageToSnackbar({\n          text: \"The row is now deactivated\",\n        });\n      }\n      setTargets(_targets);\n    },\n    [pushMessageToSnackbar, targets, setTargets]\n  );\n\n  return (\n    <Accordion sx={{ borderRadius: theme.shape.borderRadius, boxShadow: theme.shadows[3] }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography>Some user data</Typography>\n      </AccordionSummary>\n      <ConfirmationDialog\n        open={isDeleteTargetDialogOpen}\n        title=\"Confirmation\"\n        content={\n          deleteTargetDialogRow ? (\n            <span>\n              {\"Do you really want to remove the friend \"}\n              <b>{deleteTargetDialogRow.name}</b>\n              {\" from your list?\"}\n            </span>\n          ) : null\n        }\n        onClose={handleDeleteTargetDialogClose}\n        onConfirm={deleteTarget}\n        loading={isDeleteTargetLoading}\n      />\n      <Box width=\"100%\">\n        <div className={classes.tableWrapper}>\n          {targets.length > 0 ? (\n            <Table aria-labelledby=\"tableTitle\">\n              <EnhancedTableHead\n                order={order}\n                orderBy={orderBy}\n                onRequestSort={handleRequestSort}\n                rowCount={targets.length}\n                rows={rows}\n              />\n              <TableBody>\n                {stableSort(targets, getSorting(order, orderBy))\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((row, index) => (\n                    <TableRow hover tabIndex={-1} key={index}>\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        className={classes.firstData}\n                      >\n                        <Avatar\n                          className={classes.avatar}\n                          src={row.profilePicUrl}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.number1}\n                      </TableCell>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.number2}\n                      </TableCell>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.number3}\n                      </TableCell>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.number4}\n                      </TableCell>\n                      <TableCell component=\"th\" scope=\"row\">\n                        <Box display=\"flex\" justifyContent=\"flex-end\">\n                          {row.isActivated ? (\n                            <IconButton\n                              className={classes.iconButton}\n                              onClick={() => {\n                                toggleTarget(row);\n                              }}\n                              aria-label=\"Pause\"\n                              size=\"large\">\n                              <PauseCircleOutlineIcon\n                                className={classes.blackIcon}\n                              />\n                            </IconButton>\n                          ) : (\n                            <IconButton\n                              className={classes.iconButton}\n                              color=\"primary\"\n                              onClick={() => {\n                                toggleTarget(row);\n                              }}\n                              aria-label=\"Resume\"\n                              size=\"large\">\n                              <PlayCirlceOutlineIcon />\n                            </IconButton>\n                          )}\n                          <IconButton\n                            className={classes.iconButton}\n                            onClick={() => {\n                              handleDeleteTargetDialogOpen(row);\n                            }}\n                            aria-label=\"Delete\"\n                            size=\"large\">\n                            <DeleteIcon className={classes.blackIcon} />\n                          </IconButton>\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n          ) : (\n            <Box m={2}>\n              <HighlightedInformation>\n                No friends added yet.\n              </HighlightedInformation>\n            </Box>\n          )}\n        </div>\n        <div className={classes.alignRight}>\n          <TablePagination\n            component=\"div\"\n            count={targets.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            backIconButtonProps={{\n              \"aria-label\": \"Previous Page\",\n            }}\n            nextIconButtonProps={{\n              \"aria-label\": \"Next Page\",\n            }}\n            onPageChange={handleChangePage}\n            classes={{\n              select: classes.dNone,\n              selectIcon: classes.dNone,\n              actions: targets.length > 0 ? classes.dBlock : classes.dNone,\n              caption: targets.length > 0 ? classes.dBlock : classes.dNone,\n            }}\n            labelRowsPerPage=\"\"\n          />\n        </div>\n      </Box>\n    </Accordion>\n  );\n}\n\nCustomTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  targets: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setTargets: PropTypes.func.isRequired,\n  pushMessageToSnackbar: PropTypes.func,\n};\n\nexport default withStyles(styles, { withTheme: true })(CustomTable);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport {\n  Paper,\n  Toolbar,\n  ListItemText,\n  ListItemSecondaryAction,\n  ListItemIcon,\n  Switch,\n  Box,\n} from \"@mui/material\";\nimport withStyles from '@mui/styles/withStyles';\nimport LoopIcon from \"@mui/icons-material/Loop\";\n\nconst styles = theme => ({\n  paper: {\r\n    borderRadius: theme.shape.borderRadius,\r\n    boxShadow: theme.shadows[3],\r\n  },\n  toolbar: { justifyContent: \"space-between\" },\n  scaleMinus: {\n    transform: \"scaleX(-1)\"\n  },\n  \"@keyframes spin\": {\n    from: { transform: \"rotate(359deg)\" },\n    to: { transform: \"rotate(0deg)\" }\n  },\n  spin: { animation: \"$spin 2s infinite linear\" },\n  listItemSecondaryAction: { paddingRight: theme.spacing(1) }\n});\n\nfunction AccountInformationArea(props) {\n  const { classes, toggleAccountActivation, isAccountActivated } = props;\n  return (\n    <Paper className={classes.paper}>\n      <Toolbar className={classes.toolbar}>\n        <Box display=\"flex\" alignItems=\"center\">\n          <Box mr={2}>\n            <ListItemText\n              primary=\"Status\"\n              secondary={isAccountActivated ? \"Activated\" : \"Not activated\"}\n              className=\"mr-2\"\n            />\n          </Box>\n          <ListItemIcon>\n            <LoopIcon\n              className={classNames(\n                isAccountActivated ? classes.spin : null,\n                classes.scaleMinus\n              )}\n            />\n          </ListItemIcon>\n        </Box>\n        <ListItemSecondaryAction className={classes.listItemSecondaryAction}>\n          <Switch\n            color=\"secondary\"\n            checked={isAccountActivated}\n            onClick={toggleAccountActivation}\n            inputProps={{\n              \"aria-label\": isAccountActivated\n                ? \"Deactivate Account\"\n                : \"Activate Account\"\n            }}\n          />\n        </ListItemSecondaryAction>\n      </Toolbar>\n    </Paper>\n  );\n}\n\nAccountInformationArea.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  toggleAccountActivation: PropTypes.func.isRequired,\n  isAccountActivated: PropTypes.bool.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(AccountInformationArea);\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid } from \"@mui/material\";\r\n\r\nimport withTheme from '@mui/styles/withTheme';\r\n\r\nfunction StatisticsArea(props) {\r\n  const { theme, CardChart, data } = props;\r\n  return (\r\n    CardChart &&\r\n    data.profit.length >= 2 &&\r\n    data.views.length >= 2 && (\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <CardChart\r\n            data={data.profit}\r\n            color={theme.palette.secondary.light}\r\n            height=\"70px\"\r\n            title=\"Profit\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <CardChart\r\n            data={data.views}\r\n            color={theme.palette.primary.light}\r\n            height=\"70px\"\r\n            title=\"Views\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  );\r\n}\r\n\r\nStatisticsArea.propTypes = {\r\n  theme: PropTypes.object.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n  CardChart: PropTypes.elementType\r\n};\r\n\r\nexport default withTheme(StatisticsArea);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Typography, Box } from \"@mui/material\";\r\nimport SettingsArea from \"./SettingsArea\";\r\nimport UserDataArea from \"./UserDataArea\";\r\nimport AccountInformationArea from \"./AccountInformationArea\";\r\nimport StatisticsArea from \"./StatisticsArea\";\r\n\r\nfunction Dashboard(props) {\r\n  const {\r\n    selectDashboard,\r\n    CardChart,\r\n    statistics,\r\n    toggleAccountActivation,\r\n    pushMessageToSnackbar,\r\n    targets,\r\n    setTargets,\r\n    isAccountActivated,\r\n  } = props;\r\n\r\n  useEffect(selectDashboard, [selectDashboard]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <StatisticsArea CardChart={CardChart} data={statistics} />\r\n      <Box mt={4}>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Your Account\r\n        </Typography>\r\n      </Box>\r\n      <AccountInformationArea\r\n        isAccountActivated={isAccountActivated}\r\n        toggleAccountActivation={toggleAccountActivation}\r\n      />\r\n      <Box mt={4}>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Settings\r\n        </Typography>\r\n      </Box>\r\n      <SettingsArea pushMessageToSnackbar={pushMessageToSnackbar} />\r\n      <UserDataArea\r\n        pushMessageToSnackbar={pushMessageToSnackbar}\r\n        targets={targets}\r\n        setTargets={setTargets}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nDashboard.propTypes = {\r\n  CardChart: PropTypes.elementType,\r\n  statistics: PropTypes.object.isRequired,\r\n  toggleAccountActivation: PropTypes.func,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n  targets: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setTargets: PropTypes.func.isRequired,\r\n  isAccountActivated: PropTypes.bool.isRequired,\r\n  selectDashboard: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { Fragment, useState, useCallback, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Popover, IconButton, MenuList, ListItemText, ListItemIcon, MenuItem } from \"@mui/material\";\r\nimport withStyles from '@mui/styles/withStyles';\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\n\r\nconst styles = {\r\n  listItemtext: {\r\n    paddingLeft: \"0 !important\",\r\n  },\r\n};\r\n\r\nfunction VertOptions(props) {\r\n  const { items, classes, color } = props;\r\n  const anchorEl = useRef();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setIsOpen(false);\r\n  }, [setIsOpen]);\r\n\r\n  const handleOpen = useCallback(() => {\r\n    setIsOpen(true);\r\n  }, [setIsOpen]);\r\n\r\n  const id = isOpen ? \"scroll-playground\" : null;\r\n  return (\r\n    <Fragment>\r\n      <IconButton\r\n        onClick={handleOpen}\r\n        buttonRef={anchorEl}\r\n        style={{ color: color ? color : null }}\r\n        aria-describedby={id}\r\n        aria-label=\"More Options\"\r\n        size=\"large\">\r\n        <MoreVertIcon style={{ color: color ? color : null }} />\r\n      </IconButton>\r\n      <Popover\r\n        id={id}\r\n        open={isOpen}\r\n        anchorEl={anchorEl.current}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n        onClose={handleClose}\r\n        disableScrollLock\r\n      >\r\n        <MenuList dense>\r\n          {items.map((item) => (\r\n            <MenuItem\r\n              key={item.name}\r\n              onClick={() => {\r\n                handleClose();\r\n                item.onClick();\r\n              }}\r\n            >\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText className={classes.listItemtext}>\r\n                {item.name}\r\n              </ListItemText>\r\n            </MenuItem>\r\n          ))}\r\n        </MenuList>\r\n      </Popover>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nVertOptions.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  color: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(VertOptions);\r\n","import React, { useState, useRef, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport format from \"date-fns/format\";\r\nimport { ImageListItemBar } from \"@mui/material\";\r\nimport withStyles from '@mui/styles/withStyles';\r\nimport VertOptions from \"./VertOptions\";\r\n\r\nconst styles = {\r\n  imageContainer: {\r\n    width: \"100%\",\r\n    paddingTop: \"100%\",\r\n    overflow: \"hidden\",\r\n    position: \"relative\",\r\n  },\r\n  image: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"auto\",\r\n  },\r\n};\r\n\r\nfunction SelfAligningImage(props) {\r\n  const {\r\n    classes,\r\n    src,\r\n    title,\r\n    timeStamp,\r\n    options,\r\n    roundedBorder,\r\n    theme,\r\n  } = props;\r\n  const img = useRef();\r\n  const [hasMoreWidthThanHeight, setHasMoreWidthThanHeight] = useState(null);\r\n  const [hasLoaded, setHasLoaded] = useState(false);\r\n\r\n  const onLoad = useCallback(() => {\r\n    if (img.current.naturalHeight < img.current.naturalWidth) {\r\n      setHasMoreWidthThanHeight(true);\r\n    } else {\r\n      setHasMoreWidthThanHeight(false);\r\n    }\r\n    setHasLoaded(true);\r\n  }, [img, setHasLoaded, setHasMoreWidthThanHeight]);\r\n\r\n  return (\r\n    <div className={classes.imageContainer}>\r\n      <img\r\n        style={{\r\n          height: hasMoreWidthThanHeight ? \"100%\" : \"auto\",\r\n          width: hasMoreWidthThanHeight ? \"auto\" : \"100%\",\r\n          display: hasLoaded ? \"block\" : \"none\",\r\n          borderRadius: roundedBorder ? theme.shape.borderRadius : 0,\r\n        }}\r\n        ref={img}\r\n        className={classes.image}\r\n        onLoad={onLoad}\r\n        src={src}\r\n        alt=\"\"\r\n      />\r\n      {title && (\r\n        <ImageListItemBar\r\n          title={title}\r\n          subtitle={format(new Date(timeStamp * 1000), \"PP - k:mm\", {\r\n            awareOfUnicodeTokens: true,\r\n          })}\r\n          actionIcon={\r\n            options.length > 0 && (\r\n              <VertOptions color={theme.palette.common.white} items={options} />\r\n            )\r\n          }\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nSelfAligningImage.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  src: PropTypes.string.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  title: PropTypes.string,\r\n  timeStamp: PropTypes.number,\r\n  roundedBorder: PropTypes.bool,\r\n  options: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(SelfAligningImage);\r\n","import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid, TablePagination, Divider, Toolbar, Typography, Button, Paper, Box } from \"@mui/material\";\nimport withStyles from '@mui/styles/withStyles';\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport SelfAligningImage from \"../../../shared/components/SelfAligningImage\";\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\nimport ConfirmationDialog from \"../../../shared/components/ConfirmationDialog\";\n\nconst styles = {\n  dBlock: { display: \"block\" },\n  dNone: { display: \"none\" },\n  toolbar: {\n    justifyContent: \"space-between\",\n  },\n};\n\nconst rowsPerPage = 25;\n\nfunction PostContent(props) {\n  const {\n    pushMessageToSnackbar,\n    setPosts,\n    posts,\n    openAddPostModal,\n    classes,\n    theme,\n  } = props;\n  const [page, setPage] = useState(0);\n  const [isDeletePostDialogOpen, setIsDeletePostDialogOpen] = useState(false);\n  const [isDeletePostDialogLoading, setIsDeletePostDialogLoading] = useState(\n    false\n  );\n\n  const closeDeletePostDialog = useCallback(() => {\n    setIsDeletePostDialogOpen(false);\n    setIsDeletePostDialogLoading(false);\n  }, [setIsDeletePostDialogOpen, setIsDeletePostDialogLoading]);\n\n  const deletePost = useCallback(() => {\n    setIsDeletePostDialogLoading(true);\n    setTimeout(() => {\n      const _posts = [...posts];\n      const index = _posts.find((element) => element.id === deletePost.id);\n      _posts.splice(index, 1);\n      setPosts(_posts);\n      pushMessageToSnackbar({\n        text: \"Your post has been deleted\",\n      });\n      closeDeletePostDialog();\n    }, 1500);\n  }, [\n    posts,\n    setPosts,\n    setIsDeletePostDialogLoading,\n    pushMessageToSnackbar,\n    closeDeletePostDialog,\n  ]);\n\n  const onDelete = useCallback(() => {\n    setIsDeletePostDialogOpen(true);\n  }, [setIsDeletePostDialogOpen]);\n\n  const handleChangePage = useCallback(\n    (__, page) => {\n      setPage(page);\n    },\n    [setPage]\n  );\n\n  const printImageGrid = useCallback(() => {\n    if (posts.length > 0) {\n      return (\n        <Box p={1}>\n          <Grid container spacing={1}>\n            {posts\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((post) => (\n                <Grid item xs={6} sm={4} md={3} key={post.id}>\n                  <SelfAligningImage\n                    src={post.src}\n                    title={post.name}\n                    timeStamp={post.timestamp}\n                    options={[\n                      {\n                        name: \"Delete\",\n                        onClick: () => {\n                          onDelete(post);\n                        },\n                        icon: <DeleteIcon />,\n                      },\n                    ]}\n                  />\n                </Grid>\n              ))}\n          </Grid>\n        </Box>\n      );\n    }\n    return (\n      <Box m={2}>\n        <HighlightedInformation>\n          No posts added yet. Click on &quot;NEW&quot; to create your first one.\n        </HighlightedInformation>\n      </Box>\n    );\n  }, [posts, onDelete, page]);\n\n  return (\n    <Paper sx={{ borderRadius: theme.shape.borderRadius, boxShadow: theme.shadows[3] }}>\n      <Toolbar className={classes.toolbar}>\n        <Typography variant=\"h6\">Your Posts</Typography>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={openAddPostModal}\n          disableElevation\n        >\n          Add Post\n        </Button>\n      </Toolbar>\n      <Divider />\n      {printImageGrid()}\n      <TablePagination\n        component=\"div\"\n        count={posts.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        backIconButtonProps={{\n          \"aria-label\": \"Previous Page\",\n        }}\n        nextIconButtonProps={{\n          \"aria-label\": \"Next Page\",\n        }}\n        onPageChange={handleChangePage}\n        classes={{\n          select: classes.dNone,\n          selectIcon: classes.dNone,\n          actions: posts.length > 0 ? classes.dBlock : classes.dNone,\n          caption: posts.length > 0 ? classes.dBlock : classes.dNone,\n        }}\n        labelRowsPerPage=\"\"\n      />\n      <ConfirmationDialog\n        open={isDeletePostDialogOpen}\n        title=\"Confirmation\"\n        content=\"Do you really want to delete the post?\"\n        onClose={closeDeletePostDialog}\n        loading={isDeletePostDialogLoading}\n        onConfirm={deletePost}\n      />\n    </Paper>\n  );\n}\n\nPostContent.propTypes = {\n  openAddPostModal: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setPosts: PropTypes.func.isRequired,\n  pushMessageToSnackbar: PropTypes.func,\n};\n\nexport default withStyles(styles)(PostContent);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Paper, DialogTitle, DialogContent, DialogActions, Box } from \"@mui/material\";\n\nimport withStyles from '@mui/styles/withStyles';\n\nconst styles = theme => ({\n  helpPadding: {\n    \"@media (max-width:  400px)\": {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1)\n    }\n  },\n  fullWidth: {\n    width: \"100%\"\n  }\n});\n\nfunction ActionPaper(props) {\n  const {\n    theme,\n    classes,\n    title,\n    content,\n    maxWidth,\n    actions,\n    helpPadding,\n    fullWidthActions\n  } = props;\n  return (\n    <Box pt={1}>\n      <Paper style={{ maxWidth: theme.breakpoints.values[maxWidth], borderRadius: theme.shape.borderRadius, boxShadow: theme.shadows[3] }}>\n        {title && <DialogTitle>{title}</DialogTitle>}\n        {content && (\n          <DialogContent\n            classes={helpPadding ? { root: classes.helpPadding } : null}\n          >\n            {content}\n          </DialogContent>\n        )}\n        {actions && (\n          <Box pb={2} pr={2}>\n            <DialogActions\n              classes={{ action: fullWidthActions ? classes.fullWidth : null }}\n            >\n              {actions}\n            </DialogActions>\n          </Box>\n        )}\n      </Paper>\n    </Box>\n  );\n}\n\nActionPaper.propTypes = {\n  theme: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n    PropTypes.string\n  ]),\n  content: PropTypes.element,\n  maxWidth: PropTypes.string,\n  actions: PropTypes.element,\n  helpPadding: PropTypes.bool,\n  fullWidthActions: PropTypes.bool\n};\n\nexport default withStyles(styles, { withTheme: true })(ActionPaper);\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Dialog, DialogContent, DialogActions, Button, Box } from \"@mui/material\";\r\n\r\nimport withStyles from '@mui/styles/withStyles';\r\n\r\nconst styles = (theme) => ({\r\n  dialogPaper: { maxWidth: `${theme.breakpoints.values.md}px !important` },\r\n  dialogContent: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n  },\r\n});\r\n\r\nfunction ImageCropperDialog(props) {\r\n  const {\r\n    ImageCropper,\r\n    classes,\r\n    onClose,\r\n    open,\r\n    src,\r\n    onCrop,\r\n    aspectRatio,\r\n    theme,\r\n  } = props;\r\n  const [crop, setCrop] = useState(null);\r\n\r\n  const getCropFunctionFromChild = useCallback(\r\n    (cropFunction) => {\r\n      setCrop(() => cropFunction);\r\n    },\r\n    [setCrop]\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onEscapeKeyDown={onClose}\r\n      classes={{ paper: classes.dialogPaper }}\r\n      style={{ overflowX: \"visible\" }}\r\n    >\r\n      <DialogContent className={classes.dialogContent}>\r\n        <ImageCropper\r\n          src={src}\r\n          setCropFunction={getCropFunctionFromChild}\r\n          onCrop={onCrop}\r\n          aspectRatio={aspectRatio}\r\n          color={theme.palette.primary.main}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Box mr={1}>\r\n          <Button onClick={onClose}>Close</Button>\r\n        </Box>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={crop}>\r\n          Crop\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nImageCropperDialog.propTypes = {\r\n  ImageCropper: PropTypes.elementType,\r\n  classes: PropTypes.object.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  onCrop: PropTypes.func.isRequired,\r\n  src: PropTypes.string,\r\n  aspectRatio: PropTypes.number,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ImageCropperDialog);\r\n","import React, { Fragment, useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Typography,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  FormControl,\n  Select,\n  OutlinedInput,\n  MenuItem,\n  Box,\n} from \"@mui/material\";\nimport withStyles from '@mui/styles/withStyles';\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Bordered from \"../../../shared/components/Bordered\";\nimport ImageCropperDialog from \"../../../shared/components/ImageCropperDialog\";\n\nconst styles = (theme) => ({\n  floatButtonWrapper: {\n    position: \"absolute\",\n    top: theme.spacing(1),\n    right: theme.spacing(1),\n    zIndex: 1000,\n  },\n  inputRoot: {\n    width: 190,\n    \"@media (max-width:  400px)\": {\n      width: 160,\n    },\n    \"@media (max-width:  360px)\": {\n      width: 140,\n    },\n    \"@media (max-width:  340px)\": {\n      width: 120,\n    },\n  },\n  uploadIcon: {\n    fontSize: 48,\n    transition: theme.transitions.create([\"color\", \"box-shadow\", \"border\"], {\n      duration: theme.transitions.duration.short,\n      easing: theme.transitions.easing.easeInOut,\n    }),\n  },\n  imgWrapper: { position: \"relative\" },\n  img: {\n    width: \"100%\",\n    border: \"1px solid rgba(0, 0, 0, 0.23)\",\r\n    borderRadius: theme.shape.borderRadius,\n  },\n  uploadText: {\n    transition: theme.transitions.create([\"color\", \"box-shadow\", \"border\"], {\n      duration: theme.transitions.duration.short,\n      easing: theme.transitions.easing.easeInOut,\n    }),\n  },\n  numberInput: {\n    width: 110,\n  },\n  numberInputInput: {\n    padding: \"9px 34px 9px 14.5px\",\n  },\n  emojiTextArea: {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    marginRight: -1,\n  },\n  dNone: {\n    display: \"none\",\n  },\n});\n\nconst inputOptions = [\"None\", \"Slow\", \"Normal\", \"Fast\"];\n\nfunction AddPostOptions(props) {\n  const {\n    Dropzone,\n    classes,\n    files,\n    deleteItem,\n    onDrop,\n    EmojiTextArea,\n    ImageCropper,\n    DateTimePicker,\n    cropperFile,\n    onCrop,\n    onCropperClose,\n    uploadAt,\n    onChangeUploadAt,\n  } = props;\n  const [option1, setOption1] = useState(\"None\");\n  const [option2, setOption2] = useState(\"None\");\n  const [option3, setOption3] = useState(\"None\");\n  const [option4, setOption4] = useState(\"None\");\n\n  const handleChange = useCallback(\n    (event) => {\n      const { name, value } = event.target;\n      switch (name) {\n        case \"option1\":\n          setOption1(value);\n          break;\n        case \"option2\":\n          setOption2(value);\n          break;\n        case \"option3\":\n          setOption3(value);\n          break;\n        case \"option4\":\n          setOption4(value);\n          break;\n        default:\n          throw new Error(\"No branch selected in switch-statement.\");\n      }\n    },\n    [setOption1, setOption2, setOption3, setOption4]\n  );\n\n  const printFile = useCallback(() => {\n    if (files[0]) {\n      return (\n        <div className={classes.imgWrapper}>\n          <img\n            alt=\"uploaded item\"\n            src={files[0].preview}\n            className={classes.img}\n            style={{ height: 148 }}\n          />\n          <div className={classes.floatButtonWrapper}>\n            <IconButton onClick={deleteItem} size=\"large\">\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <Dropzone accept=\"image/png, image/jpeg\" onDrop={onDrop} fullHeight>\n        <span className={classes.uploadText}>\n          Click / Drop file <br /> here\n        </span>\n      </Dropzone>\n    );\n  }, [onDrop, files, classes, deleteItem]);\n\n  const inputs = \n    [\n      {\n        state: option1,\n        label: \"Option 1\",\n        stateName: \"option1\",\n      },\n      {\n        state: option2,\n        label: \"Option 2\",\n        stateName: \"option2\",\n      },\n      {\n        state: option3,\n        label: \"Option 3\",\n        stateName: \"option3\",\n      },\n      {\n        state: option4,\n        label: \"Option 4\",\n        stateName: \"option4\",\n      },\n    ];\n\n  return (\n    <Fragment>\n      {ImageCropper && (\n        <ImageCropperDialog\n          open={cropperFile ? true : false}\n          ImageCropper={ImageCropper}\n          src={cropperFile ? cropperFile.preview : \"\"}\n          onCrop={onCrop}\n          onClose={onCropperClose}\n          aspectRatio={4 / 3}\n        />\n      )}\n      <Typography paragraph variant=\"h6\">\n        Upload Image\n      </Typography>\n      <Box mb={2}>\n        {EmojiTextArea && (\n          <EmojiTextArea\n            inputClassName={classes.emojiTextArea}\n            maxCharacters={2200}\n            rightContent={printFile()}\n            emojiSet=\"google\"\n          />\n        )}\n      </Box>\n      <Typography paragraph variant=\"h6\">\n        Options\n      </Typography>\n      <List disablePadding>\n        <Bordered disableVerticalPadding disableBorderRadius>\n          <ListItem divider disableGutters className=\"listItemLeftPadding\">\n            <ListItemText>\n              <Typography variant=\"body2\">Upload at</Typography>\n            </ListItemText>\n            <ListItemSecondaryAction>\n              {DateTimePicker && (\n                <DateTimePicker\n                  value={uploadAt}\n                  format=\"yyyy/MM/dd hh:mm a\"\n                  onChange={onChangeUploadAt}\n                  disablePast\n                />\n              )}\n            </ListItemSecondaryAction>\n          </ListItem>\n          {inputs.map((element, index) => (\n            <ListItem\n              className=\"listItemLeftPadding\"\n              disableGutters\n              divider={index !== inputs.length - 1}\n              key={index}\n            >\n              <ListItemText>\n                <Typography variant=\"body2\">{element.label}</Typography>\n              </ListItemText>\n              <FormControl variant=\"outlined\">\n                <ListItemSecondaryAction>\n                  <Select\n                    value={element.state}\n                    onChange={handleChange}\n                    input={\n                      <OutlinedInput\n                        name={element.stateName}\n                        labelWidth={0}\n                        className={classes.numberInput}\n                        classes={{ input: classes.numberInputInput }}\n                      />\n                    }\n                    MenuProps={{ disableScrollLock: true }}\n                  >\n                    {inputOptions.map((innerElement) => (\n                      <MenuItem value={innerElement} key={innerElement}>\n                        {innerElement}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </ListItemSecondaryAction>\n              </FormControl>\n            </ListItem>\n          ))}\n        </Bordered>\n      </List>\n    </Fragment>\n  );\n}\n\nAddPostOptions.propTypes = {\n  onEmojiTextareaChange: PropTypes.func,\n  DateTimePicker: PropTypes.elementType,\n  EmojiTextArea: PropTypes.elementType,\n  Dropzone: PropTypes.elementType,\n  ImageCropper: PropTypes.elementType,\n  classes: PropTypes.object,\n  cropperFile: PropTypes.object,\n  onCrop: PropTypes.func,\n  onCropperClose: PropTypes.func,\n  files: PropTypes.arrayOf(PropTypes.object).isRequired,\n  deleteItem: PropTypes.func,\n  onDrop: PropTypes.func,\n  value: PropTypes.string,\n  characters: PropTypes.number,\n  uploadAt: PropTypes.instanceOf(Date),\n  onChangeUploadAt: PropTypes.func,\n};\n\nexport default withStyles(styles, { withTheme: true })(AddPostOptions);\n","import React, { Fragment, useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Box } from \"@mui/material\";\r\nimport ActionPaper from \"../../../shared/components/ActionPaper\";\r\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\r\nimport AddPostOptions from \"./AddPostOptions\";\r\n\r\nfunction AddPost(props) {\r\n  const {\r\n    pushMessageToSnackbar,\r\n    Dropzone,\r\n    EmojiTextArea,\r\n    DateTimePicker,\r\n    ImageCropper,\r\n    onClose,\r\n  } = props;\r\n\r\n  const [files, setFiles] = useState([]);\r\n  const [uploadAt, setUploadAt] = useState(new Date());\r\n  const [loading, setLoading] = useState(false);\r\n  const [cropperFile, setCropperFile] = useState(null);\r\n\r\n  const acceptDrop = useCallback(\r\n    (file) => {\r\n      setFiles([file]);\r\n    },\r\n    [setFiles]\r\n  );\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles, rejectedFiles) => {\r\n      if (acceptedFiles.length + rejectedFiles.length > 1) {\r\n        pushMessageToSnackbar({\r\n          isErrorMessage: true,\r\n          text: \"You cannot upload more than one file at once\",\r\n        });\r\n      } else if (acceptedFiles.length === 0) {\r\n        pushMessageToSnackbar({\r\n          isErrorMessage: true,\r\n          text: \"The file you wanted to upload isn't an image\",\r\n        });\r\n      } else if (acceptedFiles.length === 1) {\r\n        const file = acceptedFiles[0];\r\n        file.preview = URL.createObjectURL(file);\r\n        file.key = new Date().getTime();\r\n        setCropperFile(file);\r\n      }\r\n    },\r\n    [pushMessageToSnackbar, setCropperFile]\r\n  );\r\n\r\n  const onCropperClose = useCallback(() => {\r\n    setCropperFile(null);\r\n  }, [setCropperFile]);\r\n\r\n  const deleteItem = useCallback(() => {\r\n    setCropperFile(null);\r\n    setFiles([]);\r\n  }, [setCropperFile, setFiles]);\r\n\r\n  const onCrop = useCallback(\r\n    (dataUrl) => {\r\n      const file = { ...cropperFile };\r\n      file.preview = dataUrl;\r\n      acceptDrop(file);\r\n      setCropperFile(null);\r\n    },\r\n    [acceptDrop, cropperFile, setCropperFile]\r\n  );\r\n\r\n  const handleUpload = useCallback(() => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      pushMessageToSnackbar({\r\n        text: \"Your post has been uploaded\",\r\n      });\r\n      onClose();\r\n    }, 1500);\r\n  }, [setLoading, onClose, pushMessageToSnackbar]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <ActionPaper\r\n        helpPadding\r\n        maxWidth=\"md\"\r\n        content={\r\n          <AddPostOptions\r\n            EmojiTextArea={EmojiTextArea}\r\n            Dropzone={Dropzone}\r\n            files={files}\r\n            onDrop={onDrop}\r\n            deleteItem={deleteItem}\r\n            DateTimePicker={DateTimePicker}\r\n            uploadAt={uploadAt}\r\n            onChangeUploadAt={setUploadAt}\r\n            onCrop={onCrop}\r\n            ImageCropper={ImageCropper}\r\n            cropperFile={cropperFile}\r\n            onCropperClose={onCropperClose}\r\n          />\r\n        }\r\n        actions={\r\n          <Fragment>\r\n            <Box mr={1}>\r\n              <Button onClick={onClose} disabled={loading}>\r\n                Back\r\n              </Button>\r\n            </Box>\r\n            <Button\r\n              onClick={handleUpload}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              disabled={files.length === 0 || loading}\r\n            >\r\n              Upload {loading && <ButtonCircularProgress />}\r\n            </Button>\r\n          </Fragment>\r\n        }\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nAddPost.propTypes = {\r\n  pushMessageToSnackbar: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  Dropzone: PropTypes.elementType,\r\n  EmojiTextArea: PropTypes.elementType,\r\n  DateTimePicker: PropTypes.elementType,\r\n  ImageCropper: PropTypes.elementType,\r\n};\r\n\r\nexport default AddPost;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport PostContent from \"./PostContent\";\r\nimport AddPost from \"./AddPost\";\r\n\r\nfunction Posts(props) {\r\n  const {\r\n    selectPosts,\r\n    EmojiTextArea,\r\n    ImageCropper,\r\n    Dropzone,\r\n    DateTimePicker,\r\n    pushMessageToSnackbar,\r\n    posts,\r\n    setPosts,\r\n  } = props;\r\n  const [isAddPostPaperOpen, setIsAddPostPaperOpen] = useState(false);\r\n\r\n  const openAddPostModal = useCallback(() => {\r\n    setIsAddPostPaperOpen(true);\r\n  }, [setIsAddPostPaperOpen]);\r\n\r\n  const closeAddPostModal = useCallback(() => {\r\n    setIsAddPostPaperOpen(false);\r\n  }, [setIsAddPostPaperOpen]);\r\n\r\n  useEffect(() => {\r\n    selectPosts();\r\n  }, [selectPosts]);\r\n\r\n  if (isAddPostPaperOpen) {\r\n    return <AddPost\r\n      onClose={closeAddPostModal}\r\n      EmojiTextArea={EmojiTextArea}\r\n      ImageCropper={ImageCropper}\r\n      Dropzone={Dropzone}\r\n      DateTimePicker={DateTimePicker}\r\n      pushMessageToSnackbar={pushMessageToSnackbar}\r\n    />\r\n  }\r\n  return <PostContent\r\n    openAddPostModal={openAddPostModal}\r\n    posts={posts}\r\n    setPosts={setPosts}\r\n    pushMessageToSnackbar={pushMessageToSnackbar}\r\n  />\r\n}\r\n\r\nPosts.propTypes = {\r\n  EmojiTextArea: PropTypes.elementType,\r\n  ImageCropper: PropTypes.elementType,\r\n  Dropzone: PropTypes.elementType,\r\n  DateTimePicker: PropTypes.elementType,\r\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setPosts: PropTypes.func.isRequired,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n  selectPosts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Posts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Chip } from \"@mui/material\";\r\nimport shadeColor from \"../functions/shadeColor\";\r\n\r\nfunction ColorfulChip(props) {\r\n  const { color, label, className } = props;\r\n  return (\r\n    <Chip\r\n      style={{\r\n        color: color,\r\n        backgroundColor: shadeColor(color, 0.7)\r\n      }}\r\n      label={label}\r\n      className={className ? className : null}\r\n    />\r\n  );\r\n}\r\n\r\nColorfulChip.propTypes = {\r\n  color: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  className: PropTypes.oneOfType([PropTypes.object, PropTypes.string])\r\n};\r\n\r\nexport default ColorfulChip;\r\n","function unixToDateString(unix) {\r\n  const date = new Date(unix * 1000);\r\n  return (\r\n    `${date.getDate()}.${date.getMonth() + 1}.${date.getFullYear()}`\r\n  );\r\n}\r\n\r\nexport default unixToDateString;\r\n","function currencyPrettyPrint(cents) {\r\n  const dollars = cents / 100;\r\n  return dollars.toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\"\r\n  });\r\n}\r\n\r\nexport default currencyPrettyPrint;\r\n","import React, { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Table, TableBody, TableCell, TablePagination, TableRow } from \"@mui/material\";\nimport withStyles from '@mui/styles/withStyles';\nimport EnhancedTableHead from \"../../../shared/components/EnhancedTableHead\";\nimport ColorfulChip from \"../../../shared/components/ColorfulChip\";\nimport unixToDateString from \"../../../shared/functions/unixToDateString\";\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\nimport currencyPrettyPrint from \"../../../shared/functions/currencyPrettyPrint\";\n\nconst styles = theme => ({\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n    width: \"100%\",\r\n    borderRadius: theme.shape.borderRadius, // Apply global border radius\r\n    boxShadow: theme.shadows[3], // Subtle shadow\r\n  },\r\n  contentWrapper: {\r\n    padding: theme.spacing(3),\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: theme.spacing(2)\r\n    },\r\n    width: \"100%\",\r\n    borderRadius: theme.shape.borderRadius, // Apply global border radius\r\n    boxShadow: theme.shadows[3], // Subtle shadow\r\n  },\r\n  dBlock: {\r\n    display: \"block !important\"\r\n  },\r\n  dNone: {\r\n    display: \"none !important\"\r\n  },\r\n  firstData: {\r\n    paddingLeft: theme.spacing(3)\r\n  }\r\n});\n\nconst rows = [\n  {\n    id: \"description\",\n    numeric: false,\n    label: \"Action\"\n  },\n  {\n    id: \"balanceChange\",\n    numeric: false,\n    label: \"Balance change\"\n  },\n  {\n    id: \"date\",\n    numeric: false,\n    label: \"Date\"\n  },\n  {\n    id: \"paidUntil\",\n    numeric: false,\n    label: \"Paid until\"\n  }\n];\n\nconst rowsPerPage = 25;\n\nfunction SubscriptionTable(props) {\n  const { transactions, theme, classes } = props;\n  const [page, setPage] = useState(0);\n\n  const handleChangePage = useCallback(\n    (_, page) => {\n      setPage(page);\n    },\n    [setPage]\n  );\n\n  if (transactions.length > 0) {\n    return (\n      <div className={classes.tableWrapper}>\n        <Table aria-labelledby=\"tableTitle\">\n          <EnhancedTableHead rowCount={transactions.length} rows={rows} />\n          <TableBody>\n            {transactions\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((transaction, index) => (\n                <TableRow hover tabIndex={-1} key={index}>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    className={classes.firstData}\n                  >\n                    {transaction.description}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {transaction.balanceChange > 0 ? (\n                      <ColorfulChip\n                        label={`+${currencyPrettyPrint(\n                          transaction.balanceChange\n                        )}`}\n                        color={theme.palette.secondary.main}\n                      />\n                    ) : (\n                      <ColorfulChip\n                        label={currencyPrettyPrint(transaction.balanceChange)}\n                        color={theme.palette.error.dark}\n                      />\n                    )}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {unixToDateString(transaction.timestamp)}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {transaction.paidUntil\n                      ? unixToDateString(transaction.paidUntil)\n                      : \"\"}\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n        <TablePagination\n          component=\"div\"\n          count={transactions.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            \"aria-label\": \"Previous Page\"\n          }}\n          nextIconButtonProps={{\n            \"aria-label\": \"Next Page\"\n          }}\n          onPageChange={handleChangePage}\n          classes={{\n            select: classes.dNone,\n            selectIcon: classes.dNone,\n            actions: transactions.length > 0 ? classes.dBlock : classes.dNone,\n            caption: transactions.length > 0 ? classes.dBlock : classes.dNone\n          }}\n          labelRowsPerPage=\"\"\n        />\n      </div>\n    );\n  }\n  return (\n    <div className={classes.contentWrapper}>\n      <HighlightedInformation>\n        No transactions received yet.\n      </HighlightedInformation>\n    </div>\n  );\n}\n\nSubscriptionTable.propTypes = {\n  theme: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(SubscriptionTable);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ListItemText, Button, Toolbar } from \"@mui/material\";\n\nimport withStyles from '@mui/styles/withStyles';\n\nconst styles = {\n  toolbar: {\n    justifyContent: \"space-between\"\n  }\n};\n\nfunction SubscriptionInfo(props) {\n  const { classes, openAddBalanceDialog } = props;\n  return (\n    <Toolbar className={classes.toolbar}>\n      <ListItemText primary=\"Status\" secondary=\"Premium Account\" />\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={openAddBalanceDialog}\r\n      >\n        Add Balance\n      </Button>\n    </Toolbar>\n  );\n}\n\nSubscriptionInfo.propTypes = {\n  classes: PropTypes.object.isRequired,\n  openAddBalanceDialog: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(SubscriptionInfo);\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List, Divider, Paper } from \"@mui/material\";\nimport withStyles from '@mui/styles/withStyles';\nimport SubscriptionTable from \"./SubscriptionTable\";\nimport SubscriptionInfo from \"./SubscriptionInfo\";\n\nconst styles = {\n  divider: {\n    backgroundColor: \"rgba(0, 0, 0, 0.26)\"\n  }\n};\n\nfunction Subscription(props) {\n  const {\n    transactions,\n    classes,\n    openAddBalanceDialog,\n    selectSubscription,\n    theme\n  } = props;\n\n  useEffect(selectSubscription, [selectSubscription]);\n\n  return (\n    <Paper sx={{ borderRadius: theme.shape.borderRadius, boxShadow: theme.shadows[3] }}>\r\n      <List disablePadding>\n        <SubscriptionInfo openAddBalanceDialog={openAddBalanceDialog} />\n        <Divider className={classes.divider} />\n        <SubscriptionTable transactions={transactions} />\n      </List>\n    </Paper>\n  );\n}\n\nSubscription.propTypes = {\n  classes: PropTypes.object.isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectSubscription: PropTypes.func.isRequired,\n  openAddBalanceDialog: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(Subscription);\n\n","import React, { memo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport withStyles from '@mui/styles/withStyles';\r\nimport Dashboard from \"./dashboard/Dashboard\";\r\nimport Posts from \"./posts/Posts\";\r\nimport Subscription from \"./subscription/Subscription\";\r\nimport PropsRoute from \"../../shared/components/PropsRoute\";\r\nimport useLocationBlocker from \"../../shared/functions/useLocationBlocker\";\r\n\r\nconst styles = (theme) => ({\r\n  wrapper: {\r\n    margin: theme.spacing(1),\r\n    width: \"auto\",\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      width: \"95%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n      marginTop: theme.spacing(4),\r\n      marginBottom: theme.spacing(4),\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      width: \"90%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      width: \"82.5%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      width: \"70%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction Routing(props) {\r\n  const {\r\n    classes,\r\n    EmojiTextArea,\r\n    ImageCropper,\r\n    Dropzone,\r\n    DateTimePicker,\r\n    pushMessageToSnackbar,\r\n    posts,\r\n    transactions,\r\n    toggleAccountActivation,\r\n    CardChart,\r\n    statistics,\r\n    targets,\r\n    setTargets,\r\n    setPosts,\r\n    isAccountActivated,\r\n    selectDashboard,\r\n    selectPosts,\r\n    selectSubscription,\r\n    openAddBalanceDialog,\r\n  } = props;\r\n  useLocationBlocker();\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <Switch>\r\n        <PropsRoute\r\n          path=\"/c/posts\"\r\n          component={Posts}\r\n          EmojiTextArea={EmojiTextArea}\r\n          ImageCropper={ImageCropper}\r\n          Dropzone={Dropzone}\r\n          DateTimePicker={DateTimePicker}\r\n          pushMessageToSnackbar={pushMessageToSnackbar}\r\n          posts={posts}\r\n          setPosts={setPosts}\r\n          selectPosts={selectPosts}\r\n        />\r\n        <PropsRoute\r\n          path=\"/c/subscription\"\r\n          component={Subscription}\r\n          transactions={transactions}\r\n          pushMessageToSnackbar={pushMessageToSnackbar}\r\n          selectSubscription={selectSubscription}\r\n          openAddBalanceDialog={openAddBalanceDialog}\r\n        />\r\n        <PropsRoute\r\n          path=\"\"\r\n          component={Dashboard}\r\n          toggleAccountActivation={toggleAccountActivation}\r\n          pushMessageToSnackbar={pushMessageToSnackbar}\r\n          CardChart={CardChart}\r\n          statistics={statistics}\r\n          targets={targets}\r\n          setTargets={setTargets}\r\n          isAccountActivated={isAccountActivated}\r\n          selectDashboard={selectDashboard}\r\n        />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nRouting.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  EmojiTextArea: PropTypes.elementType,\r\n  ImageCropper: PropTypes.elementType,\r\n  Dropzone: PropTypes.elementType,\r\n  DateTimePicker: PropTypes.elementType,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n  setTargets: PropTypes.func.isRequired,\r\n  setPosts: PropTypes.func.isRequired,\r\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  toggleAccountActivation: PropTypes.func,\r\n  CardChart: PropTypes.elementType,\r\n  statistics: PropTypes.object.isRequired,\r\n  targets: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  isAccountActivated: PropTypes.bool.isRequired,\r\n  selectDashboard: PropTypes.func.isRequired,\r\n  selectPosts: PropTypes.func.isRequired,\r\n  selectSubscription: PropTypes.func.isRequired,\r\n  openAddBalanceDialog: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(memo(Routing));\r\n","import React, { useCallback, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n} from \"@mui/material\";\r\nimport ErrorIcon from \"@mui/icons-material/Error\";\r\nimport formatDistance from \"date-fns/formatDistance\";\r\n\r\nfunction MessageListItem(props) {\r\n  const { message, divider } = props;\r\n  const [hasErrorOccurred, setHasErrorOccurred] = useState(false);\r\n\r\n  const handleError = useCallback(() => {\r\n    setHasErrorOccurred(true);\r\n  }, [setHasErrorOccurred]);\r\n\r\n  return (\r\n    <ListItem divider={divider}>\r\n      <ListItemAvatar>\r\n        {hasErrorOccurred ? (\r\n          <ErrorIcon color=\"secondary\" />\r\n        ) : (\r\n          <Avatar\r\n            src={hasErrorOccurred ? null : message.src}\r\n            onError={handleError}\r\n          />\r\n        )}\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={message.text}\r\n        secondary={`${formatDistance(message.date * 1000, new Date())} ago`}\r\n      />\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nMessageListItem.propTypes = {\r\n  message: PropTypes.object.isRequired,\r\n  divider: PropTypes.bool,\r\n};\r\n\r\nexport default MessageListItem;\r\n","import React, { Fragment, useState, useRef, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Popover,\r\n  IconButton,\r\n  AppBar,\r\n  List,\r\n  Divider,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport withStyles from '@mui/styles/withStyles';\r\nimport MessageIcon from \"@mui/icons-material/Message\";\r\nimport MessageListItem from \"./MessageListItem\";\r\n\r\nconst styles = (theme) => ({\r\n  tabContainer: {\r\n    overflowY: \"auto\",\r\n    maxHeight: 350,\r\n  },\r\n  popoverPaper: {\r\n    width: \"100%\",\r\n    maxWidth: 350,\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(1),\r\n    [theme.breakpoints.down('md')]: {\r\n      maxWidth: 270,\r\n    },\r\n  },\r\n  divider: {\r\n    marginTop: -2,\r\n  },\r\n  noShadow: {\r\n    boxShadow: \"none !important\",\r\n  },\r\n});\r\n\r\nfunction MessagePopperButton(props) {\r\n  const { classes, messages } = props;\r\n  const anchorEl = useRef();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleClick = useCallback(() => {\r\n    setIsOpen(!isOpen);\r\n  }, [isOpen, setIsOpen]);\r\n\r\n  const handleClickAway = useCallback(() => {\r\n    setIsOpen(false);\r\n  }, [setIsOpen]);\r\n\r\n  const id = isOpen ? \"scroll-playground\" : null;\r\n  return (\r\n    <Fragment>\r\n      <IconButton\r\n        onClick={handleClick}\r\n        buttonRef={anchorEl}\r\n        aria-label=\"Open Messages\"\r\n        aria-describedby={id}\r\n        color=\"primary\"\r\n        size=\"large\">\r\n        <MessageIcon />\r\n      </IconButton>\r\n      <Popover\r\n        disableScrollLock\r\n        id={id}\r\n        open={isOpen}\r\n        anchorEl={anchorEl.current}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"right\",\r\n        }}\r\n        classes={{ paper: classes.popoverPaper }}\r\n        onClose={handleClickAway}\r\n      >\r\n        <AppBar position=\"static\" color=\"inherit\" className={classes.noShadow}>\r\n          <Box pt={1} pl={2} pb={1} pr={1}>\r\n            <Typography variant=\"subtitle1\">Messages</Typography>\r\n          </Box>\r\n          <Divider className={classes.divider} />\r\n        </AppBar>\r\n        <List dense className={classes.tabContainer}>\r\n          {messages.length === 0 ? (\r\n            <ListItem>\r\n              <ListItemText>\r\n                You haven&apos;t received any messages yet.\r\n              </ListItemText>\r\n            </ListItem>\r\n          ) : (\r\n            messages.map((element, index) => (\r\n              <MessageListItem\r\n                key={index}\r\n                message={element}\r\n                divider={index !== messages.length - 1}\r\n              />\r\n            ))\r\n          )}\r\n        </List>\r\n      </Popover>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nMessagePopperButton.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(MessagePopperButton);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Drawer, IconButton, Toolbar, Divider, Typography, Box } from \"@mui/material\";\r\nimport withStyles from '@mui/styles/withStyles';\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = {\r\n  toolbar: {\r\n    minWidth: drawerWidth\r\n  }\r\n};\r\n\r\nfunction SideDrawer(props) {\r\n  const { classes, onClose, open } = props;\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} variant=\"temporary\" onClose={onClose}>\r\n      <Toolbar disableGutters className={classes.toolbar}>\r\n        <Box\r\n          pl={3}\r\n          pr={3}\r\n          display=\"flex\"\r\n          justifyContent=\"space-between\"\r\n          width=\"100%\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Typography variant=\"h6\">A Sidedrawer</Typography>\r\n          <IconButton\r\n            onClick={onClose}\r\n            color=\"primary\"\r\n            aria-label=\"Close Sidedrawer\"\r\n            size=\"large\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </Toolbar>\r\n      <Divider />\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nSideDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SideDrawer);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { OutlinedInput } from \"@mui/material\";\r\nimport withStyles from '@mui/styles/withStyles';\r\nimport currencyPrettyPrint from \"../../../shared/functions/currencyPrettyPrint\";\r\n\r\nconst styles = {\r\n  input: { padding: \"0px 9px\", cursor: \"pointer\" },\r\n  outlinedInput: {\r\n    width: 90,\r\n    height: 40,\r\n    cursor: \"pointer\"\r\n  },\r\n  wrapper: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n};\r\n\r\nfunction Balance(props) {\r\n  const { balance, classes, openAddBalanceDialog } = props;\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <OutlinedInput\r\n        value={balance === null ? \"\" : currencyPrettyPrint(balance)}\r\n        className={classes.outlinedInput}\r\n        classes={{ input: classes.input }}\r\n        readOnly\r\n        labelWidth={0}\r\n        onClick={openAddBalanceDialog}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nBalance.propTypes = {\r\n  balance: PropTypes.number.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  openAddBalanceDialog: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Balance);\r\n","import React, { Fragment, useRef, useCallback, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Avatar,\n  Drawer,\n  List,\n  IconButton,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Hidden,\n  Tooltip,\n  Box,\n} from \"@mui/material\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport DashboardIcon from \"@mui/icons-material/Dashboard\";\nimport ImageIcon from \"@mui/icons-material/Image\";\nimport AccountBalanceIcon from \"@mui/icons-material/AccountBalance\";\nimport PowerSettingsNewIcon from \"@mui/icons-material/PowerSettingsNew\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport SupervisorAccountIcon from \"@mui/icons-material/SupervisorAccount\";\nimport MessagePopperButton from \"./MessagePopperButton\";\nimport SideDrawer from \"./SideDrawer\";\nimport Balance from \"./Balance\";\nimport NavigationDrawer from \"../../../shared/components/NavigationDrawer\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\n\nconst styles = (theme) => ({\n  appBar: {\n    boxShadow: theme.shadows[3], // More subtle shadow\n    backgroundColor: theme.palette.background.paper, // Use paper background\n    borderRadius: theme.shape.borderRadius, // Apply global border radius\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      marginLeft: 0,\n    },\n  },\n  appBarToolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      paddingLeft: theme.spacing(4),\n      paddingRight: theme.spacing(4),\n    },\n  },\n  accountAvatar: {\n    backgroundColor: theme.palette.secondary.main,\n    height: 24,\n    width: 24,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: theme.spacing(1.5),\n      marginRight: theme.spacing(1.5),\n    },\n  },\n  drawerPaper: {\n    height: \"100%vh\",\n    whiteSpace: \"nowrap\",\n    border: 0,\n    width: theme.spacing(7),\n    overflowX: \"hidden\",\n    marginTop: theme.spacing(8),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n    backgroundColor: theme.palette.background.paper,\n  },\n  smBordered: {\n    [theme.breakpoints.down(\"sm\")]: {\n      borderRadius: theme.shape.borderRadius,\n    },\n  },\n  menuLink: {\n    textDecoration: \"none\",\n    color: theme.palette.text.primary,\n  },\n  iconListItem: {\n    width: \"auto\",\n    borderRadius: theme.shape.borderRadius,\n    paddingTop: 11,\n    paddingBottom: 11,\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  textPrimary: {\n    color: theme.palette.primary.main,\n  },\n  mobileItemSelected: {\n    backgroundColor: `${theme.palette.primary.main} !important`,\n  },\n  brandText: {\n    fontFamily: \"'Baloo Bhaijaan', cursive\",\n    fontWeight: 400,\n  },\n  username: {\n    paddingLeft: 0,\n    paddingRight: theme.spacing(2),\n  },\n  justifyCenter: {\n    justifyContent: \"center\",\n  },\n  permanentDrawerListItem: {\n    justifyContent: \"center\",\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n});\n\nfunction NavBar(props) {\n  const { selectedTab, messages, classes, openAddBalanceDialog, theme } = props;\n  // Will be use to make website more accessible by screen readers\n  const links = useRef([]);\n  const [isMobileOpen, setIsMobileOpen] = useState(false);\n  const [isSideDrawerOpen, setIsSideDrawerOpen] = useState(false);\n  const isWidthUpSm = useMediaQuery(theme.breakpoints.up(\"sm\"));\n\n  const openMobileDrawer = useCallback(() => {\n    setIsMobileOpen(true);\n  }, [setIsMobileOpen]);\n\n  const closeMobileDrawer = useCallback(() => {\n    setIsMobileOpen(false);\n  }, [setIsMobileOpen]);\n\n  const openDrawer = useCallback(() => {\n    setIsSideDrawerOpen(true);\n  }, [setIsSideDrawerOpen]);\n\n  const closeDrawer = useCallback(() => {\n    setIsSideDrawerOpen(false);\n  }, [setIsSideDrawerOpen]);\n\n  const menuItems = [\n    {\n      link: \"/c/dashboard\",\n      name: \"Dashboard\",\n      onClick: closeMobileDrawer,\n      icon: {\n        desktop: (\n          <DashboardIcon\n            className={\n              selectedTab === \"Dashboard\" ? classes.textPrimary : \"text-white\"\n            }\n            fontSize=\"small\"\n          />\n        ),\n        mobile: <DashboardIcon className=\"text-white\" />,\n      },\n    },\n    {\n      link: \"/c/posts\",\n      name: \"Posts\",\n      onClick: closeMobileDrawer,\n      icon: {\n        desktop: (\n          <ImageIcon\n            className={\n              selectedTab === \"Posts\" ? classes.textPrimary : \"text-white\"\n            }\n            fontSize=\"small\"\n          />\n        ),\n        mobile: <ImageIcon className=\"text-white\" />,\n      },\n    },\n    {\n      link: \"/c/subscription\",\n      name: \"Subscription\",\n      onClick: closeMobileDrawer,\n      icon: {\n        desktop: (\n          <AccountBalanceIcon\n            className={\n              selectedTab === \"Subscription\"\n                ? classes.textPrimary\n                : \"text-white\"\n            }\n            fontSize=\"small\"\n          />\n        ),\n        mobile: <AccountBalanceIcon className=\"text-white\" />,\n      },\n    },\n    {\n      link: \"/\",\n      name: \"Logout\",\n      icon: {\n        desktop: (\n          <PowerSettingsNewIcon className=\"text-white\" fontSize=\"small\" />\n        ),\n        mobile: <PowerSettingsNewIcon className=\"text-white\" />,\n      },\n    },\n  ];\n  return (\n    <Fragment>\n      <AppBar position=\"sticky\" className={classes.appBar}>\n        <Toolbar className={classes.appBarToolbar}>\n          <Box display=\"flex\" alignItems=\"center\">\n            <Hidden smUp>\n              <Box mr={1}>\n                <IconButton\n                  aria-label=\"Open Navigation\"\n                  onClick={openMobileDrawer}\n                  color=\"primary\"\n                  size=\"large\"\n                >\n                  <MenuIcon />\n                </IconButton>\n              </Box>\n            </Hidden>\n            <Hidden smDown>\n              <Typography\n                variant=\"h4\"\n                className={classes.brandText}\n                display=\"inline\"\n                color=\"primary\"\n              >\n                Wa\n              </Typography>\n              <Typography\n                variant=\"h4\"\n                className={classes.brandText}\n                display=\"inline\"\n                color=\"secondary\"\n              >\n                Ver\n              </Typography>\n            </Hidden>\n          </Box>\n          <Box\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            alignItems=\"center\"\n            width=\"100%\"\n          >\n            {isWidthUpSm && (\n              <Box mr={3}>\n                <Balance\n                  balance={2573}\n                  openAddBalanceDialog={openAddBalanceDialog}\n                />\n              </Box>\n            )}\n            <MessagePopperButton messages={messages} />\n            <ListItem\n              disableGutters\n              className={classNames(classes.iconListItem, classes.smBordered)}\n            >\n              <Avatar\n                alt=\"profile picture\"\n                src={`${process.env.PUBLIC_URL}/images/logged_in/profilePicture.jpg`}\n                className={classNames(classes.accountAvatar)}\n              />\n              {isWidthUpSm && (\n                <ListItemText\n                  className={classes.username}\n                  primary={\n                    <Typography color=\"textPrimary\">Username</Typography>\n                  }\n                />\n              )}\n            </ListItem>\n          </Box>\n          <IconButton\n            onClick={openDrawer}\n            color=\"primary\"\n            aria-label=\"Open Sidedrawer\"\n            size=\"large\"\n          >\n            <SupervisorAccountIcon />\n          </IconButton>\n          <SideDrawer open={isSideDrawerOpen} onClose={closeDrawer} />\n        </Toolbar>\n      </AppBar>\n      <Hidden smDown>\n        <Drawer //  both drawers can be combined into one for performance\n          variant=\"permanent\"\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          open={false}\n        >\n          <List>\n            {menuItems.map((element, index) => (\n              <Link\n                to={element.link}\n                className={classes.menuLink}\n                onClick={element.onClick}\n                key={index}\n                ref={(node) => {\n                  links.current[index] = node;\n                }}\n              >\n                <Tooltip\n                  title={element.name}\n                  placement=\"right\"\n                  key={element.name}\n                >\n                  <ListItem\n                    selected={selectedTab === element.name}\n                    button\n                    divider={index !== menuItems.length - 1}\n                    className={classes.permanentDrawerListItem}\n                    onClick={() => {\n                      links.current[index].click();\n                    }}\n                    aria-label={\n                      element.name === \"Logout\"\n                        ? \"Logout\"\n                        : `Go to ${element.name}`\n                    }\n                  >\n                    <ListItemIcon className={classes.justifyCenter}>\n                      {element.icon.desktop}\n                    </ListItemIcon>\n                  </ListItem>\n                </Tooltip>\n              </Link>\n            ))}\n          </List>\n        </Drawer>\n      </Hidden>\n      <NavigationDrawer\n        menuItems={menuItems.map((element) => ({\n          link: element.link,\n          name: element.name,\n          icon: element.icon.mobile,\n          onClick: element.onClick,\n        }))}\n        anchor=\"left\"\n        open={isMobileOpen}\n        selectedItem={selectedTab}\n        onClose={closeMobileDrawer}\n      />\n    </Fragment>\n  );\n}\n\nNavBar.propTypes = {\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectedTab: PropTypes.string.isRequired,\n  classes: PropTypes.object.isRequired,\n  openAddBalanceDialog: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(NavBar);\n","import React, { useCallback, useState, useRef, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Snackbar } from \"@mui/material\";\r\n\r\nimport withStyles from '@mui/styles/withStyles';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n});\r\n\r\nfunction ConsecutiveSnackbars(props) {\r\n  const { classes, getPushMessageFromChild } = props;\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messageInfo, setMessageInfo] = useState({});\r\n  const queue = useRef([]);\r\n\r\n  const processQueue = useCallback(() => {\r\n    if (queue.current.length > 0) {\r\n      setMessageInfo(queue.current.shift());\r\n      setIsOpen(true);\r\n    }\r\n  }, [setMessageInfo, setIsOpen, queue]);\r\n\r\n  const handleClose = useCallback((_, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setIsOpen(false);\r\n  }, [setIsOpen]);\r\n\r\n  const pushMessage = useCallback(message => {\r\n    queue.current.push({\r\n      message,\r\n      key: new Date().getTime(),\r\n    });\r\n    if (isOpen) {\r\n      // immediately begin dismissing current message\r\n      // to start showing new one\r\n      setIsOpen(false);\r\n    } else {\r\n      processQueue();\r\n    }\r\n  }, [queue, isOpen, setIsOpen, processQueue]);\r\n\r\n  useEffect(() => {\r\n    getPushMessageFromChild(pushMessage);\r\n  }, [getPushMessageFromChild, pushMessage]);\r\n\r\n  return (\r\n    <Snackbar\r\n      disableWindowBlurListener\r\n      key={messageInfo.key}\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"left\",\r\n      }}\r\n      open={isOpen}\r\n      autoHideDuration={6000}\r\n      onClose={handleClose}\r\n      ContentProps={{\r\n        classes: {\r\n          root: classes.root,\r\n        },\r\n      }}\r\n      message={\r\n        <span>{messageInfo.message ? messageInfo.message.text : null}</span>\r\n      }\r\n      TransitionProps={{\r\n        onExited: processQueue\r\n      }} />\r\n  );\r\n\r\n}\r\n\r\nConsecutiveSnackbars.propTypes = {\r\n  getPushMessageFromChild: PropTypes.func.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ConsecutiveSnackbars);\r\n","const data = [\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image1.jpg`,\r\n    name: \"Markus\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image2.jpg`,\r\n    name: \"David\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image3.jpg`,\r\n    name: \"Arold\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image4.jpg`,\r\n    name: \"Joanic\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image5.jpg`,\r\n    name: \"Sophia\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image6.jpg`,\r\n    name: \"Aaron\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image7.jpg`,\r\n    name: \"Steven\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image8.jpg`,\r\n    name: \"Felix\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image9.jpg`,\r\n    name: \"Vivien\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image10.jpg`,\r\n    name: \"Leonie\",\r\n  },\r\n];\r\n\r\nexport default data;","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction LazyLoadAddBalanceDialog(props) {\r\n  const { open, onClose, onSuccess } = props;\r\n  const [AddBalanceDialog, setAddBalanceDialog] = useState(null);\r\n  const [hasFetchedAddBalanceDialog, setHasFetchedAddBlanceDialog] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (open && !hasFetchedAddBalanceDialog) {\r\n      setHasFetchedAddBlanceDialog(true);\r\n      import(\"./AddBalanceDialog\").then(Component => {\r\n        setAddBalanceDialog(() => Component.default);\r\n      });\r\n    }\r\n  }, [open, hasFetchedAddBalanceDialog, setHasFetchedAddBlanceDialog, setAddBalanceDialog]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {AddBalanceDialog && (\r\n        <AddBalanceDialog\r\n          open={open}\r\n          onClose={onClose}\r\n          onSuccess={onSuccess}\r\n        ></AddBalanceDialog>\r\n      )}\r\n    </Fragment>\r\n  );\r\n\r\n}\r\n\r\nLazyLoadAddBalanceDialog.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  onSuccess: PropTypes.func.isRequired\r\n};\r\n\r\nexport default LazyLoadAddBalanceDialog;\r\n","import React, { memo, useCallback, useState, useEffect, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport withStyles from '@mui/styles/withStyles';\r\nimport Routing from \"./Routing\";\r\nimport NavBar from \"./navigation/NavBar\";\r\nimport ConsecutiveSnackbarMessages from \"../../shared/components/ConsecutiveSnackbarMessages\";\r\nimport smoothScrollTop from \"../../shared/functions/smoothScrollTop\";\r\nimport persons from \"../dummy_data/persons\";\r\nimport LazyLoadAddBalanceDialog from \"./subscription/LazyLoadAddBalanceDialog\";\r\n\r\nconst styles = (theme) => ({\r\n  main: {\r\n    marginLeft: theme.spacing(9),\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n});\r\n\r\nfunction shuffle(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n}\r\n\r\nfunction Main(props) {\r\n  const { classes } = props;\r\n  const [selectedTab, setSelectedTab] = useState(null);\r\n  const [CardChart, setCardChart] = useState(null);\r\n  const [hasFetchedCardChart, setHasFetchedCardChart] = useState(false);\r\n  const [EmojiTextArea, setEmojiTextArea] = useState(null);\r\n  const [hasFetchedEmojiTextArea, setHasFetchedEmojiTextArea] = useState(false);\r\n  const [ImageCropper, setImageCropper] = useState(null);\r\n  const [hasFetchedImageCropper, setHasFetchedImageCropper] = useState(false);\r\n  const [Dropzone, setDropzone] = useState(null);\r\n  const [hasFetchedDropzone, setHasFetchedDropzone] = useState(false);\r\n  const [DateTimePicker, setDateTimePicker] = useState(null);\r\n  const [hasFetchedDateTimePicker, setHasFetchedDateTimePicker] = useState(\r\n    false\r\n  );\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [statistics, setStatistics] = useState({ views: [], profit: [] });\r\n  const [posts, setPosts] = useState([]);\r\n  const [targets, setTargets] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n  const [isAccountActivated, setIsAccountActivated] = useState(false);\r\n  const [isAddBalanceDialogOpen, setIsAddBalanceDialogOpen] = useState(false);\r\n  const [pushMessageToSnackbar, setPushMessageToSnackbar] = useState(null);\r\n\r\n  const fetchRandomTargets = useCallback(() => {\r\n    const targets = [];\r\n    for (let i = 0; i < 35; i += 1) {\r\n      const randomPerson = persons[Math.floor(Math.random() * persons.length)];\r\n      const target = {\r\n        id: i,\r\n        number1: Math.floor(Math.random() * 251),\r\n        number2: Math.floor(Math.random() * 251),\r\n        number3: Math.floor(Math.random() * 251),\r\n        number4: Math.floor(Math.random() * 251),\r\n        name: randomPerson.name,\r\n        profilePicUrl: randomPerson.src,\r\n        isActivated: Math.round(Math.random()) ? true : false,\r\n      };\r\n      targets.push(target);\r\n    }\r\n    setTargets(targets);\r\n  }, [setTargets]);\r\n\r\n  const openAddBalanceDialog = useCallback(() => {\r\n    setIsAddBalanceDialogOpen(true);\r\n  }, [setIsAddBalanceDialogOpen]);\r\n\r\n  const closeAddBalanceDialog = useCallback(() => {\r\n    setIsAddBalanceDialogOpen(false);\r\n  }, [setIsAddBalanceDialogOpen]);\r\n\r\n  const onPaymentSuccess = useCallback(() => {\r\n    pushMessageToSnackbar({\r\n      text: \"Your balance has been updated.\",\r\n    });\r\n    setIsAddBalanceDialogOpen(false);\r\n  }, [pushMessageToSnackbar, setIsAddBalanceDialogOpen]);\r\n\r\n  const fetchRandomStatistics = useCallback(() => {\r\n    const statistics = { profit: [], views: [] };\r\n    const iterations = 300;\r\n    const oneYearSeconds = 60 * 60 * 24 * 365;\r\n    let curProfit = Math.round(3000 + Math.random() * 1000);\r\n    let curViews = Math.round(3000 + Math.random() * 1000);\r\n    let curUnix = Math.round(new Date().getTime() / 1000) - oneYearSeconds;\r\n    for (let i = 0; i < iterations; i += 1) {\r\n      curUnix += Math.round(oneYearSeconds / iterations);\r\n      curProfit += Math.round((Math.random() * 2 - 1) * 10);\r\n      curViews += Math.round((Math.random() * 2 - 1) * 10);\r\n      statistics.profit.push({\r\n        value: curProfit,\r\n        timestamp: curUnix,\r\n      });\r\n      statistics.views.push({\r\n        value: curViews,\r\n        timestamp: curUnix,\r\n      });\r\n    }\r\n    setStatistics(statistics);\r\n  }, [setStatistics]);\r\n\r\n  const fetchRandomTransactions = useCallback(() => {\r\n    const transactions = [];\r\n    const iterations = 32;\r\n    const oneMonthSeconds = Math.round(60 * 60 * 24 * 30.5);\r\n    const transactionTemplates = [\r\n      {\r\n        description: \"Starter subscription\",\r\n        isSubscription: true,\r\n        balanceChange: -1499,\r\n      },\r\n      {\r\n        description: \"Premium subscription\",\r\n        isSubscription: true,\r\n        balanceChange: -2999,\r\n      },\r\n      {\r\n        description: \"Business subscription\",\r\n        isSubscription: true,\r\n        balanceChange: -4999,\r\n      },\r\n      {\r\n        description: \"Tycoon subscription\",\r\n        isSubscription: true,\r\n        balanceChange: -9999,\r\n      },\r\n      {\r\n        description: \"Added funds\",\r\n        isSubscription: false,\r\n        balanceChange: 2000,\r\n      },\r\n      {\r\n        description: \"Added funds\",\r\n        isSubscription: false,\r\n        balanceChange: 5000,\r\n      },\r\n    ];\r\n    let curUnix = Math.round(\r\n      new Date().getTime() / 1000 - iterations * oneMonthSeconds\r\n    );\r\n    for (let i = 0; i < iterations; i += 1) {\r\n      const randomTransactionTemplate =\r\n        transactionTemplates[\r\n          Math.floor(Math.random() * transactionTemplates.length)\r\n        ];\r\n      const transaction = {\r\n        id: i,\r\n        description: randomTransactionTemplate.description,\r\n        balanceChange: randomTransactionTemplate.balanceChange,\r\n        paidUntil: curUnix + oneMonthSeconds,\r\n        timestamp: curUnix,\r\n      };\r\n      curUnix += oneMonthSeconds;\r\n      transactions.push(transaction);\r\n    }\r\n    transactions.reverse();\r\n    setTransactions(transactions);\r\n  }, [setTransactions]);\r\n\r\n  const fetchRandomMessages = useCallback(() => {\r\n    shuffle(persons);\r\n    const messages = [];\r\n    const iterations = persons.length;\r\n    const oneDaySeconds = 60 * 60 * 24;\r\n    let curUnix = Math.round(\r\n      new Date().getTime() / 1000 - iterations * oneDaySeconds\r\n    );\r\n    for (let i = 0; i < iterations; i += 1) {\r\n      const person = persons[i];\r\n      const message = {\r\n        id: i,\r\n        src: person.src,\r\n        date: curUnix,\r\n        text: \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr sed.\",\r\n      };\r\n      curUnix += oneDaySeconds;\r\n      messages.push(message);\r\n    }\r\n    messages.reverse();\r\n    setMessages(messages);\r\n  }, [setMessages]);\r\n\r\n  const fetchRandomPosts = useCallback(() => {\r\n    shuffle(persons);\r\n    const posts = [];\r\n    const iterations = persons.length;\r\n    const oneDaySeconds = 60 * 60 * 24;\r\n    let curUnix = Math.round(\r\n      new Date().getTime() / 1000 - iterations * oneDaySeconds\r\n    );\r\n    for (let i = 0; i < iterations; i += 1) {\r\n      const person = persons[i];\r\n      const post = {\r\n        id: i,\r\n        src: person.src,\r\n        timestamp: curUnix,\r\n        name: person.name,\r\n      };\r\n      curUnix += oneDaySeconds;\r\n      posts.push(post);\r\n    }\r\n    posts.reverse();\r\n    setPosts(posts);\r\n  }, [setPosts]);\r\n\r\n  const toggleAccountActivation = useCallback(() => {\r\n    if (pushMessageToSnackbar) {\r\n      if (isAccountActivated) {\r\n        pushMessageToSnackbar({\r\n          text: \"Your account is now deactivated.\",\r\n        });\r\n      } else {\r\n        pushMessageToSnackbar({\r\n          text: \"Your account is now activated.\",\r\n        });\r\n      }\r\n    }\r\n    setIsAccountActivated(!isAccountActivated);\r\n  }, [pushMessageToSnackbar, isAccountActivated, setIsAccountActivated]);\r\n\r\n  const selectDashboard = useCallback(() => {\r\n    smoothScrollTop();\r\n    document.title = \"WaVer - Dashboard\";\r\n    setSelectedTab(\"Dashboard\");\r\n    if (!hasFetchedCardChart) {\r\n      setHasFetchedCardChart(true);\r\n      import(\"../../shared/components/CardChart\").then((Component) => {\r\n        setCardChart(Component.default);\r\n      });\r\n    }\r\n  }, [\r\n    setSelectedTab,\r\n    setCardChart,\r\n    hasFetchedCardChart,\r\n    setHasFetchedCardChart,\r\n  ]);\r\n\r\n  const selectPosts = useCallback(() => {\r\n    smoothScrollTop();\r\n    document.title = \"WaVer - Posts\";\r\n    setSelectedTab(\"Posts\");\r\n    if (!hasFetchedEmojiTextArea) {\r\n      setHasFetchedEmojiTextArea(true);\r\n      import(\"../../shared/components/EmojiTextArea\").then((Component) => {\r\n        setEmojiTextArea(Component.default);\r\n      });\r\n    }\r\n    if (!hasFetchedImageCropper) {\r\n      setHasFetchedImageCropper(true);\r\n      import(\"../../shared/components/ImageCropper\").then((Component) => {\r\n        setImageCropper(Component.default);\r\n      });\r\n    }\r\n    if (!hasFetchedDropzone) {\r\n      setHasFetchedDropzone(true);\r\n      import(\"../../shared/components/Dropzone\").then((Component) => {\r\n        setDropzone(Component.default);\r\n      });\r\n    }\r\n    if (!hasFetchedDateTimePicker) {\r\n      setHasFetchedDateTimePicker(true);\r\n      import(\"../../shared/components/DateTimePicker\").then((Component) => {\r\n        setDateTimePicker(Component.default);\r\n      });\r\n    }\r\n  }, [\r\n    setSelectedTab,\r\n    setEmojiTextArea,\r\n    setImageCropper,\r\n    setDropzone,\r\n    setDateTimePicker,\r\n    hasFetchedEmojiTextArea,\r\n    setHasFetchedEmojiTextArea,\r\n    hasFetchedImageCropper,\r\n    setHasFetchedImageCropper,\r\n    hasFetchedDropzone,\r\n    setHasFetchedDropzone,\r\n    hasFetchedDateTimePicker,\r\n    setHasFetchedDateTimePicker,\r\n  ]);\r\n\r\n  const selectSubscription = useCallback(() => {\r\n    smoothScrollTop();\r\n    document.title = \"WaVer - Subscription\";\r\n    setSelectedTab(\"Subscription\");\r\n  }, [setSelectedTab]);\r\n\r\n  const getPushMessageFromChild = useCallback(\r\n    (pushMessage) => {\r\n      setPushMessageToSnackbar(() => pushMessage);\r\n    },\r\n    [setPushMessageToSnackbar]\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchRandomTargets();\r\n    fetchRandomStatistics();\r\n    fetchRandomTransactions();\r\n    fetchRandomMessages();\r\n    fetchRandomPosts();\r\n  }, [\r\n    fetchRandomTargets,\r\n    fetchRandomStatistics,\r\n    fetchRandomTransactions,\r\n    fetchRandomMessages,\r\n    fetchRandomPosts,\r\n  ]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <LazyLoadAddBalanceDialog\r\n        open={isAddBalanceDialogOpen}\r\n        onClose={closeAddBalanceDialog}\r\n        onSuccess={onPaymentSuccess}\r\n      />\r\n      <NavBar\r\n        selectedTab={selectedTab}\r\n        messages={messages}\r\n        openAddBalanceDialog={openAddBalanceDialog}\r\n      />\r\n      <ConsecutiveSnackbarMessages\r\n        getPushMessageFromChild={getPushMessageFromChild}\r\n      />\r\n      <main className={classNames(classes.main)}>\r\n        <Routing\r\n          isAccountActivated={isAccountActivated}\r\n          ImageCropper={ImageCropper}\r\n          EmojiTextArea={EmojiTextArea}\r\n          CardChart={CardChart}\r\n          Dropzone={Dropzone}\r\n          DateTimePicker={DateTimePicker}\r\n          toggleAccountActivation={toggleAccountActivation}\r\n          pushMessageToSnackbar={pushMessageToSnackbar}\r\n          transactions={transactions}\r\n          statistics={statistics}\r\n          posts={posts}\r\n          targets={targets}\r\n          selectDashboard={selectDashboard}\r\n          selectPosts={selectPosts}\r\n          selectSubscription={selectSubscription}\r\n          openAddBalanceDialog={openAddBalanceDialog}\r\n          setTargets={setTargets}\r\n          setPosts={setPosts}\r\n        />\r\n      </main>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nMain.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(memo(Main));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CircularProgress, Box } from \"@mui/material\";\r\n\r\nimport withStyles from '@mui/styles/withStyles';\r\n\r\nconst styles = theme => ({\r\n  circularProgress: {\r\n    color: theme.palette.secondary.main\r\n  }\r\n});\r\n\r\nfunction ButtonCircularProgress(props) {\r\n  const { size, classes } = props;\r\n  return (\r\n    <Box color=\"secondary.main\" pl={1.5} display=\"flex\">\r\n      <CircularProgress\r\n        size={size ? size : 24}\r\n        thickness={size ? (size / 5) * 24 : 5}\r\n        className={classes.circularProgress}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nButtonCircularProgress.propTypes = {\r\n  size: PropTypes.number,\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ButtonCircularProgress);\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Drawer,\n  IconButton,\n  Typography,\n  Toolbar,\n} from \"@mui/material\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\n\nconst styles = (theme) => ({\n  closeIcon: {\n    marginRight: theme.spacing(0.5),\n  },\n  headSection: {\n    width: 200,\n  },\n  blackList: {\n    backgroundColor: theme.palette.background.paper,\n    height: \"100%\",\n  },\n  noDecoration: {\n    textDecoration: \"none !important\",\n  },\n});\n\nfunction NavigationDrawer(props) {\n  const { open, onClose, anchor, classes, menuItems, selectedItem, theme } =\n    props;\n  const isWidthUpSm = useMediaQuery(theme.breakpoints.up(\"sm\"));\n\n  window.onresize = () => {\n    if (isWidthUpSm && open) {\n      onClose();\n    }\n  };\n\n  return (\n    <Drawer variant=\"temporary\" open={open} onClose={onClose} anchor={anchor}>\n      <Toolbar className={classes.headSection}>\n        <ListItem\n          style={{\n            paddingTop: theme.spacing(0),\n            paddingBottom: theme.spacing(0),\n            height: \"100%\",\n            justifyContent: anchor === \"left\" ? \"flex-start\" : \"flex-end\",\n          }}\n          disableGutters\n        >\n          <ListItemIcon className={classes.closeIcon}>\n            <IconButton\n              onClick={onClose}\n              aria-label=\"Close Navigation\"\n              size=\"large\"\n            >\n              <CloseIcon color=\"primary\" />\n            </IconButton>\n          </ListItemIcon>\n        </ListItem>\n      </Toolbar>\n      <List className={classes.blackList}>\n        {menuItems.map((element) => {\n          // Modificación aquí: Usar element.onClick directamente para enlaces internos y la ruta raíz\n          if (element.link && (element.link.startsWith(\"#\") || element.link === \"/\")) {\n            return (\n              <ListItem\n                button\n                key={element.name}\n                onClick={element.onClick}\n                selected={selectedItem === element.name}\n                disableRipple\n                disableTouchRipple\n              >\n                <ListItemIcon style={{ color: \"white\", minWidth: 40 }}>{element.icon}</ListItemIcon>\n                <ListItemText\n                  primary={\n                    <Typography variant=\"subtitle1\" style={{ color: \"white\" }}>\n                      {element.name}\n                    </Typography>\n                  }\n                />\n              </ListItem>\n            );\n          } else if (element.link) {\n            // Mantener Link de react-router-dom para enlaces externos o rutas de la app\n            return (\n              <Link\n                key={element.name}\n                to={element.link}\n                className={classes.noDecoration}\n                onClick={onClose}\n              >\n                <ListItem\n                  button\n                  selected={selectedItem === element.name}\n                  disableRipple\n                  disableTouchRipple\n                >\n                  <ListItemIcon style={{ color: \"white\", minWidth: 40 }}>{element.icon}</ListItemIcon>\n                  <ListItemText\n                    primary={\n                      <Typography variant=\"subtitle1\" style={{ color: \"white\" }}>\n                        {element.name}\n                      </Typography>\n                    }\n                  />\n                </ListItem>\n              </Link>\n            );\n          }\n          return (\n            <ListItem button key={element.name} onClick={element.onClick}>\n              <ListItemIcon style={{ color: \"white\" }}>{element.icon}</ListItemIcon>\n              <ListItemText\n                primary={\n                  <Typography variant=\"subtitle1\" style={{ color: \"white\" }}>\n                    {element.name}\n                  </Typography>\n                }\n              />\n            </ListItem>\n          );\n        })}\n      </List>\n    </Drawer>\n  );\n}\n\nNavigationDrawer.propTypes = {\n  anchor: PropTypes.string.isRequired,\n  theme: PropTypes.object.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  menuItems: PropTypes.arrayOf(PropTypes.object).isRequired,\n  classes: PropTypes.object.isRequired,\n  selectedItem: PropTypes.string,\n};\n\nexport default withStyles(styles, { withTheme: true })(NavigationDrawer);","function shadeColor(color, percent) {\r\n  const f = parseInt(color.slice(1), 16);\r\n  const t = percent < 0 ? 0 : 255;\r\n  const p = percent < 0 ? percent * -1 : percent;\r\n  const R = f >> 16;\r\n  const G = (f >> 8) & 0x00ff;\r\n  const B = f & 0x0000ff;\r\n  return `#${(\r\n    0x1000000 +\r\n    (Math.round((t - R) * p) + R) * 0x10000 +\r\n    (Math.round((t - G) * p) + G) * 0x100 +\r\n    (Math.round((t - B) * p) + B)\r\n  )\r\n    .toString(16)\r\n    .slice(1)}`;\r\n}\r\n\r\nexport default shadeColor;\r\n"],"names":["_ref","component","rest","_jsx","Route","render","routeProps","_len","arguments","length","Array","_key","finalProps","Object","assign","React","renderMergedProps","getLocationId","pathname","search","hash","useLocationBlocker","history","useHistory","useEffect","block","location","action","globLastC","Infinity","smoothScrollTopRec","c","document","documentElement","scrollTop","body","window","requestAnimationFrame","scrollTo","setTimeout","withStyles","theme","main","backgroundColor","palette","warning","light","border","borderWidth","padding","spacing","borderRadius","shape","withTheme","props","className","children","classes","classNames","Typography","variant","wrapper","borderColor","greyed","disableVerticalPadding","disableBorderRadius","style","paddingLeft","paddingRight","inputOptions","numberInput","width","numberInputInput","dBlock","display","listItemLeftPadding","accordionDetails","paddintTop","justifyContent","pushMessageToSnackbar","isSaveLoading","setIsSaveLoading","useState","isDefaultLoading","setIsDefaultLoading","option1","setOption1","option2","setOption2","option3","setOption3","option4","setOption4","option5","setOption5","option6","setOption6","handleChange","useCallback","event","name","value","target","Error","resetState","onSetDefault","text","onSubmit","inputs","state","label","stateName","_jsxs","Accordion","sx","boxShadow","shadows","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","List","disablePadding","Bordered","map","element","index","ListItem","disableGutters","divider","ListItemText","FormControl","ListItemSecondaryAction","Select","onChange","input","OutlinedInput","labelWidth","MenuProps","disableScrollLock","innerElement","MenuItem","type","inputProps","step","Box","mr","Button","onClick","disabled","ButtonCircularProgress","color","tooltipTypo","whiteSpace","typography","caption","common","white","tooltip","verticalAlign","fontSize","helpIcon","marginLeft","transition","transitions","create","duration","short","easing","easeInOut","title","isHovered","setIsHovered","onMouseOver","onMouseLeave","Tooltip","enterTouchDelay","HelpIconOutline","onFocus","onBlur","cursor","breakpoints","down","listItem","up","paddingTop","option7","setOption7","handleInputChange","handleCheckboxChange","checked","secondaryAction","Checkbox","helpText","HelpIcon","Fragment","Settings1","Settings2","tableSortLabel","userSelect","noIcon","paddingFix","order","orderBy","rows","onRequestSort","createSortHandler","property","TableHead","TableRow","row","TableCell","align","numeric","sortDirection","placement","enterDelay","TableSortLabel","active","id","direction","array","cmp","stabilizedThis","el","sort","a","b","desc","open","onClose","loading","content","onConfirm","Dialog","disableEscapeKeyDown","DialogTitle","DialogContent","DialogContentText","DialogActions","tableWrapper","overflowX","alignRight","flexDirection","alignItems","blackIcon","black","avatar","height","firstData","iconButton","dNone","targets","setTargets","setOrder","setOrderBy","page","setPage","isDeleteTargetDialogOpen","setIsDeleteTargetDialogOpen","deleteTargetDialogRow","setDeleteTargetDialogRow","isDeleteTargetLoading","setIsDeleteTargetLoading","handleRequestSort","__","_orderBy","_order","deleteTarget","_targets","findIndex","splice","handleChangePage","_","handleDeleteTargetDialogClose","handleDeleteTargetDialogOpen","toggleTarget","isActivated","ConfirmationDialog","Table","EnhancedTableHead","rowCount","TableBody","stableSort","getSorting","slice","hover","tabIndex","scope","Avatar","src","profilePicUrl","number1","number2","number3","number4","IconButton","size","PauseCircleOutlineIcon","PlayCirlceOutlineIcon","DeleteIcon","m","HighlightedInformation","TablePagination","count","rowsPerPage","backIconButtonProps","nextIconButtonProps","onPageChange","select","selectIcon","actions","labelRowsPerPage","paper","toolbar","scaleMinus","transform","from","to","spin","animation","listItemSecondaryAction","toggleAccountActivation","isAccountActivated","Paper","Toolbar","primary","secondary","ListItemIcon","LoopIcon","Switch","CardChart","data","profit","views","Grid","container","item","xs","md","selectDashboard","statistics","StatisticsArea","mt","gutterBottom","AccountInformationArea","SettingsArea","UserDataArea","listItemtext","items","anchorEl","useRef","isOpen","setIsOpen","handleClose","handleOpen","buttonRef","MoreVertIcon","Popover","current","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","dense","icon","imageContainer","overflow","position","image","top","bottom","left","right","margin","timeStamp","options","roundedBorder","img","hasMoreWidthThanHeight","setHasMoreWidthThanHeight","hasLoaded","setHasLoaded","onLoad","naturalHeight","naturalWidth","ref","alt","ImageListItemBar","subtitle","format","Date","awareOfUnicodeTokens","actionIcon","VertOptions","setPosts","posts","openAddPostModal","isDeletePostDialogOpen","setIsDeletePostDialogOpen","isDeletePostDialogLoading","setIsDeletePostDialogLoading","closeDeletePostDialog","deletePost","_posts","find","onDelete","printImageGrid","p","post","sm","SelfAligningImage","timestamp","disableElevation","Divider","helpPadding","fullWidth","maxWidth","fullWidthActions","pt","values","root","pb","pr","dialogPaper","dialogContent","ImageCropper","onCrop","aspectRatio","crop","setCrop","getCropFunctionFromChild","cropFunction","onEscapeKeyDown","setCropFunction","floatButtonWrapper","zIndex","inputRoot","uploadIcon","imgWrapper","uploadText","emojiTextArea","borderTopRightRadius","borderBottomRightRadius","marginRight","Dropzone","files","deleteItem","onDrop","EmojiTextArea","DateTimePicker","cropperFile","onCropperClose","uploadAt","onChangeUploadAt","printFile","preview","CloseIcon","accept","fullHeight","ImageCropperDialog","paragraph","mb","inputClassName","maxCharacters","rightContent","emojiSet","disablePast","setFiles","setUploadAt","setLoading","setCropperFile","acceptDrop","file","acceptedFiles","rejectedFiles","isErrorMessage","URL","createObjectURL","key","getTime","dataUrl","handleUpload","ActionPaper","AddPostOptions","selectPosts","isAddPostPaperOpen","setIsAddPostPaperOpen","closeAddPostModal","AddPost","PostContent","Chip","shadeColor","unix","date","getDate","getMonth","getFullYear","cents","toLocaleString","currency","contentWrapper","transactions","transaction","description","balanceChange","ColorfulChip","currencyPrettyPrint","error","dark","unixToDateString","paidUntil","openAddBalanceDialog","selectSubscription","SubscriptionInfo","SubscriptionTable","Routing","PropsRoute","path","Posts","Subscription","Dashboard","marginTop","marginBottom","memo","message","hasErrorOccurred","setHasErrorOccurred","handleError","ListItemAvatar","ErrorIcon","onError","formatDistance","tabContainer","overflowY","maxHeight","popoverPaper","noShadow","messages","handleClick","handleClickAway","MessageIcon","AppBar","pl","MessageListItem","styles","minWidth","Drawer","anchor","outlinedInput","balance","readOnly","appBar","background","sharp","leavingScreen","appBarToolbar","accountAvatar","drawerPaper","smBordered","menuLink","textDecoration","iconListItem","paddingBottom","textPrimary","mobileItemSelected","brandText","fontFamily","fontWeight","username","justifyCenter","permanentDrawerListItem","selectedTab","links","isMobileOpen","setIsMobileOpen","isSideDrawerOpen","setIsSideDrawerOpen","isWidthUpSm","useMediaQuery","openMobileDrawer","closeMobileDrawer","openDrawer","closeDrawer","menuItems","link","desktop","DashboardIcon","mobile","ImageIcon","AccountBalanceIcon","PowerSettingsNewIcon","Hidden","smUp","MenuIcon","smDown","Balance","MessagePopperButton","SupervisorAccountIcon","SideDrawer","Link","node","selected","button","click","NavigationDrawer","selectedItem","getPushMessageFromChild","messageInfo","setMessageInfo","queue","processQueue","shift","reason","pushMessage","push","Snackbar","disableWindowBlurListener","autoHideDuration","ContentProps","TransitionProps","onExited","onSuccess","AddBalanceDialog","setAddBalanceDialog","hasFetchedAddBalanceDialog","setHasFetchedAddBlanceDialog","then","Component","default","shuffle","i","j","Math","floor","random","Main","setSelectedTab","setCardChart","hasFetchedCardChart","setHasFetchedCardChart","setEmojiTextArea","hasFetchedEmojiTextArea","setHasFetchedEmojiTextArea","setImageCropper","hasFetchedImageCropper","setHasFetchedImageCropper","setDropzone","hasFetchedDropzone","setHasFetchedDropzone","setDateTimePicker","hasFetchedDateTimePicker","setHasFetchedDateTimePicker","setTransactions","setStatistics","setMessages","setIsAccountActivated","isAddBalanceDialogOpen","setIsAddBalanceDialogOpen","setPushMessageToSnackbar","fetchRandomTargets","randomPerson","persons","round","closeAddBalanceDialog","onPaymentSuccess","fetchRandomStatistics","oneYearSeconds","curProfit","curViews","curUnix","fetchRandomTransactions","oneMonthSeconds","transactionTemplates","isSubscription","randomTransactionTemplate","reverse","fetchRandomMessages","iterations","fetchRandomPosts","person","smoothScrollTop","LazyLoadAddBalanceDialog","NavBar","ConsecutiveSnackbarMessages","circularProgress","CircularProgress","thickness","closeIcon","headSection","blackList","noDecoration","onresize","startsWith","disableRipple","disableTouchRipple","percent","f","parseInt","t","R","G","B","toString"],"sourceRoot":""}