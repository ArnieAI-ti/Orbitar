{"version":3,"file":"static/js/4.464a6a7f.chunk.js","mappings":"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","sources":["shared/functions/toArray.js","shared/functions/countWithEmojis.js","shared/components/EmojiTextArea.js"],"sourcesContent":["/* eslint-disable */\r\n\r\n/**\r\n * lodash (Custom Build) <https://lodash.com/>\r\n * Build: `lodash modularize exports=\"npm\" -o ./`\r\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\r\n * Released under MIT license <https://lodash.com/license>\r\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\r\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n */\r\n\r\n/** Used as references for various `Number` constants. */\r\nconst MAX_SAFE_INTEGER = 9007199254740991;\r\n\r\n/** `Object#toString` result references. */\r\nconst argsTag = \"[object Arguments]\";\r\n\r\nconst funcTag = \"[object Function]\";\r\n\r\nconst genTag = \"[object GeneratorFunction]\";\r\n\r\nconst mapTag = \"[object Map]\";\r\n\r\nconst objectTag = \"[object Object]\";\r\n\r\nconst promiseTag = \"[object Promise]\";\r\n\r\nconst setTag = \"[object Set]\";\r\n\r\nconst stringTag = \"[object String]\";\r\n\r\nconst weakMapTag = \"[object WeakMap]\";\r\n\r\nconst dataViewTag = \"[object DataView]\";\r\n\r\n/**\r\n * Used to match `RegExp`\r\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\r\n */\r\nconst reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\r\n\r\n/** Used to detect host constructors (Safari). */\r\nconst reIsHostCtor = /^\\[object .+?Constructor\\]$/;\r\n\r\n/** Used to detect unsigned integer values. */\r\nconst reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n/** Used to compose unicode character classes. */\r\nconst rsAstralRange = \"\\\\ud800-\\\\udfff\";\r\n\r\nconst rsComboMarksRange = \"\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23\";\r\n\r\nconst rsComboSymbolsRange = \"\\\\u20d0-\\\\u20f0\";\r\n\r\nconst rsVarRange = \"\\\\ufe0e\\\\ufe0f\";\r\n\r\n/** Used to compose unicode capture groups. */\r\nconst rsAstral = `[${rsAstralRange}]`;\r\n\r\nconst rsCombo = `[${rsComboMarksRange}${rsComboSymbolsRange}]`;\r\n\r\nconst rsFitz = \"\\\\ud83c[\\\\udffb-\\\\udfff]\";\r\n\r\nconst rsModifier = `(?:${rsCombo}|${rsFitz})`;\r\n\r\nconst rsNonAstral = `[^${rsAstralRange}]`;\r\n\r\nconst rsRegional = \"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\";\r\n\r\nconst rsSurrPair = \"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\";\r\n\r\nconst rsZWJ = \"\\\\u200d\";\r\n\r\n/** Used to compose unicode regexes. */\r\nconst reOptMod = `${rsModifier}?`;\r\n\r\nconst rsOptVar = `[${rsVarRange}]?`;\r\n\r\nconst rsOptJoin = `(?:${rsZWJ}(?:${[rsNonAstral, rsRegional, rsSurrPair].join(\r\n  \"|\"\r\n)})${rsOptVar}${reOptMod})*`;\r\n\r\nconst rsSeq = rsOptVar + reOptMod + rsOptJoin;\r\n\r\nconst rsSymbol = `(?:${[\r\n  `${rsNonAstral + rsCombo}?`,\r\n  rsCombo,\r\n  rsRegional,\r\n  rsSurrPair,\r\n  rsAstral\r\n].join(\"|\")})`;\r\n\r\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\r\nconst reUnicode = RegExp(`${rsFitz}(?=${rsFitz})|${rsSymbol}${rsSeq}`, \"g\");\r\n\r\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\r\nconst reHasUnicode = RegExp(\r\n  `[${rsZWJ}${rsAstralRange}${rsComboMarksRange}${rsComboSymbolsRange}${rsVarRange}]`\r\n);\r\n\r\n/** Detect free variable `global` from Node.js. */\r\nconst freeGlobal =\r\n  typeof global === \"object\" && global && global.Object === Object && global;\r\n\r\n/** Used as a reference to the global object. */\r\nvar root = freeGlobal || Function(\"return this\")();\r\n\r\n/**\r\n * A specialized version of `_.map` for arrays without support for iteratee\r\n * shorthands.\r\n *\r\n * @private\r\n * @param {Array} [array] The array to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Array} Returns the new mapped array.\r\n */\r\nfunction arrayMap(array, iteratee) {\r\n  let index = -1;\r\n\r\n  const length = array ? array.length : 0;\r\n\r\n  const result = Array(length);\r\n\r\n  while (++index < length) {\r\n    result[index] = iteratee(array[index], index, array);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Converts an ASCII `string` to an array.\r\n *\r\n * @private\r\n * @param {string} string The string to convert.\r\n * @returns {Array} Returns the converted array.\r\n */\r\nfunction asciiToArray(string) {\r\n  return string.split(\"\");\r\n}\r\n\r\n/**\r\n * The base implementation of `_.times` without support for iteratee shorthands\r\n * or max array length checks.\r\n *\r\n * @private\r\n * @param {number} n The number of times to invoke `iteratee`.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {Array} Returns the array of results.\r\n */\r\nfunction baseTimes(n, iteratee) {\r\n  let index = -1;\r\n\r\n  const result = Array(n);\r\n\r\n  while (++index < n) {\r\n    result[index] = iteratee(index);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * The base implementation of `_.values` and `_.valuesIn` which creates an\r\n * array of `object` property values corresponding to the property names\r\n * of `props`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @param {Array} props The property names to get values for.\r\n * @returns {Object} Returns the array of property values.\r\n */\r\nfunction baseValues(object, props) {\r\n  return arrayMap(props, key => object[key]);\r\n}\r\n\r\n/**\r\n * Gets the value at `key` of `object`.\r\n *\r\n * @private\r\n * @param {Object} [object] The object to query.\r\n * @param {string} key The key of the property to get.\r\n * @returns {*} Returns the property value.\r\n */\r\nfunction getValue(object, key) {\r\n  return object == null ? undefined : object[key];\r\n}\r\n\r\n/**\r\n * Checks if `string` contains Unicode symbols.\r\n *\r\n * @private\r\n * @param {string} string The string to inspect.\r\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\r\n */\r\nfunction hasUnicode(string) {\r\n  return reHasUnicode.test(string);\r\n}\r\n\r\n/**\r\n * Checks if `value` is a host object in IE < 9.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\r\n */\r\nfunction isHostObject(value) {\r\n  // Many host objects are `Object` objects that can coerce to strings\r\n  // despite having improperly defined `toString` methods.\r\n  let result = false;\r\n  if (value !== null && typeof value.toString !== \"function\") {\r\n    try {\r\n      result = !!`${value}`;\r\n    } catch (e) {}\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Converts `iterator` to an array.\r\n *\r\n * @private\r\n * @param {Object} iterator The iterator to convert.\r\n * @returns {Array} Returns the converted array.\r\n */\r\nfunction iteratorToArray(iterator) {\r\n  let data;\r\n\r\n  const result = [];\r\n\r\n  while (!(data = iterator.next()).done) {\r\n    result.push(data.value);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Converts `map` to its key-value pairs.\r\n *\r\n * @private\r\n * @param {Object} map The map to convert.\r\n * @returns {Array} Returns the key-value pairs.\r\n */\r\nfunction mapToArray(map) {\r\n  let index = -1;\r\n\r\n  const result = Array(map.size);\r\n\r\n  map.forEach((value, key) => {\r\n    result[++index] = [key, value];\r\n  });\r\n  return result;\r\n}\r\n\r\n/**\r\n * Creates a unary function that invokes `func` with its argument transformed.\r\n *\r\n * @private\r\n * @param {Function} func The function to wrap.\r\n * @param {Function} transform The argument transform.\r\n * @returns {Function} Returns the new function.\r\n */\r\nfunction overArg(func, transform) {\r\n  return function(arg) {\r\n    return func(transform(arg));\r\n  };\r\n}\r\n\r\n/**\r\n * Converts `set` to an array of its values.\r\n *\r\n * @private\r\n * @param {Object} set The set to convert.\r\n * @returns {Array} Returns the values.\r\n */\r\nfunction setToArray(set) {\r\n  let index = -1;\r\n\r\n  const result = Array(set.size);\r\n\r\n  set.forEach(value => {\r\n    result[++index] = value;\r\n  });\r\n  return result;\r\n}\r\n\r\n/**\r\n * Converts `string` to an array.\r\n *\r\n * @private\r\n * @param {string} string The string to convert.\r\n * @returns {Array} Returns the converted array.\r\n */\r\nfunction stringToArray(string) {\r\n  return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);\r\n}\r\n\r\n/**\r\n * Converts a Unicode `string` to an array.\r\n *\r\n * @private\r\n * @param {string} string The string to convert.\r\n * @returns {Array} Returns the converted array.\r\n */\r\nfunction unicodeToArray(string) {\r\n  return string.match(reUnicode) || [];\r\n}\r\n\r\n/** Used for built-in method references. */\r\nconst funcProto = Function.prototype;\r\n\r\nconst objectProto = Object.prototype;\r\n\r\n/** Used to detect overreaching core-js shims. */\r\nconst coreJsData = root[\"__core-js_shared__\"];\r\n\r\n/** Used to detect methods masquerading as native. */\r\nconst maskSrcKey = (function() {\r\n  const uid = /[^.]+$/.exec(\r\n    (coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO) || \"\"\r\n  );\r\n  return uid ? `Symbol(src)_1.${uid}` : \"\";\r\n})();\r\n\r\n/** Used to resolve the decompiled source of functions. */\r\nconst funcToString = funcProto.toString;\r\n\r\n/** Used to check objects for own properties. */\r\nconst hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * Used to resolve the\r\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\r\n * of values.\r\n */\r\nconst objectToString = objectProto.toString;\r\n\r\n/** Used to detect if a method is native. */\r\nconst reIsNative = RegExp(\r\n  `^${funcToString\r\n    .call(hasOwnProperty)\r\n    .replace(reRegExpChar, \"\\\\$&\")\r\n    .replace(\r\n      /hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\r\n      \"$1.*?\"\r\n    )}$`\r\n);\r\n\r\n/** Built-in value references. */\r\nconst Symbol = root.Symbol;\r\n\r\nconst iteratorSymbol = Symbol ? Symbol.iterator : undefined;\r\n\r\nconst propertyIsEnumerable = objectProto.propertyIsEnumerable;\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nconst nativeKeys = overArg(Object.keys, Object);\r\n\r\n/* Built-in method references that are verified to be native. */\r\nconst DataView = getNative(root, \"DataView\");\r\n\r\nconst Map = getNative(root, \"Map\");\r\n\r\nconst Promise = getNative(root, \"Promise\");\r\n\r\nconst Set = getNative(root, \"Set\");\r\n\r\nconst WeakMap = getNative(root, \"WeakMap\");\r\n\r\n/** Used to detect maps, sets, and weakmaps. */\r\nconst dataViewCtorString = toSource(DataView);\r\n\r\nconst mapCtorString = toSource(Map);\r\n\r\nconst promiseCtorString = toSource(Promise);\r\n\r\nconst setCtorString = toSource(Set);\r\n\r\nconst weakMapCtorString = toSource(WeakMap);\r\n\r\n/**\r\n * Creates an array of the enumerable property names of the array-like `value`.\r\n *\r\n * @private\r\n * @param {*} value The value to query.\r\n * @param {boolean} inherited Specify returning inherited property names.\r\n * @returns {Array} Returns the array of property names.\r\n */\r\nfunction arrayLikeKeys(value, inherited) {\r\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\r\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\r\n  const result =\r\n    isArray(value) || isArguments(value) ? baseTimes(value.length, String) : [];\r\n\r\n  const length = result.length;\r\n\r\n  const skipIndexes = !!length;\r\n\r\n  for (const key in value) {\r\n    if (\r\n      (inherited || hasOwnProperty.call(value, key)) &&\r\n      !(skipIndexes && (key === \"length\" || isIndex(key, length)))\r\n    ) {\r\n      result.push(key);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * The base implementation of `getTag`.\r\n *\r\n * @private\r\n * @param {*} value The value to query.\r\n * @returns {string} Returns the `toStringTag`.\r\n */\r\nfunction baseGetTag(value) {\r\n  return objectToString.call(value);\r\n}\r\n\r\n/**\r\n * The base implementation of `_.isNative` without bad shim checks.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a native function,\r\n *  else `false`.\r\n */\r\nfunction baseIsNative(value) {\r\n  if (!isObject(value) || isMasked(value)) {\r\n    return false;\r\n  }\r\n  const pattern =\r\n    isFunction(value) || isHostObject(value) ? reIsNative : reIsHostCtor;\r\n  return pattern.test(toSource(value));\r\n}\r\n\r\n/**\r\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of property names.\r\n */\r\nfunction baseKeys(object) {\r\n  if (!isPrototype(object)) {\r\n    return nativeKeys(object);\r\n  }\r\n  const result = [];\r\n  for (const key in Object(object)) {\r\n    if (hasOwnProperty.call(object, key) && key !== \"constructor\") {\r\n      result.push(key);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Copies the values of `source` to `array`.\r\n *\r\n * @private\r\n * @param {Array} source The array to copy values from.\r\n * @param {Array} [array=[]] The array to copy values to.\r\n * @returns {Array} Returns `array`.\r\n */\r\nfunction copyArray(source, array) {\r\n  let index = -1;\r\n\r\n  const length = source.length;\r\n\r\n  array || (array = Array(length));\r\n  while (++index < length) {\r\n    array[index] = source[index];\r\n  }\r\n  return array;\r\n}\r\n\r\n/**\r\n * Gets the native function at `key` of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @param {string} key The key of the method to get.\r\n * @returns {*} Returns the function if it's native, else `undefined`.\r\n */\r\nfunction getNative(object, key) {\r\n  const value = getValue(object, key);\r\n  return baseIsNative(value) ? value : undefined;\r\n}\r\n\r\n/**\r\n * Gets the `toStringTag` of `value`.\r\n *\r\n * @private\r\n * @param {*} value The value to query.\r\n * @returns {string} Returns the `toStringTag`.\r\n */\r\nlet getTag = baseGetTag;\r\n\r\n// Fallback for data views, maps, sets, and weak maps in IE 11,\r\n// for data views in Edge < 14, and promises in Node.js.\r\nif (\r\n  (DataView && getTag(new DataView(new ArrayBuffer(1))) !== dataViewTag) ||\r\n  (Map && getTag(new Map()) !== mapTag) ||\r\n  (Promise && getTag(Promise.resolve()) !== promiseTag) ||\r\n  (Set && getTag(new Set()) !== setTag) ||\r\n  (WeakMap && getTag(new WeakMap()) !== weakMapTag)\r\n) {\r\n  getTag = function(value) {\r\n    const result = objectToString.call(value);\r\n\r\n    const Ctor = result === objectTag ? value.constructor : undefined;\r\n\r\n    const ctorString = Ctor ? toSource(Ctor) : undefined;\r\n\r\n    if (ctorString) {\r\n      switch (ctorString) {\r\n        case dataViewCtorString:\r\n          return dataViewTag;\r\n        case mapCtorString:\r\n          return mapTag;\r\n        case promiseCtorString:\r\n          return promiseTag;\r\n        case setCtorString:\r\n          return setTag;\r\n        case weakMapCtorString:\r\n          return weakMapTag;\r\n        default:\r\n          return;\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n}\r\n\r\n/**\r\n * Checks if `value` is a valid array-like index.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\r\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\r\n */\r\nfunction isIndex(value, length) {\r\n  length = length == null ? MAX_SAFE_INTEGER : length;\r\n  return (\r\n    !!length &&\r\n    (typeof value === \"number\" || reIsUint.test(value)) &&\r\n    (value > -1 && value % 1 === 0 && value < length)\r\n  );\r\n}\r\n\r\n/**\r\n * Checks if `func` has its source masked.\r\n *\r\n * @private\r\n * @param {Function} func The function to check.\r\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\r\n */\r\nfunction isMasked(func) {\r\n  return !!maskSrcKey && maskSrcKey in func;\r\n}\r\n\r\n/**\r\n * Checks if `value` is likely a prototype object.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\r\n */\r\nfunction isPrototype(value) {\r\n  const Ctor = value && value.constructor;\r\n\r\n  const proto = (typeof Ctor === \"function\" && Ctor.prototype) || objectProto;\r\n\r\n  return value === proto;\r\n}\r\n\r\n/**\r\n * Converts `func` to its source code.\r\n *\r\n * @private\r\n * @param {Function} func The function to process.\r\n * @returns {string} Returns the source code.\r\n */\r\nfunction toSource(func) {\r\n  if (func !== null) {\r\n    try {\r\n      return funcToString.call(func);\r\n    } catch (e) {}\r\n    try {\r\n      return `${func}`;\r\n    } catch (e) {}\r\n  }\r\n  return \"\";\r\n}\r\n\r\n/**\r\n * Checks if `value` is likely an `arguments` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\r\n *  else `false`.\r\n * @example\r\n *\r\n * _.isArguments(function() { return arguments; }());\r\n * // => true\r\n *\r\n * _.isArguments([1, 2, 3]);\r\n * // => false\r\n */\r\nfunction isArguments(value) {\r\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\r\n  return (\r\n    isArrayLikeObject(value) &&\r\n    hasOwnProperty.call(value, \"callee\") &&\r\n    (!propertyIsEnumerable.call(value, \"callee\") ||\r\n      objectToString.call(value) === argsTag)\r\n  );\r\n}\r\n\r\n/**\r\n * Checks if `value` is classified as an `Array` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\r\n * @example\r\n *\r\n * _.isArray([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isArray(document.body.children);\r\n * // => false\r\n *\r\n * _.isArray('abc');\r\n * // => false\r\n *\r\n * _.isArray(_.noop);\r\n * // => false\r\n */\r\nvar isArray = Array.isArray;\r\n\r\n/**\r\n * Checks if `value` is array-like. A value is considered array-like if it's\r\n * not a function and has a `value.length` that's an integer greater than or\r\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n * @example\r\n *\r\n * _.isArrayLike([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isArrayLike(document.body.children);\r\n * // => true\r\n *\r\n * _.isArrayLike('abc');\r\n * // => true\r\n *\r\n * _.isArrayLike(_.noop);\r\n * // => false\r\n */\r\nfunction isArrayLike(value) {\r\n  return value != null && isLength(value.length) && !isFunction(value);\r\n}\r\n\r\n/**\r\n * This method is like `_.isArrayLike` except that it also checks if `value`\r\n * is an object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an array-like object,\r\n *  else `false`.\r\n * @example\r\n *\r\n * _.isArrayLikeObject([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isArrayLikeObject(document.body.children);\r\n * // => true\r\n *\r\n * _.isArrayLikeObject('abc');\r\n * // => false\r\n *\r\n * _.isArrayLikeObject(_.noop);\r\n * // => false\r\n */\r\nfunction isArrayLikeObject(value) {\r\n  return isObjectLike(value) && isArrayLike(value);\r\n}\r\n\r\n/**\r\n * Checks if `value` is classified as a `Function` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n * @example\r\n *\r\n * _.isFunction(_);\r\n * // => true\r\n *\r\n * _.isFunction(/abc/);\r\n * // => false\r\n */\r\nfunction isFunction(value) {\r\n  // The use of `Object#toString` avoids issues with the `typeof` operator\r\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\r\n  const tag = isObject(value) ? objectToString.call(value) : \"\";\r\n  return tag === funcTag || tag === genTag;\r\n}\r\n\r\n/**\r\n * Checks if `value` is a valid array-like length.\r\n *\r\n * **Note:** This method is loosely based on\r\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\r\n * @example\r\n *\r\n * _.isLength(3);\r\n * // => true\r\n *\r\n * _.isLength(Number.MIN_VALUE);\r\n * // => false\r\n *\r\n * _.isLength(Infinity);\r\n * // => false\r\n *\r\n * _.isLength('3');\r\n * // => false\r\n */\r\nfunction isLength(value) {\r\n  return (\r\n    typeof value === \"number\" &&\r\n    value > -1 &&\r\n    value % 1 === 0 &&\r\n    value <= MAX_SAFE_INTEGER\r\n  );\r\n}\r\n\r\n/**\r\n * Checks if `value` is the\r\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\r\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\r\n * @example\r\n *\r\n * _.isObject({});\r\n * // => true\r\n *\r\n * _.isObject([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isObject(_.noop);\r\n * // => true\r\n *\r\n * _.isObject(null);\r\n * // => false\r\n */\r\nfunction isObject(value) {\r\n  const type = typeof value;\r\n  return !!value && (type === \"object\" || type === \"function\");\r\n}\r\n\r\n/**\r\n * Checks if `value` is object-like. A value is object-like if it's not `null`\r\n * and has a `typeof` result of \"object\".\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\r\n * @example\r\n *\r\n * _.isObjectLike({});\r\n * // => true\r\n *\r\n * _.isObjectLike([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isObjectLike(_.noop);\r\n * // => false\r\n *\r\n * _.isObjectLike(null);\r\n * // => false\r\n */\r\nfunction isObjectLike(value) {\r\n  return !!value && typeof value === \"object\";\r\n}\r\n\r\n/**\r\n * Checks if `value` is classified as a `String` primitive or object.\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\r\n * @example\r\n *\r\n * _.isString('abc');\r\n * // => true\r\n *\r\n * _.isString(1);\r\n * // => false\r\n */\r\nfunction isString(value) {\r\n  return (\r\n    typeof value === \"string\" ||\r\n    (!isArray(value) &&\r\n      isObjectLike(value) &&\r\n      objectToString.call(value) === stringTag)\r\n  );\r\n}\r\n\r\n/**\r\n * Converts `value` to an array.\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category Lang\r\n * @param {*} value The value to convert.\r\n * @returns {Array} Returns the converted array.\r\n * @example\r\n *\r\n * _.toArray({ 'a': 1, 'b': 2 });\r\n * // => [1, 2]\r\n *\r\n * _.toArray('abc');\r\n * // => ['a', 'b', 'c']\r\n *\r\n * _.toArray(1);\r\n * // => []\r\n *\r\n * _.toArray(null);\r\n * // => []\r\n */\r\nfunction toArray(value) {\r\n  if (!value) {\r\n    return [];\r\n  }\r\n  if (isArrayLike(value)) {\r\n    return isString(value) ? stringToArray(value) : copyArray(value);\r\n  }\r\n  if (iteratorSymbol && value[iteratorSymbol]) {\r\n    return iteratorToArray(value[iteratorSymbol]());\r\n  }\r\n  const tag = getTag(value);\r\n\r\n  const func =\r\n    tag === mapTag ? mapToArray : tag === setTag ? setToArray : values;\r\n\r\n  return func(value);\r\n}\r\n\r\n/**\r\n * Creates an array of the own enumerable property names of `object`.\r\n *\r\n * **Note:** Non-object values are coerced to objects. See the\r\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\r\n * for more details.\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category Object\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of property names.\r\n * @example\r\n *\r\n * function Foo() {\r\n *   this.a = 1;\r\n *   this.b = 2;\r\n * }\r\n *\r\n * Foo.prototype.c = 3;\r\n *\r\n * _.keys(new Foo);\r\n * // => ['a', 'b'] (iteration order is not guaranteed)\r\n *\r\n * _.keys('hi');\r\n * // => ['0', '1']\r\n */\r\nfunction keys(object) {\r\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\r\n}\r\n\r\n/**\r\n * Creates an array of the own enumerable string keyed property values of `object`.\r\n *\r\n * **Note:** Non-object values are coerced to objects.\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category Object\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the array of property values.\r\n * @example\r\n *\r\n * function Foo() {\r\n *   this.a = 1;\r\n *   this.b = 2;\r\n * }\r\n *\r\n * Foo.prototype.c = 3;\r\n *\r\n * _.values(new Foo);\r\n * // => [1, 2] (iteration order is not guaranteed)\r\n *\r\n * _.values('hi');\r\n * // => ['h', 'i']\r\n */\r\nfunction values(object) {\r\n  return object ? baseValues(object, keys(object)) : [];\r\n}\r\n\r\nmodule.exports = toArray;\r\n","import toArray from \"./toArray\";\r\n\r\n/**\r\n * Counts the characters in a string and counts emojis correctly.\r\n *\r\n * @param {string} str The string to count characters from.\r\n * @return {number} The number of characters in the string.\r\n */\r\nfunction countWithEmojis(str) {\r\n  return toArray(str).length;\r\n}\r\n\r\nexport default countWithEmojis;\r\n","import React, { Fragment, useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\nimport { Picker } from \"emoji-mart\";\r\nimport { TextField, IconButton, Collapse, FormHelperText, Box, Grid } from \"@mui/material\";\r\nimport withStyles from '@mui/styles/withStyles';\r\nimport EmojiEmotionsIcon from \"@mui/icons-material/EmojiEmotions\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport countWithEmojis from \"../functions/countWithEmojis\";\r\n\r\nconst styles = theme => ({\r\n  \"@global\": {\r\n    \".emoji-mart-category-label\": theme.typography.body1,\r\n    \".emoji-mart-bar\": { display: \"none !important\" },\r\n    \".emoji-mart-search input\": {\r\n      ...theme.typography.body1,\r\n      ...theme.border\r\n    },\r\n    \".emoji-mart-search\": {\r\n      marginTop: `${theme.spacing(1)} !important`,\r\n      paddingRight: `${theme.spacing(1)} !important`,\r\n      paddingLeft: `${theme.spacing(1)} !important`,\r\n      paddingBottom: `${theme.spacing(1)} !important`\r\n    },\r\n    \".emoji-mart-search-icon\": {\r\n      top: \"5px !important\",\r\n      right: \"14px !important\",\r\n      fontSize: 20\r\n    },\r\n    \".emoji-mart-scroll\": {\r\n      height: 240\r\n    },\r\n    \".emoji-mart\": {\r\n      ...theme.border\r\n    }\r\n  },\r\n  floatButtonWrapper: {\r\n    position: \"absolute\",\r\n    bottom: 12,\r\n    right: 12\r\n  },\r\n  floatButtonSVG: {\r\n    color: theme.palette.primary.light\r\n  },\r\n  relative: {\r\n    position: \"relative\"\r\n  }\r\n});\r\n\r\n/**\r\n * Emojis whose unified is greater than 5 sometimes\r\n * are not displayed correcty in the browser.\r\n * We won't display them.\r\n */\r\nconst emojisToShowFilter = emoji => {\r\n  if (emoji.unified.length > 5) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nfunction EmojiTextarea(props) {\r\n  const {\r\n    theme,\r\n    classes,\r\n    rightContent,\r\n    placeholder,\r\n    maxCharacters,\r\n    emojiSet,\r\n    inputClassName,\r\n    onChange\r\n  } = props;\r\n  const [open, setOpen] = useState(false);\r\n  const [value, setValue] = useState(\"\");\r\n  const [characters, setCharacters] = useState(0);\r\n\r\n  const onSelectEmoji = useCallback(\r\n    emoji => {\r\n      let _characters;\r\n      let _value = value + emoji.native;\r\n      if (maxCharacters) {\r\n        _characters = countWithEmojis(_value);\r\n        if (_characters > maxCharacters) {\r\n          return;\r\n        }\r\n      }\r\n      if (onChange) {\r\n        onChange(_value, _characters);\r\n      }\r\n      setValue(_value);\r\n      setCharacters(_characters);\r\n    },\r\n    [value, setValue, setCharacters, maxCharacters, onChange]\r\n  );\r\n\r\n  const handleTextFieldChange = useCallback(\r\n    event => {\r\n      const { target } = event;\r\n      const { value } = target;\r\n      let characters;\r\n      if (maxCharacters) {\r\n        characters = countWithEmojis(value);\r\n        if (characters > maxCharacters) {\r\n          return;\r\n        }\r\n      }\r\n      if (onChange) {\r\n        onChange(value, characters);\r\n      }\r\n      setValue(value);\r\n      setCharacters(characters);\r\n    },\r\n    [maxCharacters, onChange, setValue, setCharacters]\r\n  );\r\n\r\n  const toggleOpen = useCallback(() => {\r\n    setOpen(!open);\r\n  }, [open, setOpen]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid spacing={0} container>\r\n        <Grid\r\n          item\r\n          xs={rightContent ? 8 : 12}\r\n          sm={rightContent ? 9 : 12}\r\n          lg={rightContent ? 10 : 12}\r\n          className={classes.relative}\r\n        >\r\n          <TextField\r\n            fullWidth\r\n            multiline\r\n            variant=\"outlined\"\r\n            rows={6}\r\n            onInput={handleTextFieldChange}\r\n            value={value}\r\n            placeholder={placeholder}\r\n            InputProps={{\r\n              classes: {\r\n                notchedOutline: inputClassName ? inputClassName : null\r\n              }\r\n            }}\r\n          />\r\n          <div className={classes.floatButtonWrapper}>\r\n            <IconButton onClick={toggleOpen} size=\"large\">\r\n              {open ? (\r\n                <CloseIcon color=\"primary\" />\r\n              ) : (\r\n                <EmojiEmotionsIcon color=\"primary\" />\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n        </Grid>\r\n        {rightContent && (\r\n          <Grid item xs={4} sm={3} lg={2}>\r\n            {rightContent}\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n      {maxCharacters && (\r\n        <FormHelperText error={characters >= maxCharacters}>\r\n          {`${characters}/${maxCharacters} characters`}\r\n        </FormHelperText>\r\n      )}\r\n      <Collapse in={open}>\r\n        <Box mt={1}>\r\n          <Picker\r\n            set={emojiSet}\r\n            color={theme.palette.primary.main}\r\n            style={{ width: \"100%\" }}\r\n            onSelect={onSelectEmoji}\r\n            emojisToShowFilter={emojisToShowFilter}\r\n          />\r\n        </Box>\r\n      </Collapse>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nEmojiTextarea.propTypes = {\r\n  theme: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  emojiSet: PropTypes.string.isRequired,\r\n  rightContent: PropTypes.element,\r\n  placeholder: PropTypes.string,\r\n  maxCharacters: PropTypes.number,\r\n  onChange: PropTypes.func,\r\n  inputClassName: PropTypes.string\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(EmojiTextarea);\r\n"],"names":["MAX_SAFE_INTEGER","argsTag","mapTag","promiseTag","setTag","weakMapTag","dataViewTag","reIsHostCtor","reIsUint","rsAstralRange","rsComboMarksRange","rsComboSymbolsRange","rsVarRange","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","rsZWJ","reOptMod","rsOptVar","rsSeq","join","rsSymbol","reUnicode","RegExp","reHasUnicode","root","global","Object","Function","baseValues","object","props","array","iteratee","index","length","result","Array","arrayMap","key","mapToArray","map","size","forEach","value","setToArray","set","stringToArray","string","test","hasUnicode","match","unicodeToArray","split","asciiToArray","funcProto","prototype","objectProto","coreJsData","maskSrcKey","uid","exec","keys","IE_PROTO","funcToString","toString","hasOwnProperty","objectToString","reIsNative","call","replace","Symbol","iteratorSymbol","iterator","undefined","propertyIsEnumerable","nativeKeys","func","transform","arg","DataView","getNative","Map","Promise","Set","WeakMap","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","arrayLikeKeys","inherited","isArray","isObjectLike","isArrayLike","isArrayLikeObject","isArguments","n","baseTimes","String","skipIndexes","isIndex","push","baseIsNative","isObject","isMasked","pattern","isFunction","e","isHostObject","baseKeys","Ctor","constructor","proto","isPrototype","getValue","getTag","ArrayBuffer","resolve","ctorString","isLength","tag","type","values","module","exports","isString","source","copyArray","data","next","done","iteratorToArray","str","toArray","emojisToShowFilter","emoji","unified","withStyles","theme","typography","body1","display","border","marginTop","spacing","paddingRight","paddingLeft","paddingBottom","top","right","fontSize","height","floatButtonWrapper","position","bottom","floatButtonSVG","color","palette","primary","light","relative","withTheme","classes","rightContent","placeholder","maxCharacters","emojiSet","inputClassName","onChange","open","setOpen","useState","setValue","characters","setCharacters","onSelectEmoji","useCallback","_characters","_value","native","countWithEmojis","handleTextFieldChange","event","target","toggleOpen","_jsxs","Fragment","children","Grid","container","item","xs","sm","lg","className","_jsx","TextField","fullWidth","multiline","variant","rows","onInput","InputProps","notchedOutline","IconButton","onClick","CloseIcon","EmojiEmotionsIcon","FormHelperText","error","Collapse","in","Box","mt","Picker","main","style","width","onSelect"],"sourceRoot":""}