{"version":3,"file":"static/js/982.8e69e542.chunk.js","mappings":"4NAIA,SAASA,EAAcC,GACrB,MAAM,MAAEC,EAAK,SAAEC,EAAQ,MAAEC,GAAUH,EAC7BI,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,GAAa,IACxCH,EACHI,QAAS,CACPC,QAAS,CACPC,KAAMR,OAINS,EAAc,CAACC,IAAA,IAAC,MAAEV,EAAK,MAAEE,EAAK,SAAED,KAAaU,GAAGD,EAAA,OAAKC,CAAC,EAAxC,CAA0CZ,GAC9D,OACEa,EAAAA,EAAAA,KAACC,EAAAA,EAAoB,CAACC,aAAW,EAAAb,UAC/BW,EAAAA,EAAAA,KAACG,EAAAA,EAAa,CAACb,MAAOC,EAAYF,UAChCW,EAAAA,EAAAA,KAACI,EAAAA,EAAM,IAAKP,EAAaT,MAAM,UAASC,SACrCA,OAKX,CAMA,SAAegB,EAAAA,EAAAA,MAAKnB,E,wICVpB,SAASoB,EAASC,EAAcC,EAAclB,GAC5C,OAAIiB,EACKjB,EAAMI,QAAQe,QAAQb,KAE3BY,EACKlB,EAAMI,QAAQgB,MAAMC,KAEtBrB,EAAMI,QAAQkB,OAAOC,KAC9B,CA0CA,SAAeC,EAAAA,EAAAA,GA9DA,CACbC,OAAQ,CACNC,YAAa,EACbC,YAAa,sBACbC,oBAAqB,EACrBC,uBAAwB,GAE1BC,WAAY,CACVC,OAAQ,SAsDsB,CAAEC,WAAW,GAA/C,CAxCA,SAAkBnC,GAChB,MAAM,OAAEoC,EAAM,OAAEC,EAAM,WAAEJ,EAAU,SAAE/B,EAAQ,QAAEoC,EAAO,MAAEC,EAAK,MAAEpC,GAAUH,GAClE,aACJwC,EAAY,cACZC,EAAa,aACbrB,EAAY,aACZC,IACEqB,EAAAA,EAAAA,IAAY,CACdL,OAAQA,EACRD,OAAQA,IAEV,OACEO,EAAAA,EAAAA,MAACC,EAAAA,EAAG,IAAKJ,IAAgBN,OAAO,OAAMhC,SAAA,EACpCW,EAAAA,EAAAA,KAAA,YAAW4B,OACX5B,EAAAA,EAAAA,KAACd,EAAAA,EAAa,CACZ8C,WAAS,EACTC,UAAWC,IACTd,EAAaK,EAAQL,WAAa,KAClCK,EAAQV,QAEVoB,QAAQ,WACR/C,MAAOkB,EAASC,EAAcC,EAAclB,GAC5CoC,MAAOA,EAAMrC,SAEZA,MAIT,E","sources":["shared/components/ColoredButton.js","shared/components/Dropzone.js"],"sourcesContent":["import React, { memo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, createTheme, ThemeProvider, StyledEngineProvider, adaptV4Theme } from \"@mui/material\";\r\n\r\nfunction ColoredButton(props) {\r\n  const { color, children, theme } = props;\r\n  const buttonTheme = createTheme(adaptV4Theme({\r\n    ...theme,\r\n    palette: {\r\n      primary: {\r\n        main: color\r\n      }\r\n    }\r\n  }));\r\n  const buttonProps = (({ color, theme, children, ...o }) => o)(props);\r\n  return (\r\n    <StyledEngineProvider injectFirst>\r\n      <ThemeProvider theme={buttonTheme}>\r\n        <Button {...buttonProps} color=\"primary\">\r\n          {children}\r\n        </Button>\r\n      </ThemeProvider>\r\n    </StyledEngineProvider>\r\n  );\r\n}\r\n\r\nColoredButton.propTypes = {\r\n  color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default memo(ColoredButton);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport classNames from \"classnames\";\r\nimport { Box } from \"@mui/material\";\r\nimport withStyles from '@mui/styles/withStyles';\r\nimport ColoredButton from \"./ColoredButton\";\r\n\r\nconst styles = {\r\n  button: {\r\n    borderWidth: 1,\r\n    borderColor: \"rgba(0, 0, 0, 0.23)\",\r\n    borderTopLeftRadius: 0,\r\n    borderBottomLeftRadius: 0\r\n  },\r\n  fullHeight: {\r\n    height: \"100%\"\r\n  }\r\n};\r\n\r\nfunction getColor(isDragAccept, isDragReject, theme) {\r\n  if (isDragAccept) {\r\n    return theme.palette.success.main;\r\n  }\r\n  if (isDragReject) {\r\n    return theme.palette.error.dark;\r\n  }\r\n  return theme.palette.common.black;\r\n}\r\n\r\nfunction Dropzone(props) {\r\n  const { onDrop, accept, fullHeight, children, classes, style, theme } = props;\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragAccept,\r\n    isDragReject\r\n  } = useDropzone({\r\n    accept: accept,\r\n    onDrop: onDrop\r\n  });\r\n  return (\r\n    <Box {...getRootProps()} height=\"100%\">\r\n      <input {...getInputProps()} />\r\n      <ColoredButton\r\n        fullWidth\r\n        className={classNames(\r\n          fullHeight ? classes.fullHeight : null,\r\n          classes.button\r\n        )}\r\n        variant=\"outlined\"\r\n        color={getColor(isDragAccept, isDragReject, theme)}\r\n        style={style}\r\n      >\r\n        {children}\r\n      </ColoredButton>\r\n    </Box>\r\n  );\r\n}\r\n\r\nDropzone.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  onDrop: PropTypes.func,\r\n  accept: PropTypes.string,\r\n  fullHeight: PropTypes.bool,\r\n  style: PropTypes.object,\r\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(Dropzone);\r\n"],"names":["ColoredButton","props","color","children","theme","buttonTheme","createTheme","adaptV4Theme","palette","primary","main","buttonProps","_ref","o","_jsx","StyledEngineProvider","injectFirst","ThemeProvider","Button","memo","getColor","isDragAccept","isDragReject","success","error","dark","common","black","withStyles","button","borderWidth","borderColor","borderTopLeftRadius","borderBottomLeftRadius","fullHeight","height","withTheme","onDrop","accept","classes","style","getRootProps","getInputProps","useDropzone","_jsxs","Box","fullWidth","className","classNames","variant"],"sourceRoot":""}